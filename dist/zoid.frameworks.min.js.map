{"version":3,"sources":["webpack://zoid/webpack/universalModuleDefinition","webpack://zoid/webpack/bootstrap","webpack://zoid/./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack://zoid/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://zoid/./node_modules/@babel/runtime/helpers/esm/extends.js","webpack://zoid/./node_modules/zalgo-promise/src/utils.js","webpack://zoid/./node_modules/zalgo-promise/src/exceptions.js","webpack://zoid/./node_modules/zalgo-promise/src/flush.js","webpack://zoid/./node_modules/zalgo-promise/src/promise.js","webpack://zoid/./node_modules/cross-domain-utils/src/util.js","webpack://zoid/./node_modules/cross-domain-utils/src/constants.js","webpack://zoid/./node_modules/cross-domain-utils/src/utils.js","webpack://zoid/./node_modules/cross-domain-safe-weakmap/src/util.js","webpack://zoid/./node_modules/cross-domain-safe-weakmap/src/weakmap.js","webpack://zoid/./node_modules/belter/src/util.js","webpack://zoid/./node_modules/cross-domain-safe-weakmap/src/native.js","webpack://zoid/./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","webpack://zoid/./node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","webpack://zoid/./node_modules/@babel/runtime/helpers/esm/construct.js","webpack://zoid/./node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js","webpack://zoid/./node_modules/@babel/runtime/helpers/esm/isNativeFunction.js","webpack://zoid/./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","webpack://zoid/./node_modules/belter/src/dom.js","webpack://zoid/./node_modules/belter/src/css.js","webpack://zoid/./node_modules/post-robot/src/global.js","webpack://zoid/./node_modules/belter/src/constants.js","webpack://zoid/./node_modules/post-robot/src/lib/hello.js","webpack://zoid/./node_modules/post-robot/src/conf/constants.js","webpack://zoid/./node_modules/post-robot/src/lib/windows.js","webpack://zoid/./node_modules/universal-serialize/src/common.js","webpack://zoid/./node_modules/universal-serialize/src/constants.js","webpack://zoid/./node_modules/universal-serialize/src/serialize.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/function.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/error.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/promise.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/regex.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/date.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/array.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/object.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/string.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/number.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/boolean.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/null.js","webpack://zoid/./node_modules/universal-serialize/src/deserialize.js","webpack://zoid/./node_modules/post-robot/src/bridge/common.js","webpack://zoid/./node_modules/post-robot/src/bridge/parent.js","webpack://zoid/./node_modules/post-robot/src/bridge/setup.js","webpack://zoid/./node_modules/post-robot/src/bridge/bridge.js","webpack://zoid/./node_modules/post-robot/src/bridge/child.js","webpack://zoid/./node_modules/post-robot/src/serialize/window.js","webpack://zoid/./node_modules/post-robot/src/serialize/function.js","webpack://zoid/./node_modules/post-robot/src/serialize/serialize.js","webpack://zoid/./node_modules/post-robot/src/serialize/promise.js","webpack://zoid/./node_modules/post-robot/src/drivers/send/strategies.js","webpack://zoid/./node_modules/post-robot/src/drivers/send/index.js","webpack://zoid/./node_modules/post-robot/src/drivers/listeners.js","webpack://zoid/./node_modules/post-robot/src/drivers/receive/types.js","webpack://zoid/./node_modules/post-robot/src/drivers/receive/index.js","webpack://zoid/./node_modules/post-robot/src/public/on.js","webpack://zoid/./node_modules/post-robot/src/lib/compat.js","webpack://zoid/./node_modules/post-robot/src/public/send.js","webpack://zoid/./node_modules/post-robot/src/index.js","webpack://zoid/./node_modules/post-robot/src/conf/config.js","webpack://zoid/./node_modules/post-robot/src/setup.js","webpack://zoid/./node_modules/post-robot/src/clean.js","webpack://zoid/./src/lib/global.js","webpack://zoid/./src/lib/serialize.js","webpack://zoid/./src/constants.js","webpack://zoid/./src/child/props.js","webpack://zoid/./src/child/window.js","webpack://zoid/./src/child/child.js","webpack://zoid/./src/parent/props.js","webpack://zoid/./src/parent/parent.js","webpack://zoid/./src/drivers/react.js","webpack://zoid/./src/drivers/vue.js","webpack://zoid/./src/drivers/angular.js","webpack://zoid/./src/drivers/angular2.js","webpack://zoid/./src/component/templates/container.js","webpack://zoid/./src/component/templates/component.js","webpack://zoid/./src/component/props.js","webpack://zoid/./src/component/component.js"],"names":["root","factory","exports","module","define","amd","self","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","hasOwnProperty","p","s","_setPrototypeOf","setPrototypeOf","__proto__","_inheritsLoose","subClass","superClass","prototype","constructor","_extends","assign","target","arguments","length","source","apply","isPromise","item","Promise","window","Window","toString","then","err","flushPromise","dispatchedErrors","possiblyUnhandledPromiseHandlers","activeCount","flushActive","promise","resolve","startActive","endActive","ZalgoPromise","handler","resolved","rejected","errorHandled","error","handlers","dispatching","stack","result","isAsync","res","reject","Error","dispatch","setTimeout","indexOf","push","j","dispatchPossiblyUnhandledError","asyncReject","chain","firstPromise","secondPromise","onSuccess","onError","catch","undefined","finally","onFinally","try","timeout","time","clearTimeout","toPromise","TypeError","all","promises","count","results","prom","hash","awaitPromises","map","items","method","onPossiblyUnhandledException","cancel","splice","context","args","delay","flush","isRegex","WINDOW_TYPE","IFRAME","POPUP","IE_WIN_ACCESS_ERROR","isAboutProtocol","win","location","protocol","getParent","parent","getOpener","opener","canReadFromWindow","getActualDomain","PROTOCOL","host","getDomain","domain","mockDomain","isSameDomain","desc","getOwnPropertyDescriptor","isActuallySameDomain","assertSameDomain","isAncestorParent","child","childParent","getParents","getFrames","frames","len","frame","getAllChildFrames","getTop","top","getAllFramesInWindow","iframeWindows","iframeFrames","isWindowClosed","allowMock","closed","message","mockclosed","iframeIndex","collection","safeIndexOf","contentWindow","parentNode","doc","ownerDocument","documentElement","contains","isFrameWindowClosed","getUserAgent","navigator","mockUserAgent","userAgent","getFrameByName","winFrames","childFrame","isOpener","getAncestor","anyMatch","collection1","collection2","item1","getDistanceFromTop","distance","isSameTopWindow","win1","win2","top1","top2","allFrames1","allFrames2","opener1","opener2","matchDomain","pattern","origin","Array","isArray","Boolean","match","JSON","stringify","some","subpattern","getDomainFromUrl","url","split","slice","join","onCloseWindow","callback","maxtime","Infinity","check","isWindow","obj","__cross_domain_utils_window_check__","normalizeMockUrl","closeWindow","close","objectIDs","CrossDomainSafeWeakMap","weakmap","keys","values","Math","random","WeakMap","freeze","testWeakMap","testKey","set","hasNativeWeakMap","_cleanupClosedWindows","delete","isSafeToReadWrite","entry","writable","index","has","getOrSet","_getPrototypeOf","getPrototypeOf","_isNativeReflectConstruct","Reflect","construct","sham","Proxy","Date","e","_construct","Parent","Class","isNativeReflectConstruct","a","instance","Function","_wrapNativeSuper","_cache","Map","Wrapper","configurable","getFunctionName","fn","__name__","displayName","setFunctionName","base64encode","str","btoa","encodeURIComponent","replace","p1","String","fromCharCode","parseInt","Buffer","from","uniqueID","chars","charAt","floor","toISOString","toLowerCase","serializeArgs","subkey","val","uid","getObjectID","getEmptyObject","memoizeGlobalIndex","memoizeGlobalIndexValidFrom","memoize","options","simpleCache","thisCache","thisNamespace","cacheTime","memoizeIndex","memoizedFunction","cache","cacheKey","cacheResult","now","reset","memoizePromise","memoizedPromiseFunction","inlineMemoize","logic","__inline_memoize_cache__","noop","once","called","stringifyError","level","newErr","extend","identity","safeInterval","loop","dasherizeToCamel","string","g","toUpperCase","defineLazyProp","arrayFrom","isObjectObject","isPlainObject","replaceObject","replacer","fullKey","itemKey","isDefined","cleanup","cleanErr","tasks","cleaned","register","task","shift","assertExists","thing","clear","ExtendableError","captureStackTrace","ReferenceError","isDocumentReady","document","body","readyState","isDocumentInteractive","urlEncode","parseQuery","queryString","params","pair","decodeURIComponent","extendQuery","originalQuery","props","filter","appendChild","container","isElement","element","Element","nodeType","style","getElementSafe","id","querySelector","elementReady","el","interval","setInterval","clearInterval","awaitFrameLoadPromises","PopupOpenError","awaitFrameLoad","addEventListener","cleanIframes","linkFrameWindow","awaitFrameWindow","loadedFrame","iframe","tag","styleText","createElement","class","className","setAttribute","attributes","styleSheet","cssText","createTextNode","html","innerHTML","allowTransparency","backgroundColor","border","isIE","hasAttribute","getElement","event","removeEventListener","showElement","setProperty","hideElement","destroyElement","removeChild","isElementClosed","onResize","width","height","currentWidth","offsetWidth","currentHeight","offsetHeight","canceled","observer","getClientRects","isElementVisible","newWidth","newHeight","ResizeObserver","observe","MutationObserver","childList","subtree","characterData","disconnect","isShadowElement","currentScript","getCurrentScript","getStackTrace","stackDetails","exec","scriptLocation","getElementsByTagName","reverse","script","src","inferCurrentScript","currentUID","isPerc","test","toNum","toPx","toCSS","normalizeDimension","dim","max","getGlobal","globalKey","__POST_ROBOT__","getAttribute","ATTRIBUTES","hashedString","total","charCodeAt","abs","strHashStr","dataset","getObj","globalStore","defStore","store","storeKey","defVal","del","WildCard","getWildcard","global","WINDOW_WILDCARD","windowStore","winStore","getStore","getInstanceID","resolveHelloPromise","helloPromises","existingPromise","newPromise","sayHello","send","instanceID","data","getWindowInstanceID","awaitWindowHello","getHelloPromise","markWindowKnown","isSerializedType","__type__","determineType","serializeType","type","__val__","SERIALIZER","code","toJSON","defaultSerializers","DESERIALIZER","RegExp","defaultDeserializers","needsBridgeForBrowser","needsBridgeForWin","needsBridgeForDomain","needsBridge","getBridgeName","BRIDGE_NAME_PREFIX","isBridge","documentBodyReady","registerRemoteWindow","findRemoteWindow","remoteWinPromise","registerRemoteSendMessage","sendMessage","remoteWin","remoteDomain","fireAndForget","rejectRemoteSendMessage","linkWindow","popupWindowsByName","popupWindowsByWin","winName","details","setupBridge","windowOpen","on","receiveMessage","open","last","bridgePromise","bridge","getWindowDetails","listenForOpenTunnel","openTunnelToParent","canary","tunnelWindows","parentWindow","cleanTunnelWindows","addTunnelWindow","tunnelWindow","setupOpenTunnelToParent","openTunnelToOpener","cleanupProxyWindows","idToProxyWindow","shouldClean","getSerializedWindow","winPromise","windowNamePromise","windowTypePromise","getType","getName","focus","isClosed","setLocation","href","setName","sameDomain","frameElement","querySelectorAll","getFrameForWindow","ProxyWindow","serializedWindow","isProxyWindow","actualWindow","actualWindowPromise","getID","setWindow","isPopup","isPopupPromise","getNamePromise","reopenPromise","focusPromise","getWindow","awaitWindow","matchWindow","proxyInstanceID","knownWindowInstanceID","unwrap","serialize","toProxyWindow","deserialize","addMethod","methodStore","proxyWindowMethods","lookupMethod","serializeFunction","destination","meth","methodSource","arg","__id__","serializeMessage","serializers","serializer","serializePromise","deserializeMessage","deserializers","parse","deserializer","serializedPromise","deserializePromise","serializedFunction","getDeserializedFunction","opts","crossDomainFunctionWrapper","__origin__","__source__","deserializeFunction","SEND_MESSAGE_STRATEGIES","domainBuffer","buffer","serializedMessage","strategies","errors","strategyName","getResponseListener","deleteResponseListener","isResponseListenerErrored","getRequestListener","requestListeners","winQualifier","nameListeners","domainListeners","listener","regex","handleRequest","logName","sendResponse","ack","pathname","handleError","handleAck","handleResponse","receivedMessages","messages","parsedMessage","parseMessages","deserializeMessages","requestListener","addRequestListener","listenersCollection","existingListener","regexListeners","regexListener","strDomain","errorHandler","postMessage","messagingChild","messagingParent","sendBridgeMessage","foreignGlobal","domainMatcher","responseTimeout","childTimeout","validateOptions","actualParent","isAncestor","targetDomain","actualDomain","normalizedDomain","normalizeDomain","responseListener","addResponseListener","reqPromises","markResponseListenerErrored","totalAckTimeout","isWindowKnown","totalResTimeout","ackTimeout","resTimeout","cancelled","internalSerializeMessage","internalDeserializeMessage","cleanUpWindow","getProxyObject","openBridge","bridges","bridgeFrames","openBridgeFrame","linkUrl","hasBridge","destroyBridges","PROP_TYPE","STRING","OBJECT","FUNCTION","BOOLEAN","NUMBER","ARRAY","PROP_SERIALIZATION","DOTIFY","BASE64","CONTEXT","EVENT","RENDER","RENDERED","DISPLAY","ERROR","CLOSE","DESTROY","PROPS","RESIZE","FOCUS","normalizeChildProp","propsDef","helpers","prop","childDecorate","onProps","resize","getParentDomain","show","hide","export","parseChildWindowName","windowName","zoidcomp","encodedPayload","atob","base64decode","getChildPayload","destroy","getQueryParam","queryParam","getQueryValue","queryValue","parentComponent","overrides","parentWin","triggered","currentProxyWin","currentProxyContainer","childComponent","containerTemplate","prerenderTemplate","dimensions","autoResize","domainMatch","xports","initPromise","handledErrors","clean","state","internalState","visible","eventName","handlerList","trigger","triggerOnce","onErrorOverride","getProxyContainerOverride","getProxyContainer","showOverride","hideOverride","closeOverride","renderContainerOverride","renderContainer","getProxyWindowOverride","getProxyWindow","setProxyWinOverride","setProxyWin","openFrameOverride","openFrame","openPrerenderFrameOverride","openPrerenderFrame","prerenderOverride","prerender","openOverride","openPrerenderOverride","openPrerender","watchForUnloadOverride","watchForUnload","getInternalStateOverride","getInternalState","setInternalStateOverride","setInternalState","getPropsForChild","sendToChild","newInternalState","windowProp","proxyWin","containerElement","insertShadowSlot","shadowHost","shadowRoot","getShadowRoot","getShadowHost","slotName","slot","slotProvider","setState","getUrl","getAttributes","getChildDomain","getDomainMatcher","title","proxyPrerenderFrame","prerenderFrame","prerenderFrameWindow","getWindowRef","windows","initChild","childExports","proxyFrame","outerWidth","left","round","screenX","screen","outerHeight","screenY","status","toolbar","menubar","resizable","scrollbars","popup","unloadWindowListener","closeParentWindowListener","checkWindowClose","secondIsClosed","exportsPromise","resolveExports","actualExports","renderTemplate","renderer","proxyPrerenderWin","prerenderWindow","isBlankDomain","tagName","children","writeElementToWindow","prerenderResizeListener","proxyContainer","innerContainer","containerWatcher","sacrificialFrame","sacrificialFrameWin","mutationObservers","elementClosed","mutationElement","parentElement","mutationObserver","display","frameWin","watchElementForClose","getHelpers","updateProps","setProps","newProps","isUpdate","inputProps","propNames","aliases","propDef","alias","default","decorate","required","extendProps","childProps","init","onRender","onDisplay","onRendered","onClose","onDestroy","onFocus","render","ZOID","childDomain","checkAllowRender","delegatePromise","delegateProps","propName","allowDelegate","childOverridesPromise","POST_MESSAGE","parentComp","getDelegateOverrides","childOverrides","delegate","watchForUnloadPromise","buildUrlPromise","serialization","dotify","prefix","newobj","every","dotkey","propsToQuery","query","originalUrl","originalHash","hashString","extendUrl","onRenderPromise","getProxyContainerPromise","getProxyWindowPromise","buildWindowNamePromise","propRef","getPropsRef","propsRef","version","__ZOID__","parentDomain","checkClose","buildChildPayload","childPayload","openFramePromise","openPrerenderFramePromise","renderContainerPromise","openPromise","openPrerenderPromise","setStatePromise","prerenderPromise","setWindowNamePromise","loadUrlPromise","builtUrl","watchForClosePromise","watchForClose","onDisplayPromise","openBridgePromise","bridgeUrl","bridgeDomain","runTimeoutPromise","onRenderedPromise","getExports","react","React","ReactDOM","componentDidMount","findDOMNode","componentDidUpdate","Component","vue","Vue","component","inheritAttrs","mounted","$el","$attrs","reduce","acc","includes","watch","deep","angular","ng","directive","scope","restrict","controller","$scope","$element","safeApply","$root","$$phase","$apply","getProps","$watch","angular2","NgModule","ElementRef","NgZone","internalProps","zone","run","ComponentInstance","AngularComponent","selector","template","inputs","elementRef","_props","ngOnInit","targetElement","nativeElement","ngDoCheck","obj1","obj2","checked","equals","declarations","defaultContainerTemplate","div","cspNonce","classList","add","remove","defaultPrerenderTemplate","spinner","defaultNoop","decorateOnce","cleanInstances","cleanZoid","allowDelegateListener","delegateListener","allowedParentDomains","defaultContext","validate","eligible","logger","info","normalizeOptions","driverCache","instances","isChild","payload","registerChild","xprops","components","onPropHandlers","parentExports","parentComponentWindow","ref","getNthParent","ancestor","getParentComponentWindow","xport","normalizedProps","normalizeChildProps","checkParentDomain","getPropsByRef","eligibility","reason","getDefaultContext","finalContext","getDefaultContainer","isEligible","clone","renderTo","driver","driverName","dep","drivers","canRenderTo","initialized","sourceElement","originalEvent","messageListener","listenForMessages","initHello","comp","destroyComponents","destroyPromise","destroyAll","responseListeners","cancelResponseListeners"],"mappings":"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","file":"zoid.frameworks.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"zoid\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"zoid\"] = factory();\n\telse\n\t\troot[\"zoid\"] = factory();\n})((typeof self !== 'undefined' ? self : this), function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"@babel/runtime/helpers/esm/setPrototypeOf\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}","export default function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","/* @flow */\n\nexport function isPromise(item : mixed) : boolean {\n    try {\n        if (!item) {\n            return false;\n        }\n\n        if (typeof Promise !== 'undefined' && item instanceof Promise) {\n            return true;\n        }\n\n        if (typeof window !== 'undefined' && typeof window.Window === 'function' && item instanceof window.Window) {\n            return false;\n        }\n\n        if (typeof window !== 'undefined' && typeof window.constructor === 'function' && item instanceof window.constructor) {\n            return false;\n        }\n\n        const toString = ({}).toString;\n\n        if (toString) {\n            const name = toString.call(item);\n\n            if (name === '[object Window]' || name === '[object global]' || name === '[object DOMWindow]') {\n                return false;\n            }\n        }\n\n        if (typeof item.then === 'function') {\n            return true;\n        }\n    } catch (err) {\n        return false;\n    }\n\n    return false;\n}\n","/* @flow */\n\nimport type { ZalgoPromise } from './promise';\n\nconst dispatchedErrors = [];\nconst possiblyUnhandledPromiseHandlers : Array<(mixed, promise? : ZalgoPromise<mixed>) => void> = [];\n\nexport function dispatchPossiblyUnhandledError<T>(err : mixed, promise : ZalgoPromise<T>) {\n\n    if (dispatchedErrors.indexOf(err) !== -1) {\n        return;\n    }\n\n    dispatchedErrors.push(err);\n\n    setTimeout(() => {\n        if (__DEBUG__) {\n            // $FlowFixMe\n            throw new Error(`${ err.stack || err.toString() }\\n\\nFrom promise:\\n\\n${ promise.stack }`);\n        }\n\n        throw err;\n    }, 1);\n\n    for (let j = 0; j < possiblyUnhandledPromiseHandlers.length; j++) {\n        // $FlowFixMe\n        possiblyUnhandledPromiseHandlers[j](err, promise);\n    }\n}\n\nexport function onPossiblyUnhandledException(handler : (mixed, promise? : ZalgoPromise<mixed>) => void) : {| cancel : () => void |} {\n    possiblyUnhandledPromiseHandlers.push(handler);\n\n    return {\n        cancel() {\n            possiblyUnhandledPromiseHandlers.splice(possiblyUnhandledPromiseHandlers.indexOf(handler), 1);\n        }\n    };\n}\n","/* @flow */\n\nimport type { ZalgoPromise } from './promise';\n\nlet activeCount = 0;\nlet flushPromise;\n\nfunction flushActive() {\n    if (!activeCount && flushPromise) {\n        const promise = flushPromise;\n        flushPromise = null;\n        promise.resolve();\n    }\n}\n\nexport function startActive() {\n    activeCount += 1;\n}\n\nexport function endActive() {\n    activeCount -= 1;\n    flushActive();\n}\n\nexport function awaitActive(Zalgo : Class<ZalgoPromise<*>>) : ZalgoPromise<void> { // eslint-disable-line no-undef\n    const promise = flushPromise = flushPromise || new Zalgo();\n    flushActive();\n    return promise;\n}\n","/* @flow */\n\nimport { isPromise } from './utils';\nimport { onPossiblyUnhandledException, dispatchPossiblyUnhandledError } from './exceptions';\nimport { startActive, endActive, awaitActive } from './flush';\n\nexport class ZalgoPromise<R : mixed> {\n\n    resolved : boolean\n    rejected : boolean\n    errorHandled : boolean\n    value : R\n    error : mixed\n    // eslint-disable-next-line flowtype/no-mutable-array\n    handlers : Array<{|\n        promise : ZalgoPromise<*>,\n        onSuccess : void | (result : R) => mixed,\n        onError : void | (error : mixed) => mixed\n    |}>\n    dispatching : boolean\n    stack : string\n\n    constructor(handler : ?(resolve : (result : R) => void, reject : (error : mixed) => void) => void) {\n\n        this.resolved = false;\n        this.rejected = false;\n        this.errorHandled = false;\n\n        this.handlers = [];\n\n        if (handler) {\n\n            let result;\n            let error;\n            let resolved = false;\n            let rejected = false;\n            let isAsync = false;\n\n            startActive();\n\n            try {\n                handler(res => {\n                    if (isAsync) {\n                        this.resolve(res);\n                    } else {\n                        resolved = true;\n                        result = res;\n                    }\n\n                }, err => {\n                    if (isAsync) {\n                        this.reject(err);\n                    } else {\n                        rejected = true;\n                        error = err;\n                    }\n                });\n\n            } catch (err) {\n                endActive();\n                this.reject(err);\n                return;\n            }\n\n            endActive();\n\n            isAsync = true;\n\n            if (resolved) {\n                // $FlowFixMe\n                this.resolve(result);\n            } else if (rejected) {\n                this.reject(error);\n            }\n        }\n\n        if (__DEBUG__) {\n            try {\n                throw new Error(`ZalgoPromise`);\n            } catch (err) {\n                this.stack = err.stack;\n            }\n        }\n    }\n\n    resolve(result : R) : ZalgoPromise<R> {\n        if (this.resolved || this.rejected) {\n            return this;\n        }\n\n        if (isPromise(result)) {\n            throw new Error('Can not resolve promise with another promise');\n        }\n\n        this.resolved = true;\n        this.value = result;\n        this.dispatch();\n\n        return this;\n    }\n\n    reject(error : mixed) : ZalgoPromise<R> {\n        if (this.resolved || this.rejected) {\n            return this;\n        }\n\n        if (isPromise(error)) {\n            throw new Error('Can not reject promise with another promise');\n        }\n\n        if (!error) {\n            // $FlowFixMe\n            const err = (error && typeof error.toString === 'function' ? error.toString() : Object.prototype.toString.call(error));\n            error = new Error(`Expected reject to be called with Error, got ${ err }`);\n        }\n\n        this.rejected = true;\n        this.error = error;\n\n        if (!this.errorHandled) {\n            setTimeout(() => {\n                if (!this.errorHandled) {\n                    dispatchPossiblyUnhandledError(error, this);\n                }\n            }, 1);\n        }\n\n        this.dispatch();\n\n        return this;\n    }\n\n    asyncReject(error : mixed) : ZalgoPromise<R> {\n        this.errorHandled = true;\n        this.reject(error);\n        return this;\n    }\n    \n    dispatch() {\n\n        const { dispatching, resolved, rejected, handlers } = this;\n\n        if (dispatching) {\n            return;\n        }\n\n        if (!resolved && !rejected) {\n            return;\n        }\n\n        this.dispatching = true;\n        startActive();\n\n        const chain = <T>(firstPromise : ZalgoPromise<T>, secondPromise : ZalgoPromise<T>) => {\n            return firstPromise.then(res => {\n                secondPromise.resolve(res);\n            }, err => {\n                secondPromise.reject(err);\n            });\n        };\n\n        for (let i = 0; i < handlers.length; i++) {\n\n            const { onSuccess, onError, promise } = handlers[i];\n\n            let result;\n\n            if (resolved) {\n\n                try {\n                    result = onSuccess ? onSuccess(this.value) : this.value;\n                } catch (err) {\n                    promise.reject(err);\n                    continue;\n                }\n\n            } else if (rejected) {\n\n                if (!onError) {\n                    promise.reject(this.error);\n                    continue;\n                }\n\n                try {\n                    result = onError(this.error);\n                } catch (err) {\n                    promise.reject(err);\n                    continue;\n                }\n            }\n\n            if (result instanceof ZalgoPromise && (result.resolved || result.rejected)) {\n\n                if (result.resolved) {\n                    promise.resolve(result.value);\n                } else {\n                    promise.reject(result.error);\n                }\n\n                result.errorHandled = true;\n\n            } else if (isPromise(result)) {\n\n                if (result instanceof ZalgoPromise && (result.resolved || result.rejected)) {\n                    if (result.resolved) {\n                        promise.resolve(result.value);\n                    } else {\n                        promise.reject(result.error);\n                    }\n\n                } else {\n                    // $FlowFixMe\n                    chain(result, promise);\n                }\n\n            } else {\n\n                promise.resolve(result);\n            }\n        }\n\n        handlers.length = 0;\n        this.dispatching = false;\n        endActive();\n    }\n\n    then<X : mixed, Y : mixed>(onSuccess : void | (result : R) => (ZalgoPromise<X> | Y), onError : void | (error : mixed) => (ZalgoPromise<X> | Y)) : ZalgoPromise<X | Y> {\n\n        if (onSuccess && typeof onSuccess !== 'function' && !onSuccess.call) {\n            throw new Error('Promise.then expected a function for success handler');\n        }\n\n        if (onError && typeof onError !== 'function' && !onError.call) {\n            throw new Error('Promise.then expected a function for error handler');\n        }\n\n        const promise : ZalgoPromise<X | Y> = new ZalgoPromise();\n\n        this.handlers.push({\n            promise,\n            onSuccess,\n            onError\n        });\n\n        this.errorHandled = true;\n\n        this.dispatch();\n\n        return promise;\n    }\n\n    catch<X : mixed, Y : mixed>(onError : (error : mixed) => ZalgoPromise<X> | Y) : ZalgoPromise<X | Y> {\n        return this.then(undefined, onError);\n    }\n\n    finally(onFinally : () => mixed) : ZalgoPromise<R> {\n\n        if (onFinally && typeof onFinally !== 'function' && !onFinally.call) {\n            throw new Error('Promise.finally expected a function');\n        }\n\n        return this.then((result) => {\n            return ZalgoPromise.try(onFinally)\n                .then(() => {\n                    return result;\n                });\n        }, (err) => {\n            return ZalgoPromise.try(onFinally)\n                .then(() => {\n                    throw err;\n                });\n        });\n    }\n\n    timeout(time : number, err : ?Error) : ZalgoPromise<R> {\n\n        if (this.resolved || this.rejected) {\n            return this;\n        }\n\n        const timeout = setTimeout(() => {\n\n            if (this.resolved || this.rejected) {\n                return;\n            }\n\n            this.reject(err || new Error(`Promise timed out after ${ time }ms`));\n\n        }, time);\n\n        return this.then(result => {\n            clearTimeout(timeout);\n            return result;\n        });\n    }\n\n    // $FlowFixMe\n    toPromise() : Promise<R> {\n        // $FlowFixMe\n        if (typeof Promise === 'undefined') {\n            throw new TypeError(`Could not find Promise`);\n        }\n        // $FlowFixMe\n        return Promise.resolve(this); // eslint-disable-line compat/compat\n    }\n\n    static resolve<X : mixed>(value : X | ZalgoPromise<X>) : ZalgoPromise<X> {\n\n        if (value instanceof ZalgoPromise) {\n            return value;\n        }\n\n        if (isPromise(value)) {\n            // $FlowFixMe\n            return new ZalgoPromise((resolve, reject) => value.then(resolve, reject));\n        }\n\n        return new ZalgoPromise().resolve(value);\n    }\n\n    static reject(error : mixed) : ZalgoPromise<R> {\n        return new ZalgoPromise().reject(error);\n    }\n\n    static asyncReject(error : mixed) : ZalgoPromise<R> {\n        return new ZalgoPromise().asyncReject(error);\n    }\n\n    static all<X : $ReadOnlyArray<mixed>>(promises : X) : ZalgoPromise<$TupleMap<X, <Y>(ZalgoPromise<Y> | Y) => Y>> { // eslint-disable-line no-undef\n\n        const promise = new ZalgoPromise();\n        let count = promises.length;\n        const results = [];\n\n        if (!count) {\n            promise.resolve(results);\n            return promise;\n        }\n\n        const chain = <T>(i : number, firstPromise : ZalgoPromise<T>, secondPromise : ZalgoPromise<T>) => {\n            return firstPromise.then(res => {\n                results[i] = res;\n                count -= 1;\n                if (count === 0) {\n                    promise.resolve(results);\n                }\n            }, err => {\n                secondPromise.reject(err);\n            });\n        };\n\n        for (let i = 0; i < promises.length; i++) {\n            const prom = promises[i];\n\n            if (prom instanceof ZalgoPromise) {\n                if (prom.resolved) {\n                    results[i] = prom.value;\n                    count -= 1;\n                    continue;\n                }\n            } else if (!isPromise(prom)) {\n                results[i] = prom;\n                count -= 1;\n                continue;\n            }\n\n            chain(i, ZalgoPromise.resolve(prom), promise);\n        }\n\n        if (count === 0) {\n            promise.resolve(results);\n        }\n\n        return promise;\n    }\n\n    static hash<O : Object>(promises : O) : ZalgoPromise<$ObjMap<O, <Y>(ZalgoPromise<Y> | Y) => Y>> { // eslint-disable-line no-undef\n        const result = {};\n        const awaitPromises = [];\n\n        for (const key in promises) {\n            if (promises.hasOwnProperty(key)) {\n                const value = promises[key];\n\n                if (isPromise(value)) {\n                    awaitPromises.push(value.then(res => {\n                        result[key] = res;\n                    }));\n                } else {\n                    result[key] = value;\n                }\n            }\n        }\n        \n        return ZalgoPromise.all(awaitPromises).then(() => result);\n    }\n\n    static map<T, X>(items : $ReadOnlyArray<T>, method : (T) => (ZalgoPromise<X> | X)) : ZalgoPromise<$ReadOnlyArray<X>> {\n        // $FlowFixMe\n        return ZalgoPromise.all(items.map(method));\n    }\n\n    static onPossiblyUnhandledException(handler : (err : mixed) => void) : {| cancel : () => void |} {\n        return onPossiblyUnhandledException(handler);\n    }\n\n    static try<X : mixed, Y : mixed, C : mixed, A : $ReadOnlyArray<mixed>>(method : (...args : A) => (ZalgoPromise<X> | Y), context : ?C, args : ?A) : ZalgoPromise<X | Y> {\n\n        if (method && typeof method !== 'function' && !method.call) {\n            throw new Error('Promise.try expected a function');\n        }\n\n        let result;\n\n        startActive();\n        \n        try {\n            // $FlowFixMe\n            result = method.apply(context, args || []);\n        } catch (err) {\n            endActive();\n            return ZalgoPromise.reject(err);\n        }\n\n        endActive();\n\n        return ZalgoPromise.resolve(result);\n    }\n\n    static delay(delay : number) : ZalgoPromise<void> {\n        return new ZalgoPromise(resolve => {\n            setTimeout(resolve, delay);\n        });\n    }\n\n    static isPromise(value : mixed) : boolean {\n\n        if (value && value instanceof ZalgoPromise) {\n            return true;\n        }\n\n        return isPromise(value);\n    }\n\n    static flush() : ZalgoPromise<void> {\n        return awaitActive(ZalgoPromise);\n    }\n}\n","/* @flow */\n\nexport function isRegex(item : mixed) : boolean {\n    return Object.prototype.toString.call(item) === '[object RegExp]';\n}\n\n// eslint-disable-next-line no-unused-vars\nexport function noop(...args : $ReadOnlyArray<mixed>) {\n    // pass\n}\n","/* @flow */\n\nexport const PROTOCOL = {\n    MOCK:  ('mock:' : 'mock:'),\n    FILE:  ('file:' : 'file:'),\n    ABOUT: ('about:' : 'about:')\n};\n\nexport const WILDCARD = '*';\n\nexport const WINDOW_TYPE = {\n    IFRAME: ('iframe' : 'iframe'),\n    POPUP:  ('popup' : 'popup')\n};\n","/* @flow */\n/* eslint max-lines: 0 */\n\nimport { isRegex, noop } from './util';\nimport type { CrossDomainWindowType, SameDomainWindowType, DomainMatcher } from './types';\nimport { PROTOCOL, WILDCARD } from './constants';\n\nconst IE_WIN_ACCESS_ERROR = 'Call was rejected by callee.\\r\\n';\n\nexport function isFileProtocol(win : SameDomainWindowType = window) : boolean {\n    return win.location.protocol === PROTOCOL.FILE;\n}\n\nexport function isAboutProtocol(win : SameDomainWindowType = window) : boolean {\n    return win.location.protocol === PROTOCOL.ABOUT;\n}\n\nexport function getParent(win? : CrossDomainWindowType = window) : ?CrossDomainWindowType {\n\n    if (!win) {\n        return;\n    }\n\n    try {\n        if (win.parent && win.parent !== win) {\n            return win.parent;\n        }\n    } catch (err) {\n        // pass\n    }\n}\n\nexport function getOpener(win? : CrossDomainWindowType = window) : ?CrossDomainWindowType {\n\n    if (!win) {\n        return;\n    }\n\n    // Make sure we're not actually an iframe which has had window.open() called on us\n    if (getParent(win)) {\n        return;\n    }\n\n    try {\n        return win.opener;\n    } catch (err) {\n        // pass\n    }\n}\n\nexport function canReadFromWindow(win : CrossDomainWindowType | SameDomainWindowType) : boolean {\n    try {\n        // $FlowFixMe\n        noop(win && win.location && win.location.href);\n        return true;\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\nexport function getActualDomain(win? : SameDomainWindowType = window) : string {\n\n    const location = win.location;\n\n    if (!location) {\n        throw new Error(`Can not read window location`);\n    }\n\n    const protocol = location.protocol;\n\n    if (!protocol) {\n        throw new Error(`Can not read window protocol`);\n    }\n\n    if (protocol === PROTOCOL.FILE) {\n        return `${ PROTOCOL.FILE }//`;\n    }\n\n    if (protocol === PROTOCOL.ABOUT) {\n\n        const parent = getParent(win);\n        if (parent && canReadFromWindow(parent)) {\n            // $FlowFixMe\n            return getActualDomain(parent);\n        }\n\n        return `${ PROTOCOL.ABOUT }//`;\n    }\n\n    const host = location.host;\n\n    if (!host) {\n        throw new Error(`Can not read window host`);\n    }\n\n    return `${ protocol }//${ host }`;\n}\n\nexport function getDomain(win? : SameDomainWindowType = window) : string {\n\n    const domain = getActualDomain(win);\n\n    if (domain && win.mockDomain && win.mockDomain.indexOf(PROTOCOL.MOCK) === 0) {\n        return win.mockDomain;\n    }\n\n    return domain;\n}\n\nexport function isBlankDomain(win : CrossDomainWindowType) : boolean {\n    try {\n        // $FlowFixMe\n        if (!win.location.href) {\n            return true;\n        }\n\n        if (win.location.href === 'about:blank') {\n            return true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\nexport function isActuallySameDomain(win : CrossDomainWindowType) : boolean {\n\n    try {\n        if (win === window) {\n            return true;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        const desc = Object.getOwnPropertyDescriptor(win, 'location');\n\n        if (desc && desc.enumerable === false) {\n            return false;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        // $FlowFixMe\n        if (isAboutProtocol(win) && canReadFromWindow(win)) {\n            return true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        // $FlowFixMe\n        if (getActualDomain(win) === getActualDomain(window)) {\n            return true;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\nexport function isSameDomain(win : CrossDomainWindowType | SameDomainWindowType) : boolean {\n\n    if (!isActuallySameDomain(win)) {\n        return false;\n    }\n\n    try {\n\n        if (win === window) {\n            return true;\n        }\n\n        // $FlowFixMe\n        if (isAboutProtocol(win) && canReadFromWindow(win)) {\n            return true;\n        }\n\n        // $FlowFixMe\n        if (getDomain(window) === getDomain(win)) {\n            return true;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\n\nexport function assertSameDomain(win : CrossDomainWindowType | SameDomainWindowType) : SameDomainWindowType {\n    if (!isSameDomain(win)) {\n        throw new Error(`Expected window to be same domain`);\n    }\n\n    // $FlowFixMe\n    return win;\n}\n\nexport function getParents(win : CrossDomainWindowType) : $ReadOnlyArray<CrossDomainWindowType> {\n\n    const result = [];\n\n    try {\n\n        while (win.parent !== win) {\n            result.push(win.parent);\n            win = win.parent;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    return result;\n}\n\nexport function isAncestorParent(parent : CrossDomainWindowType, child : CrossDomainWindowType) : boolean {\n\n    if (!parent || !child) {\n        return false;\n    }\n\n    const childParent = getParent(child);\n\n    if (childParent) {\n        return childParent === parent;\n    }\n\n    if (getParents(child).indexOf(parent) !== -1) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function getFrames(win : CrossDomainWindowType) : $ReadOnlyArray<CrossDomainWindowType> {\n\n    const result = [];\n\n    let frames;\n\n    try {\n        frames = win.frames;\n    } catch (err) {\n        frames = win;\n    }\n\n    let len;\n\n    try {\n        len = frames.length;\n    } catch (err) {\n        // pass\n    }\n\n    if (len === 0) {\n        return result;\n    }\n\n    if (len) {\n        for (let i = 0; i < len; i++) {\n\n            let frame;\n\n            try {\n                frame = frames[i];\n            } catch (err) {\n                continue;\n            }\n\n            result.push(frame);\n        }\n\n        return result;\n    }\n\n    for (let i = 0; i < 100; i++) {\n        let frame;\n\n        try {\n            frame = frames[i];\n        } catch (err) {\n            return result;\n        }\n\n        if (!frame) {\n            return result;\n        }\n\n        result.push(frame);\n    }\n\n    return result;\n}\n\n\nexport function getAllChildFrames(win : CrossDomainWindowType) : $ReadOnlyArray<CrossDomainWindowType> {\n\n    const result = [];\n\n    for (const frame of getFrames(win)) {\n        result.push(frame);\n\n        for (const childFrame of getAllChildFrames(frame)) {\n            result.push(childFrame);\n        }\n    }\n\n    return result;\n}\n\nexport function getTop(win? : CrossDomainWindowType = window) : ?CrossDomainWindowType {\n\n    try {\n        if (win.top) {\n            return win.top;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    if (getParent(win) === win) {\n        return win;\n    }\n\n    try {\n        if (isAncestorParent(window, win) && window.top) {\n            return window.top;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        if (isAncestorParent(win, window) && window.top) {\n            return window.top;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    for (const frame of getAllChildFrames(win)) {\n        try {\n            if (frame.top) {\n                return frame.top;\n            }\n        } catch (err) {\n            // pass\n        }\n\n        if (getParent(frame) === frame) {\n            return frame;\n        }\n    }\n}\n\nexport function getNextOpener(win? : CrossDomainWindowType = window) : ?CrossDomainWindowType {\n    return getOpener(getTop(win) || win);\n}\n\nexport function getUltimateTop(win? : CrossDomainWindowType = window) : CrossDomainWindowType {\n    const opener = getNextOpener(win);\n\n    if (opener) {\n        return getUltimateTop(opener);\n    }\n\n    return top;\n}\n\nexport function getAllFramesInWindow(win : CrossDomainWindowType) : $ReadOnlyArray<CrossDomainWindowType> {\n    const top = getTop(win);\n\n    if (!top) {\n        throw new Error(`Can not determine top window`);\n    }\n\n    let result = [ ...getAllChildFrames(top), top ];\n\n    // Win may be in shadow dom\n    if (result.indexOf(win) === -1) {\n        result = [ ...result, win, ...getAllChildFrames(win) ];\n    }\n\n    return result;\n}\n\nexport function getAllWindows(win? : CrossDomainWindowType = window) : $ReadOnlyArray<CrossDomainWindowType> {\n    const frames = getAllFramesInWindow(win);\n    const opener = getNextOpener(win);\n\n    if (opener) {\n        return [ ...getAllWindows(opener), ...frames ];\n    } else {\n        return frames;\n    }\n}\n\nexport function isTop(win : CrossDomainWindowType) : boolean {\n    return win === getTop(win);\n}\n\nexport function isFrameWindowClosed(frame : HTMLIFrameElement) : boolean {\n\n    if (!frame.contentWindow) {\n        return true;\n    }\n\n    if (!frame.parentNode) {\n        return true;\n    }\n\n    const doc = frame.ownerDocument;\n\n    if (doc && doc.documentElement && !doc.documentElement.contains(frame)) {\n        let parent = frame;\n\n        while (parent.parentNode && parent.parentNode !== parent) {\n            parent = parent.parentNode;\n        }\n\n        // $FlowFixMe\n        if (!parent.host || !doc.documentElement.contains(parent.host)) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction safeIndexOf<T>(collection : $ReadOnlyArray<T>, item : T) : number {\n    for (let i = 0; i < collection.length; i++) {\n\n        try {\n            if (collection[i] === item) {\n                return i;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    return -1;\n}\n\nconst iframeWindows = [];\nconst iframeFrames = [];\n\nexport function isWindowClosed(win : CrossDomainWindowType, allowMock : boolean = true) : boolean {\n\n    try {\n        if (win === window) {\n            return false;\n        }\n    } catch (err) {\n        return true;\n    }\n\n    try {\n        if (!win) {\n            return true;\n        }\n\n    } catch (err) {\n        return true;\n    }\n\n    try {\n        if (win.closed) {\n            return true;\n        }\n\n    } catch (err) {\n\n        // I love you so much IE\n\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return false;\n        }\n\n        return true;\n    }\n\n\n    if (allowMock && isSameDomain(win)) {\n        try {\n            // $FlowFixMe\n            if (win.mockclosed) {\n                return true;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    // Mobile safari\n\n    try {\n        if (!win.parent || !win.top) {\n            return true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    // Yes, this actually happens in IE. win === win errors out when the window\n    // is from an iframe, and the iframe was removed from the page.\n\n    try {\n        noop(win === win); // eslint-disable-line no-self-compare\n    } catch (err) {\n        return true;\n    }\n\n    // IE orphaned frame\n\n    const iframeIndex = safeIndexOf(iframeWindows, win);\n\n    if (iframeIndex !== -1) {\n        const frame = iframeFrames[iframeIndex];\n\n        if (frame && isFrameWindowClosed(frame)) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction cleanIframes() {\n    for (let i = 0; i < iframeWindows.length; i++) {\n        let closed = false;\n\n        try {\n            closed = iframeWindows[i].closed;\n        } catch (err) {\n            // pass\n        }\n\n        if (closed) {\n            iframeFrames.splice(i, 1);\n            iframeWindows.splice(i, 1);\n        }\n    }\n}\n\nexport function linkFrameWindow(frame : HTMLIFrameElement) {\n\n    cleanIframes();\n\n    if (frame && frame.contentWindow) {\n        try {\n            iframeWindows.push(frame.contentWindow);\n            iframeFrames.push(frame);\n        } catch (err) {\n            // pass\n        }\n    }\n}\n\nexport function getUserAgent(win : ?SameDomainWindowType) : string {\n    win = win || window;\n    return win.navigator.mockUserAgent || win.navigator.userAgent;\n}\n\n\nexport function getFrameByName(win : CrossDomainWindowType, name : string) : ?CrossDomainWindowType {\n\n    const winFrames = getFrames(win);\n\n    for (const childFrame of winFrames) {\n        try {\n            // $FlowFixMe\n            if (isSameDomain(childFrame) && childFrame.name === name && winFrames.indexOf(childFrame) !== -1) {\n                return childFrame;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    try {\n        // $FlowFixMe\n        if (winFrames.indexOf(win.frames[name]) !== -1) {\n            // $FlowFixMe\n            return win.frames[name];\n        }\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        if (winFrames.indexOf(win[name]) !== -1) {\n            return win[name];\n        }\n    } catch (err) {\n        // pass\n    }\n}\n\nexport function findChildFrameByName(win : CrossDomainWindowType, name : string) : ?CrossDomainWindowType {\n\n    const frame = getFrameByName(win, name);\n\n    if (frame) {\n        return frame;\n    }\n\n    for (const childFrame of getFrames(win)) {\n        const namedFrame = findChildFrameByName(childFrame, name);\n\n        if (namedFrame) {\n            return namedFrame;\n        }\n    }\n}\n\nexport function findFrameByName(win : CrossDomainWindowType, name : string) : ?CrossDomainWindowType {\n    const frame = getFrameByName(win, name);\n\n    if (frame) {\n        return frame;\n    }\n\n    const top = getTop(win) || win;\n\n    return findChildFrameByName(top, name);\n}\n\nexport function isParent(win : CrossDomainWindowType, frame : CrossDomainWindowType) : boolean {\n\n    const frameParent = getParent(frame);\n\n    if (frameParent) {\n        return frameParent === win;\n    }\n\n    for (const childFrame of getFrames(win)) {\n        if (childFrame === frame) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function isOpener(parent : CrossDomainWindowType, child : CrossDomainWindowType) : boolean {\n\n    return parent === getOpener(child);\n}\n\nexport function getAncestor(win? : CrossDomainWindowType = window) : ?CrossDomainWindowType {\n    win = win || window;\n\n    const opener = getOpener(win);\n\n    if (opener) {\n        return opener;\n    }\n\n    const parent = getParent(win);\n\n    if (parent) {\n        return parent;\n    }\n}\n\nexport function getAncestors(win : CrossDomainWindowType) : $ReadOnlyArray<CrossDomainWindowType> {\n\n    const results = [];\n\n    let ancestor = win;\n\n    while (ancestor) {\n        ancestor = getAncestor(ancestor);\n        if (ancestor) {\n            results.push(ancestor);\n        }\n    }\n\n    return results;\n}\n\n\nexport function isAncestor(parent : CrossDomainWindowType, child : CrossDomainWindowType) : boolean {\n\n    const actualParent = getAncestor(child);\n\n    if (actualParent) {\n        if (actualParent === parent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    if (child === parent) {\n        return false;\n    }\n\n    if (getTop(child) === child) {\n        return false;\n    }\n\n    for (const frame of getFrames(parent)) {\n        if (frame === child) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function isPopup(win? : CrossDomainWindowType = window) : boolean {\n    return Boolean(getOpener(win));\n}\n\nexport function isIframe(win? : CrossDomainWindowType = window) : boolean {\n    return Boolean(getParent(win));\n}\n\nexport function isFullpage(win? : CrossDomainWindowType = window) : boolean {\n    return Boolean(!isIframe(win) && !isPopup(win));\n}\n\nfunction anyMatch(collection1, collection2) : boolean {\n\n    for (const item1 of collection1) {\n        for (const item2 of collection2) {\n            if (item1 === item2) {\n                return true;\n            }\n        }\n    }\n\n    return false;\n}\n\nexport function getDistanceFromTop(win : CrossDomainWindowType = window) : number {\n    let distance = 0;\n    let parent = win;\n\n    while (parent) {\n        parent = getParent(parent);\n        if (parent) {\n            distance += 1;\n        }\n    }\n\n    return distance;\n}\n\nexport function getNthParent(win : CrossDomainWindowType, n : number = 1) : ?CrossDomainWindowType {\n    let parent = win;\n\n    for (let i = 0; i < n; i++) {\n        if (!parent) {\n            return;\n        }\n\n        parent = getParent(parent);\n    }\n\n    return parent;\n}\n\nexport function getNthParentFromTop(win : CrossDomainWindowType, n : number = 1) : ?CrossDomainWindowType {\n    return getNthParent(win, getDistanceFromTop(win) - n);\n}\n\nexport function isSameTopWindow(win1 : CrossDomainWindowType, win2 : CrossDomainWindowType) : boolean {\n\n    const top1 = getTop(win1) || win1;\n    const top2 = getTop(win2) || win2;\n\n    try {\n        if (top1 && top2) {\n            if (top1 === top2) {\n                return true;\n            }\n\n            return false;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    const allFrames1 = getAllFramesInWindow(win1);\n    const allFrames2 = getAllFramesInWindow(win2);\n\n    if (anyMatch(allFrames1, allFrames2)) {\n        return true;\n    }\n\n    const opener1 = getOpener(top1);\n    const opener2 = getOpener(top2);\n\n    if (opener1 && anyMatch(getAllFramesInWindow(opener1), allFrames2)) {\n        return false;\n    }\n\n    if (opener2 && anyMatch(getAllFramesInWindow(opener2), allFrames1)) {\n        return false;\n    }\n\n    return false;\n}\n\nexport function matchDomain(pattern : DomainMatcher, origin : DomainMatcher) : boolean {\n\n    if (typeof pattern === 'string') {\n\n        if (typeof origin === 'string') {\n            return pattern === WILDCARD || origin === pattern;\n        }\n\n        if (isRegex(origin)) {\n            return false;\n        }\n\n        if (Array.isArray(origin)) {\n            return false;\n        }\n    }\n\n    if (isRegex(pattern)) {\n\n        if (isRegex(origin)) {\n            return pattern.toString() === origin.toString();\n        }\n\n        if (Array.isArray(origin)) {\n            return false;\n        }\n\n        // $FlowFixMe\n        return Boolean(origin.match(pattern));\n    }\n\n    if (Array.isArray(pattern)) {\n\n        if (Array.isArray(origin)) {\n            return JSON.stringify(pattern) === JSON.stringify(origin);\n        }\n\n        if (isRegex(origin)) {\n            return false;\n        }\n\n        return pattern.some(subpattern => matchDomain(subpattern, origin));\n    }\n\n    return false;\n}\n\nexport function stringifyDomainPattern(pattern : DomainMatcher) : string {\n    if (Array.isArray(pattern)) {\n        return `(${ pattern.join(' | ') })`;\n    } else if (isRegex(pattern)) {\n        return `RegExp(${ pattern.toString() }`;\n    } else {\n        return pattern.toString();\n    }\n}\n\nexport function getDomainFromUrl(url : string) : string {\n\n    let domain;\n\n    if (url.match(/^(https?|mock|file):\\/\\//)) {\n        domain = url;\n    } else {\n        return getDomain();\n    }\n\n    domain = domain.split('/').slice(0, 3).join('/');\n\n    return domain;\n}\n\nexport function onCloseWindow(win : CrossDomainWindowType, callback : Function, delay : number = 1000, maxtime : number = Infinity) : {| cancel : () => void |} {\n\n    let timeout;\n\n    const check = () => {\n\n        if (isWindowClosed(win)) {\n\n            if (timeout) {\n                clearTimeout(timeout);\n            }\n\n            return callback();\n        }\n\n        if (maxtime <= 0) {\n            clearTimeout(timeout);\n        } else {\n            maxtime -= delay;\n            timeout = setTimeout(check, delay);\n        }\n    };\n\n    check();\n\n    return {\n        cancel() {\n            if (timeout) {\n                clearTimeout(timeout);\n            }\n        }\n    };\n}\n\n// eslint-disable-next-line complexity\nexport function isWindow(obj : Object) : boolean {\n\n    try {\n        if (obj === window) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (Object.prototype.toString.call(obj) === '[object Window]') {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (window.Window && obj instanceof window.Window) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (obj && obj.self === obj) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (obj && obj.parent === obj) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (obj && obj.top === obj) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (noop(obj === obj) === '__unlikely_value__') { // eslint-disable-line no-self-compare\n            return false;\n        }\n\n    } catch (err) {\n        return true;\n    }\n\n    try {\n        if (obj && obj.__cross_domain_utils_window_check__ === '__unlikely_value__') {\n            return false;\n        }\n\n    } catch (err) {\n        return true;\n    }\n\n    try {\n        if ('postMessage' in obj && 'self' in obj && 'location' in obj) {\n            return true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\nexport function isBrowser() : boolean {\n    return (typeof window !== 'undefined' && typeof window.location !== 'undefined');\n}\n\nexport function isCurrentDomain(domain : string) : boolean {\n    if (!isBrowser()) {\n        return false;\n    }\n\n    return (getDomain() === domain);\n}\n\nexport function isMockDomain(domain : string) : boolean {\n    return domain.indexOf(PROTOCOL.MOCK) === 0;\n}\n\nexport function normalizeMockUrl(url : string) : string {\n    if (!isMockDomain(getDomainFromUrl(url))) {\n        return url;\n    }\n\n    if (!__TEST__) {\n        throw new Error(`Mock urls not supported out of test mode`);\n    }\n\n    return url.replace(/^mock:\\/\\/[^/]+/, getActualDomain(window));\n}\n\nexport function closeWindow(win : CrossDomainWindowType) {\n    try {\n        win.close();\n    } catch (err) {\n        // pass\n    }\n}\n\nexport function getFrameForWindow(win : CrossDomainWindowType) : ?HTMLElement {\n    if (isSameDomain(win)) {\n        return assertSameDomain(win).frameElement;\n    }\n\n    for (const frame of document.querySelectorAll('iframe')) {\n        if (frame && frame.contentWindow && frame.contentWindow === win) {\n            return frame;\n        }\n    }\n}\n","/* @flow */\n\nexport function safeIndexOf<T>(collection : $ReadOnlyArray<T>, item : T) : number {\n    for (let i = 0; i < collection.length; i++) {\n\n        try {\n            if (collection[i] === item) {\n                return i;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    return -1;\n}\n\n// eslint-disable-next-line no-unused-vars\nexport function noop(...args : $ReadOnlyArray<mixed>) {\n    // pass\n}\n","/* @flow */\n\nimport { isWindow, isWindowClosed } from 'cross-domain-utils/src';\n\nimport { hasNativeWeakMap } from './native';\nimport { noop, safeIndexOf } from './util';\n\nexport class CrossDomainSafeWeakMap<K : Object, V : mixed> {\n\n    name : string\n    weakmap : ?WeakMap<K, V>\n    // eslint-disable-next-line flowtype/no-mutable-array\n    keys : Array<K>\n    // eslint-disable-next-line flowtype/no-mutable-array\n    values : Array<V>\n\n    constructor() {\n        // eslint-disable-next-line no-bitwise\n        this.name = `__weakmap_${ Math.random() * 1e9 >>> 0 }__`;\n\n        if (hasNativeWeakMap()) {\n            try {\n                this.weakmap = new WeakMap();\n            } catch (err) {\n                // pass\n            }\n        }\n\n        this.keys  = [];\n        this.values = [];\n    }\n\n    _cleanupClosedWindows() {\n\n        const weakmap = this.weakmap;\n        const keys = this.keys;\n\n        for (let i = 0; i < keys.length; i++) {\n            const value = keys[i];\n\n            if (isWindow(value) && isWindowClosed(value)) {\n\n                if (weakmap) {\n                    try {\n                        weakmap.delete(value);\n                    } catch (err) {\n                        // pass\n                    }\n                }\n\n                keys.splice(i, 1);\n                this.values.splice(i, 1);\n\n                i -= 1;\n            }\n        }\n    }\n\n    isSafeToReadWrite(key : K) : boolean {\n\n        if (isWindow(key)) {\n            return false;\n        }\n\n        try {\n            noop(key && key.self);\n            noop(key && key[this.name]);\n        } catch (err) {\n            return false;\n        }\n\n        return true;\n    }\n\n    set(key : K, value : V) {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        const weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                weakmap.set(key, value);\n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (this.isSafeToReadWrite(key)) {\n            try {\n                const name = this.name;\n                const entry = key[name];\n\n                if (entry && entry[0] === key) {\n                    entry[1] = value;\n                } else {\n                    Object.defineProperty(key, name, {\n                        value:    [ key, value ],\n                        writable: true\n                    });\n                }\n\n                return;\n\n            } catch (err) {\n                // pass\n            }\n        }\n\n        this._cleanupClosedWindows();\n\n        const keys = this.keys;\n        const values = this.values;\n        const index = safeIndexOf(keys, key);\n\n        if (index === -1) {\n            keys.push(key);\n            values.push(value);\n        } else {\n            values[index] = value;\n        }\n    }\n\n    get(key : K) : V | void {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        const weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                if (weakmap.has(key)) {\n                    return weakmap.get(key);\n                }\n                \n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (this.isSafeToReadWrite(key)) {\n            try {\n                const entry = key[this.name];\n\n                if (entry && entry[0] === key) {\n                    return entry[1];\n                }\n\n                return;\n            } catch (err) {\n                // pass\n            }\n        }\n\n        this._cleanupClosedWindows();\n\n        const keys = this.keys;\n        const index = safeIndexOf(keys, key);\n\n        if (index === -1) {\n            return;\n        }\n\n        return this.values[index];\n    }\n\n    delete(key : K) {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        const weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                weakmap.delete(key);\n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (this.isSafeToReadWrite(key)) {\n            try {\n                const entry = key[this.name];\n\n                if (entry && entry[0] === key) {\n                    entry[0] = entry[1] = undefined;\n                }\n            } catch (err) {\n                // pass\n            }\n        }\n\n        this._cleanupClosedWindows();\n\n        const keys = this.keys;\n        const index = safeIndexOf(keys, key);\n\n        if (index !== -1) {\n            keys.splice(index, 1);\n            this.values.splice(index, 1);\n        }\n    }\n\n    has(key : K) : boolean {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        const weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                if (weakmap.has(key)) {\n                    return true;\n                }\n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (this.isSafeToReadWrite(key)) {\n            try {\n                const entry = key[this.name];\n\n                if (entry && entry[0] === key) {\n                    return true;\n                }\n\n                return false;\n            } catch (err) {\n                // pass\n            }\n        }\n\n        this._cleanupClosedWindows();\n\n        const index = safeIndexOf(this.keys, key);\n        return index !== -1;\n    }\n\n    getOrSet(key : K, getter : () => V) : V {\n        if (this.has(key)) {\n            // $FlowFixMe\n            return this.get(key);\n        }\n\n        const value = getter();\n        this.set(key, value);\n        return value;\n    }\n}\n","\n/* @flow */\n/* eslint max-lines: 0 */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { WeakMap } from 'cross-domain-safe-weakmap/src';\n\nimport type { CancelableType } from './types';\n\nexport function getFunctionName <T : Function>(fn : T) : string {\n    return fn.name || fn.__name__ || fn.displayName || 'anonymous';\n}\n\nexport function setFunctionName <T : Function>(fn : T, name : string) : T {\n    try {\n        delete fn.name;\n        fn.name = name;\n    } catch (err) {\n        // pass\n    }\n\n    fn.__name__ = fn.displayName = name;\n    return fn;\n}\n\nexport function base64encode(str : string) : string {\n    if (typeof btoa === 'function') {\n        return btoa(encodeURIComponent(str).replace(/%([0-9A-F]{2})/g, (m, p1) => {\n            return String.fromCharCode(parseInt(p1, 16));\n        })).replace(/[=]/g, '');\n    }\n\n    if (typeof Buffer !== 'undefined') {\n        return Buffer.from(str, 'utf8').toString('base64').replace(/[=]/g, '');\n    }\n\n    throw new Error(`Can not find window.btoa or Buffer`);\n}\n\nexport function base64decode(str : string) : string {\n    if (typeof atob === 'function') {\n        return decodeURIComponent(Array.prototype.map.call(atob(str), c => {\n            // eslint-disable-next-line prefer-template\n            return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n        }).join(''));\n    }\n\n    if (typeof Buffer !== 'undefined') {\n        return Buffer.from(str, 'base64').toString('utf8');\n    }\n\n    throw new Error(`Can not find window.atob or Buffer`);\n}\n\nexport function uniqueID() : string {\n\n    const chars = '0123456789abcdef';\n\n    const randomID = 'xxxxxxxxxx'.replace(/./g, () => {\n        return chars.charAt(Math.floor(Math.random() * chars.length));\n    });\n\n    const timeID = base64encode(\n        new Date().toISOString().slice(11, 19).replace('T', '.')\n    ).replace(/[^a-zA-Z0-9]/g, '').toLowerCase();\n\n    return `uid_${ randomID }_${ timeID }`;\n}\n\nexport function getGlobal() : Object {\n    if (typeof window !== 'undefined') {\n        return window;\n    }\n    if (typeof global !== 'undefined') {\n        return global;\n    }\n    if (typeof __GLOBAL__ !== 'undefined') {\n        return __GLOBAL__;\n    }\n    throw new Error(`No global found`);\n}\n\nlet objectIDs;\n\nexport function getObjectID(obj : Object) : string {\n\n    objectIDs = objectIDs || new WeakMap();\n\n    if (obj === null || obj === undefined || (typeof obj !== 'object' && typeof obj !== 'function')) {\n        throw new Error(`Invalid object`);\n    }\n\n    let uid = objectIDs.get(obj);\n\n    if (!uid) {\n        uid = `${ typeof obj }:${ uniqueID() }`;\n        objectIDs.set(obj, uid);\n    }\n\n    return uid;\n}\n\nfunction serializeArgs<T>(args : $ReadOnlyArray<T>) : string {\n    try {\n        return JSON.stringify(Array.prototype.slice.call(args), (subkey, val) => {\n            if (typeof val === 'function') {\n                return `memoize[${ getObjectID(val) }]`;\n            }\n            return val;\n        });\n    } catch (err) {\n        throw new Error(`Arguments not serializable -- can not be used to memoize`);\n    }\n}\n\nexport function getEmptyObject() : {||} {\n    // $FlowFixMe\n    return {};\n}\n\ntype MemoizeOptions = {|\n    name? : string,\n    time? : number,\n    thisNamespace? : boolean\n|};\n\nconst getDefaultMemoizeOptions = () : MemoizeOptions => {\n    // $FlowFixMe\n    return {};\n};\n\nexport type Memoized<F> = F & {| reset : () => void |};\n\nlet memoizeGlobalIndex = 0;\nlet memoizeGlobalIndexValidFrom = 0;\n\nexport function memoize<F : Function>(method : F, options? : MemoizeOptions = getDefaultMemoizeOptions()) : Memoized<F> {\n    const { thisNamespace = false, time: cacheTime } = options;\n\n    let simpleCache;\n    let thisCache;\n\n    let memoizeIndex = memoizeGlobalIndex;\n    memoizeGlobalIndex += 1;\n\n    const memoizedFunction = function memoizedFunction(...args) : mixed {\n        if (memoizeIndex < memoizeGlobalIndexValidFrom) {\n            simpleCache = null;\n            thisCache = null;\n            memoizeIndex = memoizeGlobalIndex;\n            memoizeGlobalIndex += 1;\n        }\n\n        let cache;\n\n        if (thisNamespace) {\n            thisCache = thisCache || new WeakMap();\n            cache = thisCache.getOrSet(this, getEmptyObject);\n        } else {\n            cache = simpleCache = simpleCache || {};\n        }\n\n        const cacheKey = serializeArgs(args);\n        let cacheResult = cache[cacheKey];\n\n        if (cacheResult && cacheTime && (Date.now() - cacheResult.time) < cacheTime) {\n            delete cache[cacheKey];\n            cacheResult = null;\n        }\n\n        if (cacheResult) {\n            return cacheResult.value;\n        }\n\n        const time  = Date.now();\n        const value = method.apply(this, arguments);\n\n        cache[cacheKey] = { time, value };\n\n        return value;\n    };\n\n    memoizedFunction.reset = () => {\n        simpleCache = null;\n        thisCache = null;\n    };\n\n    // $FlowFixMe\n    const result : F = memoizedFunction;\n\n    return setFunctionName(result, `${ options.name || getFunctionName(method) }::memoized`);\n}\n\nmemoize.clear = () => {\n    memoizeGlobalIndexValidFrom = memoizeGlobalIndex;\n};\n\nexport function promiseIdentity<T : mixed>(item : ZalgoPromise<T> | T) : ZalgoPromise<T> {\n    // $FlowFixMe\n    return ZalgoPromise.resolve(item);\n}\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport function memoizePromise<R>(method : (...args : $ReadOnlyArray<any>) => ZalgoPromise<R>) : ((...args : $ReadOnlyArray<any>) => ZalgoPromise<R>) {\n    let cache = {};\n\n    // eslint-disable-next-line flowtype/no-weak-types\n    function memoizedPromiseFunction(...args : $ReadOnlyArray<any>) : ZalgoPromise<R> {\n        const key : string = serializeArgs(args);\n\n        if (cache.hasOwnProperty(key)) {\n            return cache[key];\n        }\n\n        cache[key] = ZalgoPromise.try(() => method.apply(this, arguments))\n            .finally(() => {\n                delete cache[key];\n            });\n\n        return cache[key];\n    }\n\n    memoizedPromiseFunction.reset = () => {\n        cache = {};\n    };\n\n    return setFunctionName(memoizedPromiseFunction, `${ getFunctionName(method) }::promiseMemoized`);\n}\n\ntype PromisifyOptions = {|\n    name ? : string\n|};\n\nconst getDefaultPromisifyOptions = () : PromisifyOptions => {\n    // $FlowFixMe\n    return {};\n};\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport function promisify<R>(method : (...args : $ReadOnlyArray<any>) => R, options : PromisifyOptions = getDefaultPromisifyOptions()) : ((...args : $ReadOnlyArray<any>) => ZalgoPromise<R>) {\n    function promisifiedFunction() : ZalgoPromise<R> {\n        return ZalgoPromise.try(method, this, arguments);\n    }\n\n    if (options.name) {\n        promisifiedFunction.displayName = `${ options.name }:promisified`;\n    }\n\n    return setFunctionName(promisifiedFunction, `${ getFunctionName(method) }::promisified`);\n}\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport function inlineMemoize<R>(method : (...args : $ReadOnlyArray<any>) => R, logic : (...args : $ReadOnlyArray<any>) => R, args : $ReadOnlyArray<any> = []) : R {\n    // $FlowFixMe\n    const cache : {| [string] : R |} = method.__inline_memoize_cache__ = method.__inline_memoize_cache__ || {};\n    const key = serializeArgs(args);\n\n    if (cache.hasOwnProperty(key)) {\n        return cache[key];\n    }\n    \n    const result = cache[key] = logic(...args);\n\n    return result;\n}\n\n// eslint-disable-next-line no-unused-vars\nexport function noop(...args : $ReadOnlyArray<mixed>) {\n    // pass\n}\n\nexport function once(method : Function) : Function {\n    let called = false;\n\n    const onceFunction = function() : mixed {\n        if (!called) {\n            called = true;\n            return method.apply(this, arguments);\n        }\n    };\n\n    return setFunctionName(onceFunction, `${ getFunctionName(method) }::once`);\n}\n\nexport function hashStr(str : string) : number {\n    let hash = 0;\n    for (let i = 0; i < str.length; i++) {\n        hash += str[i].charCodeAt(0) * Math.pow((i % 10) + 1, 5);\n    }\n    return Math.floor(Math.pow(Math.sqrt(hash), 5));\n}\n\nexport function strHashStr(str : string) : string {\n    let hash = '';\n\n    for (let i = 0; i < str.length; i++) {\n        let total = (str[i].charCodeAt(0) * i);\n\n        if (str[i + 1]) {\n            total += (str[i + 1].charCodeAt(0) * (i - 1));\n        }\n\n        hash += String.fromCharCode(97 + (Math.abs(total) % 26));\n    }\n\n    return hash;\n}\n\nexport function match(str : string, pattern : RegExp) : ?string {\n    const regmatch = str.match(pattern);\n    if (regmatch) {\n        return regmatch[1];\n    }\n}\n\nexport function awaitKey<T: mixed>(obj : Object, key : string) : ZalgoPromise<T> {\n    return new ZalgoPromise(resolve => {\n\n        let value = obj[key];\n\n        if (value) {\n            return resolve(value);\n        }\n\n        delete obj[key];\n\n        Object.defineProperty(obj, key, {\n\n            configurable: true,\n\n            set(item) {\n                value = item;\n\n                if (value) {\n                    resolve(value);\n                }\n            },\n\n            get() : T {\n                return value;\n            }\n        });\n    });\n}\n\nexport function stringifyError(err : mixed, level : number = 1) : string {\n\n    if (level >= 3) {\n        return 'stringifyError stack overflow';\n    }\n\n    try {\n        if (!err) {\n            return `<unknown error: ${ Object.prototype.toString.call(err) }>`;\n        }\n\n        if (typeof err === 'string') {\n            return err;\n        }\n\n        if (err instanceof Error) {\n            const stack = err && err.stack;\n            const message = err && err.message;\n\n            if (stack && message) {\n                if (stack.indexOf(message) !== -1) {\n                    return stack;\n                } else {\n                    return `${ message }\\n${ stack }`;\n                }\n            } else if (stack) {\n                return stack;\n            } else if (message) {\n                return message;\n            }\n        }\n\n        if (err && err.toString && typeof err.toString === 'function') {\n            // $FlowFixMe\n            return err.toString();\n        }\n\n        return Object.prototype.toString.call(err);\n\n    } catch (newErr) {\n        return `Error while stringifying error: ${ stringifyError(newErr, level + 1) }`;\n    }\n}\n\nexport function stringifyErrorMessage(err : mixed) : string {\n\n    const defaultMessage = `<unknown error: ${ Object.prototype.toString.call(err) }>`;\n\n    if (!err) {\n        return defaultMessage;\n    }\n\n    if (err instanceof Error) {\n        return err.message || defaultMessage;\n    }\n\n    if (typeof err.message === 'string') {\n        return err.message || defaultMessage;\n    }\n\n    return defaultMessage;\n}\n\nexport function stringify(item : mixed) : string {\n    if (typeof item === 'string') {\n        return item;\n    }\n\n    if (item && item.toString && typeof item.toString === 'function') {\n        // $FlowFixMe\n        return item.toString();\n    }\n\n    return Object.prototype.toString.call(item);\n}\n\nexport function domainMatches(hostname : string, domain : string) : boolean {\n    hostname = hostname.split('://')[1];\n    const index = hostname.indexOf(domain);\n    return (index !== -1 && hostname.slice(index) === domain);\n}\n\nexport function patchMethod(obj : Object, name : string, handler : Function) {\n    const original = obj[name];\n\n    obj[name] = function patchedMethod() : mixed {\n        return handler({\n            context:      this,\n            args:         Array.prototype.slice.call(arguments),\n            original,\n            callOriginal: () => original.apply(this, arguments)\n        });\n    };\n}\n\nexport function extend<T : Object | Function>(obj : T, source : Object) : T {\n    if (!source) {\n        return obj;\n    }\n\n    if (Object.assign) {\n        return Object.assign(obj, source);\n    }\n\n    for (const key in source) {\n        if (source.hasOwnProperty(key)) {\n            obj[key] = source[key];\n        }\n    }\n\n    return obj;\n}\n\n// eslint-disable-next-line no-undef\ntype Values = <T>({ [string] : T }) => $ReadOnlyArray<T>;\n\nexport const values : Values = (obj) => {\n    if (Object.values) {\n        // $FlowFixMe\n        return Object.values(obj);\n    }\n\n    const result = [];\n    for (const key in obj) {\n        if (obj.hasOwnProperty(key)) {\n            result.push(obj[key]);\n        }\n    }\n\n    // $FlowFixMe\n    return result;\n};\n\nexport const memoizedValues : Values = memoize(values);\n\nexport function perc(pixels : number, percentage : number) : number {\n    return Math.round((pixels * percentage) / 100);\n}\n\nexport function min(...args : $ReadOnlyArray<number>) : number {\n    return Math.min(...args);\n}\n\nexport function max(...args : $ReadOnlyArray<number>) : number {\n    return Math.max(...args);\n}\n\nexport function roundUp(num : number, nearest : number) : number {\n    const remainder = num % nearest;\n    return remainder\n        ? (num - remainder) + nearest\n        : num;\n}\n\nexport function regexMap<T>(str : string, regexp : RegExp, handler : () => T) : $ReadOnlyArray<T> {\n    const results = [];\n\n    // $FlowFixMe\n    str.replace(regexp, function regexMapMatcher(item) {\n        results.push(handler ? handler.apply(null, arguments) : item);\n    });\n\n    // $FlowFixMe\n    return results;\n}\n\nexport function svgToBase64(svg : string) : string {\n    return `data:image/svg+xml;base64,${ base64encode(svg) }`;\n}\n\nexport function objFilter<T, R>(obj : { [string] : T }, filter? : (T, ?string) => mixed = Boolean) : { [string] : R } {\n    const result = {};\n\n    for (const key in obj) {\n        if (!obj.hasOwnProperty(key) || !filter(obj[key], key)) {\n            continue;\n        }\n\n        result[key] = obj[key];\n    }\n\n    return result;\n}\n\nexport function identity <T>(item : T) : T {\n    return item;\n}\n\nexport function regexTokenize(text : string, regexp : RegExp) : $ReadOnlyArray<string> {\n    const result = [];\n    text.replace(regexp, token => {\n        result.push(token);\n        return '';\n    });\n    return result;\n}\n\nexport function promiseDebounce<T>(method : () => ZalgoPromise<T> | T, delay : number = 50) : () => ZalgoPromise<T> {\n\n    let promise;\n    let timeout;\n\n    const promiseDebounced = function() : ZalgoPromise<T> {\n        if (timeout) {\n            clearTimeout(timeout);\n        }\n\n        const localPromise = promise = promise || new ZalgoPromise();\n\n        timeout = setTimeout(() => {\n            promise = null;\n            timeout = null;\n\n            ZalgoPromise.try(method).then(\n                result => { localPromise.resolve(result); },\n                err => { localPromise.reject(err); }\n            );\n        }, delay);\n\n        return localPromise;\n    };\n\n    return setFunctionName(promiseDebounced, `${ getFunctionName(method) }::promiseDebounced`);\n}\n\nexport function safeInterval(method : Function, time : number) : {| cancel : () => void |} {\n\n    let timeout;\n\n    function loop() {\n        timeout = setTimeout(() => {\n            method();\n            loop();\n        }, time);\n    }\n\n    loop();\n\n    return {\n        cancel() {\n            clearTimeout(timeout);\n        }\n    };\n}\n\nexport function isInteger(str : string) : boolean {\n    return Boolean(str.match(/^[0-9]+$/));\n}\n\nexport function isFloat(str : string) : boolean {\n    return Boolean(str.match(/^[0-9]+\\.[0-9]+$/));\n}\n\nexport function serializePrimitive(value : string | number | boolean) : string {\n    return value.toString();\n}\n\nexport function deserializePrimitive(value : string) : string | number | boolean {\n    if (value === 'true') {\n        return true;\n    } else if (value === 'false') {\n        return false;\n    } else if (isInteger(value)) {\n        return parseInt(value, 10);\n    } else if (isFloat(value)) {\n        return parseFloat(value);\n    } else {\n        return value;\n    }\n}\n\nexport function dotify(obj : Object, prefix : string = '', newobj : Object = {}) : { [string] : string } {\n    prefix = prefix ? `${ prefix }.` : prefix;\n    for (const key in obj) {\n        if (!obj.hasOwnProperty(key) || obj[key] === undefined || obj[key] === null || typeof obj[key] === 'function') {\n            continue;\n        } else if (obj[key] && Array.isArray(obj[key]) && obj[key].length && obj[key].every(val => typeof val !== 'object')) {\n            newobj[`${ prefix }${ key }[]`] = obj[key].join(',');\n        } else if (obj[key] && typeof obj[key] === 'object') {\n            newobj = dotify(obj[key], `${ prefix }${ key }`, newobj);\n        } else {\n            newobj[`${ prefix }${ key }`] = serializePrimitive(obj[key]);\n        }\n    }\n    return newobj;\n}\n\nexport function undotify(obj : { [string] : string }) : Object {\n    \n    const result = {};\n\n    for (let key in obj) {\n        if (!obj.hasOwnProperty(key) || typeof obj[key] !== 'string') {\n            continue;\n        }\n\n        let value = obj[key];\n\n        if (key.match(/^.+\\[\\]$/)) {\n            key = key.slice(0, -2);\n            value = value.split(',').map(deserializePrimitive);\n        } else {\n            value = deserializePrimitive(value);\n        }\n\n        let keyResult = result;\n        const parts = key.split('.');\n        for (let i = 0; i < parts.length; i++) {\n            const part = parts[i];\n            const isLast = (i + 1 === parts.length);\n            const isIndex = !isLast && isInteger(parts[i + 1]);\n\n            if (part === 'constructor' || part === 'prototype' || part === '__proto__') {\n                throw new Error(`Disallowed key: ${ part }`);\n            }\n\n            if (isLast) {\n                // $FlowFixMe\n                keyResult[part] = value;\n            } else {\n                // $FlowFixMe\n                keyResult = keyResult[part] = keyResult[part] || (isIndex ? [] : {});\n            }\n        }\n    }\n\n    return result;\n}\n\nexport type EventEmitterType = {|\n    on : (eventName : string, handler : Function) => CancelableType,\n    once : (eventName : string, handler : Function) => CancelableType,\n    trigger : (eventName : string, ...args : $ReadOnlyArray<mixed>) => ZalgoPromise<void>,\n    triggerOnce : (eventName : string, ...args : $ReadOnlyArray<mixed>) => ZalgoPromise<void>,\n    reset : () => void\n|};\n\nexport function eventEmitter() : EventEmitterType {\n    const triggered = {};\n    let handlers = {};\n\n    return {\n\n        on(eventName : string, handler : Function) : CancelableType {\n            const handlerList = handlers[eventName] = handlers[eventName] || [];\n\n            handlerList.push(handler);\n\n            let cancelled = false;\n\n            return {\n                cancel() {\n                    if (!cancelled) {\n                        cancelled = true;\n                        handlerList.splice(handlerList.indexOf(handler), 1);\n                    }\n\n                }\n            };\n        },\n\n        once(eventName : string, handler : Function) : CancelableType {\n\n            const listener = this.on(eventName, () => {\n                listener.cancel();\n                handler();\n            });\n\n            return listener;\n        },\n\n        trigger(eventName : string, ...args : $ReadOnlyArray<mixed>) : ZalgoPromise<void> {\n\n            const handlerList = handlers[eventName];\n            const promises = [];\n\n            if (handlerList) {\n                for (const handler of handlerList) {\n                    promises.push(ZalgoPromise.try(() => handler(...args)));\n                }\n            }\n\n            return ZalgoPromise.all(promises).then(noop);\n        },\n\n        triggerOnce(eventName : string, ...args : $ReadOnlyArray<mixed>) : ZalgoPromise<void> {\n\n            if (triggered[eventName]) {\n                return ZalgoPromise.resolve();\n            }\n\n            triggered[eventName] = true;\n            return this.trigger(eventName, ...args);\n        },\n\n        reset() {\n            handlers = {};\n        }\n    };\n}\n\nexport function camelToDasherize(string : string) : string {\n    return string.replace(/([A-Z])/g, (g) => {\n        return `-${ g.toLowerCase() }`;\n    });\n}\n\nexport function dasherizeToCamel(string : string) : string {\n    return string.replace(/-([a-z])/g, (g) => {\n        return g[1].toUpperCase();\n    });\n}\n\nexport function capitalizeFirstLetter(string : string) : string {\n    return string.charAt(0).toUpperCase() + string.slice(1).toLowerCase();\n}\n\nexport function get(item : Object, path : string, def : mixed) : mixed {\n\n    if (!path) {\n        return def;\n    }\n\n    const pathParts = path.split('.');\n\n    // Loop through each section of our key path\n\n    for (let i = 0; i < pathParts.length; i++) {\n\n        // If we have an object, we can get the key\n        if (typeof item === 'object' && item !== null) {\n            item = item[pathParts[i]];\n\n        // Otherwise, we should return the default (undefined if not provided)\n        } else {\n            return def;\n        }\n    }\n\n    // If our final result is undefined, we should return the default\n\n    return item === undefined ? def : item;\n}\n\nexport function safeTimeout(method : Function, time : number) {\n\n    const interval = safeInterval(() => {\n        time -= 100;\n        if (time <= 0) {\n            interval.cancel();\n            method();\n        }\n    }, 100);\n}\n\nexport function defineLazyProp<T>(obj : Object | $ReadOnlyArray<mixed>, key : string | number, getter : () => T) {\n    if (Array.isArray(obj)) {\n        if (typeof key !== 'number') {\n            throw new TypeError(`Array key must be number`);\n        }\n    } else if (typeof obj === 'object' && obj !== null) {\n        if (typeof key !== 'string') {\n            throw new TypeError(`Object key must be string`);\n        }\n    }\n    \n    Object.defineProperty(obj, key, {\n        configurable: true,\n        enumerable:   true,\n        get:          () => {\n            // $FlowFixMe\n            delete obj[key];\n            const value = getter();\n            // $FlowFixMe\n            obj[key] = value;\n            return value;\n        },\n        set: (value : T) => {\n            // $FlowFixMe\n            delete obj[key];\n            // $FlowFixMe\n            obj[key] = value;\n        }\n    });\n}\n\nexport function arrayFrom<T>(item : Iterable<T>) : $ReadOnlyArray<T> { // eslint-disable-line no-undef\n    return Array.prototype.slice.call(item);\n}\n\nexport function isObject(item : mixed) : boolean {\n    return (typeof item === 'object' && item !== null);\n}\n\nexport function isObjectObject(obj : mixed) : boolean {\n    return isObject(obj) && Object.prototype.toString.call(obj) === '[object Object]';\n}\n\nexport function isPlainObject(obj : mixed) : boolean {\n    if (!isObjectObject(obj)) {\n        return false;\n    }\n\n    // $FlowFixMe\n    const constructor = obj.constructor;\n\n    if (typeof constructor !== 'function') {\n        return false;\n    }\n\n    const prototype = constructor.prototype;\n\n    if (!isObjectObject(prototype)) {\n        return false;\n    }\n\n    if (!prototype.hasOwnProperty('isPrototypeOf')) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function replaceObject<T : $ReadOnlyArray<mixed> | Object> (item : T, replacer : (mixed, string | number, string) => mixed, fullKey : string = '') : T {\n\n    if (Array.isArray(item)) {\n        const length = item.length;\n        const result : Array<mixed> = [];\n\n        for (let i = 0; i < length; i++) {\n\n            \n            defineLazyProp(result, i, () => {\n                const itemKey = fullKey ? `${ fullKey }.${ i }` : `${ i }`;\n                const el = item[i];\n\n                let child = replacer(el, i, itemKey);\n\n                if (isPlainObject(child) || Array.isArray(child)) {\n                    // $FlowFixMe\n                    child = replaceObject(child, replacer, itemKey);\n                }\n\n                return child;\n            });\n        }\n\n        // $FlowFixMe\n        return result;\n    } else if (isPlainObject(item)) {\n        const result = {};\n\n        for (const key in item) {\n            if (!item.hasOwnProperty(key)) {\n                continue;\n            }\n\n            defineLazyProp(result, key, () => {\n                const itemKey = fullKey ? `${ fullKey }.${ key }` : `${ key }`;\n                // $FlowFixMe\n                const el = item[key];\n\n                let child = replacer(el, key, itemKey);\n\n                if (isPlainObject(child) || Array.isArray(child)) {\n                    // $FlowFixMe\n                    child = replaceObject(child, replacer, itemKey);\n                }\n\n                return child;\n            });\n        }\n\n        // $FlowFixMe\n        return result;\n    } else {\n        throw new Error(`Pass an object or array`);\n    }\n}\n\n\nexport function copyProp(source : Object, target : Object, name : string, def : mixed) {\n    if (source.hasOwnProperty(name)) {\n        const descriptor = Object.getOwnPropertyDescriptor(source, name);\n        // $FlowFixMe\n        Object.defineProperty(target, name, descriptor);\n\n    } else {\n        target[name] = def;\n    }\n}\n\ntype RegexResultType = {|\n    text : string,\n    groups : $ReadOnlyArray<string>,\n    start : number,\n    end : number,\n    length : number,\n    replace : (text : string) => string\n|};\n\nexport function regex(pattern : string | RegExp, string : string, start : number = 0) : ?RegexResultType {\n\n    if (typeof pattern === 'string') {\n        // eslint-disable-next-line security/detect-non-literal-regexp\n        pattern = new RegExp(pattern);\n    }\n\n    const result = string.slice(start).match(pattern);\n\n    if (!result) {\n        return;\n    }\n\n    // $FlowFixMe\n    const index : number = result.index;\n    const regmatch = result[0];\n\n    return {\n        text:   regmatch,\n        groups: result.slice(1),\n        start:  start + index,\n        end:    start + index + regmatch.length,\n        length: regmatch.length,\n\n        replace(text : string) : string {\n\n            if (!regmatch) {\n                return '';\n            }\n\n            return `${ regmatch.slice(0, start + index) }${ text }${ regmatch.slice(index + regmatch.length) }`;\n        }\n    };\n}\n\nexport function regexAll(pattern : string | RegExp, string : string) : $ReadOnlyArray<RegexResultType> {\n\n    const matches = [];\n    let start = 0;\n\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n        const regmatch = regex(pattern, string, start);\n\n        if (!regmatch) {\n            break;\n        }\n\n        matches.push(regmatch);\n        start = match.end;\n    }\n\n    return matches;\n}\n\nexport function isDefined(value : ?mixed) : boolean {\n    return value !== null && value !== undefined;\n}\n\nexport function cycle(method : Function) : ZalgoPromise<void> {\n    return ZalgoPromise.try(method).then(() => cycle(method));\n}\n\nexport function debounce<T>(method : (...args : $ReadOnlyArray<mixed>) => T, time : number = 100) : (...args : $ReadOnlyArray<mixed>) => void {\n\n    let timeout;\n\n    const debounceWrapper = function() {\n        clearTimeout(timeout);\n\n        timeout = setTimeout(() => {\n            return method.apply(this, arguments);\n        }, time);\n    };\n\n    return setFunctionName(debounceWrapper, `${ getFunctionName(method) }::debounced`);\n}\n\nexport function isRegex(item : mixed) : boolean {\n    return Object.prototype.toString.call(item) === '[object RegExp]';\n}\n\ntype FunctionProxy<T : Function> = (method : T) => T;\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport const weakMapMemoize : FunctionProxy<*> = <R : mixed>(method : (arg : any) => R) : ((...args : $ReadOnlyArray<any>) => R) => {\n\n    const weakmap = new WeakMap();\n\n    // eslint-disable-next-line flowtype/no-weak-types\n    return function weakmapMemoized(arg : any) : R {\n        return weakmap.getOrSet(arg, () => method.call(this, arg));\n    };\n};\n\ntype FunctionPromiseProxy<R : mixed, T : (...args : $ReadOnlyArray<mixed>) => ZalgoPromise<R>> = (T) => T;\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport const weakMapMemoizePromise : FunctionPromiseProxy<*, *> = <R : mixed>(method : (arg : any) => ZalgoPromise<R>) : ((...args : $ReadOnlyArray<any>) => ZalgoPromise<R>) => {\n\n    const weakmap = new WeakMap();\n\n    // eslint-disable-next-line flowtype/no-weak-types\n    return function weakmapMemoizedPromise(arg : any) : ZalgoPromise<R> {\n        return weakmap.getOrSet(arg, () =>\n            method.call(this, arg).finally(() => {\n                weakmap.delete(arg);\n            }));\n    };\n};\n\nexport function getOrSet<O : Object, T : mixed>(obj : O, key : string, getter : () => T) : T {\n    if (obj.hasOwnProperty(key)) {\n        return obj[key];\n    }\n\n    const val = getter();\n    obj[key] = val;\n    return val;\n}\n\nexport type CleanupType = {|\n    set : <T : mixed>(string, T) => T, // eslint-disable-line no-undef\n    register : (Function) => void,\n    all : (err? : mixed) => ZalgoPromise<void>\n|};\n\nexport function cleanup(obj : Object) : CleanupType {\n\n    const tasks = [];\n    let cleaned = false;\n    let cleanErr;\n\n    return {\n        set<T : mixed>(name : string, item : T) : T {\n            if (!cleaned) {\n                obj[name] = item;\n                this.register(() => {\n                    delete obj[name];\n                });\n            }\n            return item;\n        },\n\n        register(method : Function) {\n            if (cleaned) {\n                method(cleanErr);\n            } else {\n                tasks.push(once(() => method(cleanErr)));\n            }\n        },\n\n        all(err? : mixed) : ZalgoPromise<void> {\n            cleanErr = err;\n\n            const results = [];\n            cleaned = true;\n\n            while (tasks.length) {\n                const task = tasks.shift();\n                results.push(task());\n            }\n\n            return ZalgoPromise.all(results).then(noop);\n        }\n    };\n}\n\nexport function tryCatch<T>(fn : () => T) : {| result : T, error : void |} | {| result : void, error : mixed |} {\n    let result;\n    let error;\n\n    try {\n        result = fn();\n    } catch (err) {\n        error = err;\n    }\n    \n    // $FlowFixMe\n    return { result, error };\n}\n\n// eslint-disable-next-line flowtype/no-mutable-array\nexport function removeFromArray<X, T : Array<X>>(arr : T, item : X) {\n    const index = arr.indexOf(item);\n    if (index !== -1) {\n        arr.splice(index, 1);\n    }\n}\n\nexport function assertExists<T>(name : string, thing : void | null | T) : T {\n    if (thing === null || typeof thing === 'undefined') {\n        throw new Error(`Expected ${ name } to be present`);\n    }\n                            \n    return thing;\n}\n\nexport function unique(arr : $ReadOnlyArray<string>) : $ReadOnlyArray<string> {\n    const result = {};\n    for (const item of arr) {\n        result[item] = true;\n    }\n    return Object.keys(result);\n}\n\nexport const constHas = <X : (string | boolean | number), T : { [string] : X }>(constant : T, value : X) : boolean => {\n    return memoizedValues(constant).indexOf(value) !== -1;\n};\n\nexport function dedupeErrors<T>(handler : (mixed) => T) : (mixed) => (T | void) {\n    const seenErrors = [];\n    const seenStringifiedErrors = {};\n\n    return (err) => {\n        if (seenErrors.indexOf(err) !== -1) {\n            return;\n        }\n\n        seenErrors.push(err);\n\n        const stringifiedError = stringifyError(err);\n        if (seenStringifiedErrors[stringifiedError]) {\n            return;\n        }\n\n        seenStringifiedErrors[stringifiedError] = true;\n        return handler(err);\n    };\n}\n\nexport class ExtendableError extends Error {\n    constructor(message : string) {\n        super(message);\n        // eslint-disable-next-line unicorn/custom-error-definition\n        this.name = this.constructor.name;\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(this, this.constructor);\n        } else {\n            this.stack = (new Error(message)).stack;\n        }\n    }\n}\n  \n","/* @flow */\n\nexport function hasNativeWeakMap() : boolean {\n\n    if (typeof WeakMap === 'undefined') {\n        return false;\n    }\n\n    if (typeof Object.freeze === 'undefined') {\n        return false;\n    }\n\n    try {\n\n        const testWeakMap = new WeakMap();\n        const testKey = {};\n        const testValue = '__testvalue__';\n\n        Object.freeze(testKey);\n\n        testWeakMap.set(testKey, testValue);\n\n        if (testWeakMap.get(testKey) === testValue) {\n            return true;\n        }\n\n        return false;\n\n    } catch (err) {\n\n        return false;\n    }\n}\n","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","import setPrototypeOf from \"@babel/runtime/helpers/esm/setPrototypeOf\";\nimport isNativeReflectConstruct from \"@babel/runtime/helpers/esm/isNativeReflectConstruct\";\nexport default function _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct;\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}","import getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport setPrototypeOf from \"@babel/runtime/helpers/esm/setPrototypeOf\";\nimport isNativeFunction from \"@babel/runtime/helpers/esm/isNativeFunction\";\nimport construct from \"@babel/runtime/helpers/esm/construct\";\nexport default function _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n\n  _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !isNativeFunction(Class)) return Class;\n\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n\n      _cache.set(Class, Wrapper);\n    }\n\n    function Wrapper() {\n      return construct(Class, arguments, getPrototypeOf(this).constructor);\n    }\n\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return setPrototypeOf(Wrapper, Class);\n  };\n\n  return _wrapNativeSuper(Class);\n}","export default function _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","/* @flow */\n/* eslint max-lines: off */\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { linkFrameWindow, isWindowClosed, assertSameDomain,\n    type SameDomainWindowType, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { WeakMap } from 'cross-domain-safe-weakmap/src';\n\nimport { inlineMemoize, memoize, noop, stringify, capitalizeFirstLetter,\n    once, extend, safeInterval, uniqueID, arrayFrom, ExtendableError, strHashStr } from './util';\nimport { isDevice } from './device';\nimport { KEY_CODES, ATTRIBUTES, UID_HASH_LENGTH } from './constants';\nimport type { CancelableType } from './types';\n\ntype ElementRefType = string | HTMLElement;\n\nexport function isDocumentReady() : boolean {\n    return Boolean(document.body) && (document.readyState === 'complete');\n}\n\nexport function isDocumentInteractive() : boolean {\n    return Boolean(document.body) && (document.readyState === 'interactive');\n}\n\nexport function urlEncode(str : string) : string {\n    return encodeURIComponent(str);\n}\n\nexport function waitForWindowReady() : ZalgoPromise<void> {\n    return inlineMemoize(waitForWindowReady, () : ZalgoPromise<void> => {\n        return new ZalgoPromise(resolve => {\n            if (isDocumentReady()) {\n                resolve();\n            }\n\n            window.addEventListener('load', () => resolve());\n        });\n    });\n}\n\ntype WaitForDocumentReady = () => ZalgoPromise<void>;\n\nexport const waitForDocumentReady : WaitForDocumentReady = memoize(() => {\n    return new ZalgoPromise(resolve => {\n\n        if (isDocumentReady() || isDocumentInteractive()) {\n            return resolve();\n        }\n\n        const interval = setInterval(() => {\n            if (isDocumentReady() || isDocumentInteractive()) {\n                clearInterval(interval);\n                return resolve();\n            }\n        }, 10);\n    });\n});\n\nexport function waitForDocumentBody() : ZalgoPromise<HTMLBodyElement> {\n    return ZalgoPromise.try(() => {\n        if (document.body) {\n            return document.body;\n        }\n\n        return waitForDocumentReady().then(() => {\n            if (document.body) {\n                return document.body;\n            }\n\n            throw new Error('Document ready but document.body not present');\n        });\n    });\n}\n\nexport function parseQuery(queryString : string) : Object {\n    return inlineMemoize(parseQuery, () : Object => {\n        const params = {};\n\n        if (!queryString) {\n            return params;\n        }\n\n        if (queryString.indexOf('=') === -1) {\n            return params;\n        }\n\n        for (let pair of queryString.split('&')) {\n            pair = pair.split('=');\n\n            if (pair[0] && pair[1]) {\n                params[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n            }\n        }\n\n        return params;\n    }, [ queryString ]);\n}\n\n\nexport function getQueryParam(name : string) : string {\n    return parseQuery(window.location.search.slice(1))[name];\n}\n\nexport function urlWillRedirectPage(url : string) : boolean {\n\n    if (url.indexOf('#') === -1) {\n        return true;\n    }\n\n    if (url.indexOf('#') === 0) {\n        return false;\n    }\n\n    if (url.split('#')[0] === window.location.href.split('#')[0]) {\n        return false;\n    }\n\n    return true;\n}\n\nexport type Query = {\n    [ string ] : boolean | string\n};\n\nexport function formatQuery(obj : Query = {}) : string {\n\n    return Object.keys(obj).filter(key => {\n        return typeof obj[key] === 'string' || typeof obj[key] === 'boolean';\n    }).map(key => {\n        const val = obj[key];\n\n        if (typeof val !== 'string' && typeof val !== 'boolean') {\n            throw new TypeError(`Invalid type for query`);\n        }\n\n        return `${ urlEncode(key) }=${ urlEncode(val.toString()) }`;\n    }).join('&');\n}\n\nexport function extendQuery(originalQuery : string, props : Query = {}) : string {\n\n    if (!props || !Object.keys(props).length) {\n        return originalQuery;\n    }\n\n    return formatQuery({\n        ...parseQuery(originalQuery),\n        ...props\n    });\n}\n\nexport function extendUrl(url : string, options : {| query? : Query, hash? : Query |}) : string {\n\n    const query = options.query || {};\n    const hash = options.hash || {};\n\n    let originalUrl;\n    let originalQuery;\n    let originalHash;\n\n    [ originalUrl, originalHash ] = url.split('#');\n    [ originalUrl, originalQuery ] = originalUrl.split('?');\n\n    const queryString = extendQuery(originalQuery, query);\n    const hashString = extendQuery(originalHash, hash);\n\n    if (queryString) {\n        originalUrl = `${ originalUrl }?${ queryString }`;\n    }\n\n    if (hashString) {\n        originalUrl = `${ originalUrl }#${ hashString }`;\n    }\n\n    return originalUrl;\n}\n\nexport function redirect(url : string, win : CrossDomainWindowType = window) : ZalgoPromise<void> {\n    return new ZalgoPromise(resolve => {\n        win.location = url;\n        if (!urlWillRedirectPage(url)) {\n            resolve();\n        }\n    });\n}\n\nexport function hasMetaViewPort() : boolean {\n    const meta = document.querySelector('meta[name=viewport]');\n\n    if (isDevice() && window.screen.width < 660 && !meta) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function isElementVisible(el : HTMLElement) : boolean {\n    return Boolean(el.offsetWidth || el.offsetHeight || el.getClientRects().length);\n}\n\nexport function getPerformance() : ?Performance {\n    return inlineMemoize(getPerformance, () : ?Performance => {\n        const performance = window.performance;\n\n        if (\n            performance &&\n            performance.now &&\n            performance.timing &&\n            performance.timing.connectEnd &&\n            performance.timing.navigationStart &&\n            (Math.abs(performance.now() - Date.now()) > 1000) &&\n            (performance.now() - (performance.timing.connectEnd - performance.timing.navigationStart)) > 0\n        ) {\n            return performance;\n        }\n    });\n}\n\nexport function enablePerformance() : boolean {\n    return Boolean(getPerformance());\n}\n\nexport function getPageRenderTime() : ZalgoPromise<?number> {\n    return waitForDocumentReady().then(() => {\n        const performance = getPerformance();\n\n        if (!performance) {\n            return;\n        }\n\n        const timing = performance.timing;\n\n        if (timing.connectEnd && timing.domInteractive) {\n            return timing.domInteractive - timing.connectEnd;\n        }\n    });\n}\n\nexport function htmlEncode(html : string = '') : string {\n    return html.toString()\n        .replace(/&/g, '&amp;')\n        .replace(/</g, '&lt;')\n        .replace(/>/g, '&gt;')\n        .replace(/\"/g, '&quot;')\n        .replace(/'/g, '&#39;')\n        .replace(/\\//g, '&#x2F;');\n}\n\nexport function isBrowser() : boolean {\n    return (typeof window !== 'undefined') && window.location !== undefined;\n}\n\nexport function querySelectorAll(selector : string, doc : HTMLElement = window.document) : $ReadOnlyArray<HTMLElement> {\n    return Array.prototype.slice.call(doc.querySelectorAll(selector));\n}\n\nexport function onClick(element : HTMLElement, handler : (Event) => void) {\n    element.addEventListener('touchstart', noop);\n    element.addEventListener('click', handler);\n    element.addEventListener('keypress', (event : Event) => {\n        // $FlowFixMe\n        if (event.keyCode === KEY_CODES.ENTER || event.keyCode === KEY_CODES.SPACE) { // eslint-disable-line unicorn/prefer-event-key\n            return handler(event);\n        }\n    });\n}\n\nexport function getScript({ host = window.location.host, path, reverse = false } : {| host? : string, path : string, reverse? : boolean |}) : ?HTMLScriptElement {\n    return inlineMemoize(getScript, () : ?HTMLScriptElement => {\n\n        const url = `${ host }${ path }`;\n        const scripts = Array.prototype.slice.call(document.getElementsByTagName('script'));\n\n        if (reverse) {\n            scripts.reverse();\n        }\n\n        for (const script of scripts) {\n            if (!script.src) {\n                continue;\n            }\n\n            const src = script.src.replace(/^https?:\\/\\//, '').split('?')[0];\n\n            if (src === url) {\n                return script;\n            }\n        }\n    }, [ path ]);\n}\n\nexport function isLocalStorageEnabled() : boolean {\n    return inlineMemoize(isLocalStorageEnabled, () => {\n        try {\n            if (typeof window === 'undefined') {\n                return false;\n            }\n\n            if (window.localStorage) {\n                const value = Math.random().toString();\n                window.localStorage.setItem('__test__localStorage__', value);\n                const result = window.localStorage.getItem('__test__localStorage__');\n                window.localStorage.removeItem('__test__localStorage__');\n                if (value === result) {\n                    return true;\n                }\n            }\n        } catch (err) {\n            // pass\n        }\n        return false;\n    });\n}\n\nexport function getBrowserLocales() : $ReadOnlyArray<{| country? : string, lang : string |}> {\n    const nav = window.navigator; // eslint-disable-line compat/compat\n\n    const locales = nav.languages\n        ? [ ...nav.languages ]\n        : [];\n\n    if (nav.language) {\n        locales.push(nav.language);\n    }\n\n    if (nav.userLanguage) {\n        locales.push(nav.userLanguage);\n    }\n\n    return locales.map(locale => {\n\n        if (locale && locale.match(/^[a-z]{2}[-_][A-Z]{2}$/)) {\n            const [ lang, country ] = locale.split(/[-_]/);\n            return { country, lang };\n        }\n\n        if (locale && locale.match(/^[a-z]{2}$/)) {\n            return { lang: locale };\n        }\n\n        return null;\n\n    }).filter(Boolean);\n}\n\n\nexport function appendChild(container : HTMLElement, child : HTMLElement | Text) {\n    container.appendChild(child);\n}\n\nexport function isElement(element : mixed) : boolean {\n\n    if (element instanceof window.Element) {\n        return true;\n    }\n\n    if (element !== null && typeof element === 'object' && element.nodeType === 1 && typeof element.style === 'object' && typeof element.ownerDocument === 'object') {\n        return true;\n    }\n\n    return false;\n}\n\nexport function getElementSafe(id : ElementRefType, doc : Document | HTMLElement = document) : ?HTMLElement {\n\n    if (isElement(id)) {\n        // $FlowFixMe\n        return id;\n    }\n\n    if (typeof id === 'string') {\n        return doc.querySelector(id);\n    }\n}\n\nexport function getElement(id : ElementRefType, doc : Document | HTMLElement = document) : HTMLElement {\n\n    const element = getElementSafe(id, doc);\n\n    if (element) {\n        return element;\n    }\n\n    throw new Error(`Can not find element: ${ stringify(id) }`);\n}\n\nexport function elementReady(id : ElementRefType) : ZalgoPromise<HTMLElement> {\n    return new ZalgoPromise((resolve, reject) => {\n\n        const name = stringify(id);\n        let el = getElementSafe(id);\n\n        if (el) {\n            return resolve(el);\n        }\n\n        if (isDocumentReady()) {\n            return reject(new Error(`Document is ready and element ${ name } does not exist`));\n        }\n\n        const interval = setInterval(() => {\n\n            el = getElementSafe(id);\n\n            if (el) {\n                clearInterval(interval);\n                return resolve(el);\n            }\n\n            if (isDocumentReady()) {\n                clearInterval(interval);\n                return reject(new Error(`Document is ready and element ${ name } does not exist`));\n            }\n        }, 10);\n    });\n}\n\n// eslint-disable-next-line unicorn/custom-error-definition\nexport class PopupOpenError extends ExtendableError {}\n\ntype PopupOptions = {|\n    name? : string,\n    width? : number,\n    height? : number,\n    top? : number,\n    left? : number,\n    status? : 0 | 1,\n    resizable? : 0 | 1,\n    toolbar? : 0 | 1,\n    menubar? : 0 | 1,\n    scrollbars? : 0 | 1\n|};\n\nexport function popup(url : string, options? : PopupOptions) : CrossDomainWindowType {\n\n    // $FlowFixMe\n    options = options || {};\n\n    const { width, height } = options;\n\n    let top = 0;\n    let left = 0;\n\n    if (width) {\n        if (window.outerWidth) {\n            left = Math.round((window.outerWidth - width) / 2) + window.screenX;\n        } else if (window.screen.width) {\n            left = Math.round((window.screen.width - width) / 2);\n        }\n    }\n\n    if (height) {\n        if (window.outerHeight) {\n            top = Math.round((window.outerHeight - height) / 2) + window.screenY;\n        } else if (window.screen.height) {\n            top = Math.round((window.screen.height - height) / 2);\n        }\n    }\n\n    if (width && height) {\n        // $FlowFixMe\n        options = {\n            top,\n            left,\n            width,\n            height,\n            status:     1,\n            toolbar:    0,\n            menubar:    0,\n            resizable:  1,\n            scrollbars: 1,\n            ...options\n        };\n    }\n\n    const name = options.name || '';\n    delete options.name;\n\n    // eslint-disable-next-line array-callback-return\n    const params = Object.keys(options).map(key => {\n        // $FlowFixMe\n        if (options[key] !== null && options[key] !== undefined) {\n            return `${ key }=${ stringify(options[key]) }`;\n        }\n    }).filter(Boolean).join(',');\n\n    let win;\n\n    try {\n        win = window.open(url, name, params);\n    } catch (err) {\n        throw new PopupOpenError(`Can not open popup window - ${ err.stack || err.message }`);\n    }\n\n    if (isWindowClosed(win)) {\n        const err = new PopupOpenError(`Can not open popup window - blocked`);\n        throw err;\n    }\n\n    window.addEventListener('unload', () => win.close());\n\n    return win;\n}\n\n\nexport function writeToWindow(win : SameDomainWindowType, html : string) {\n    try {\n        win.document.open();\n        win.document.write(html);\n        win.document.close();\n    } catch (err) {\n        try {\n            win.location = `javascript: document.open(); document.write(${ JSON.stringify(html) }); document.close();`;\n        } catch (err2) {\n            // pass\n        }\n    }\n}\n\nexport function writeElementToWindow(win : SameDomainWindowType, el : HTMLElement) {\n\n    const tag = el.tagName.toLowerCase();\n\n    if (tag !== 'html') {\n        throw new Error(`Expected element to be html, got ${ tag }`);\n    }\n\n    const documentElement = win.document.documentElement;\n\n    for (const child of arrayFrom(documentElement.children)) {\n        documentElement.removeChild(child);\n    }\n\n    for (const child of arrayFrom(el.children)) {\n        documentElement.appendChild(child);\n    }\n}\n\nexport function setStyle(el : HTMLElement, styleText : string, doc : Document = window.document) {\n    // $FlowFixMe\n    if (el.styleSheet) {\n        // $FlowFixMe\n        el.styleSheet.cssText = styleText;\n    } else {\n        el.appendChild(doc.createTextNode(styleText));\n    }\n}\n\nexport type ElementOptionsType = {|\n    style? : { [ string ] : string },\n    id? : string,\n    class? : ?$ReadOnlyArray<string>,\n    attributes? : { [ string ] : string },\n    styleSheet? : ?string,\n    html? : ?string\n|};\n\nlet awaitFrameLoadPromises : WeakMap<HTMLIFrameElement, ZalgoPromise<HTMLIFrameElement>>;\n\nexport function awaitFrameLoad(frame : HTMLIFrameElement) : ZalgoPromise<HTMLIFrameElement> {\n    awaitFrameLoadPromises = awaitFrameLoadPromises || new WeakMap();\n\n    if (awaitFrameLoadPromises.has(frame)) {\n        const promise = awaitFrameLoadPromises.get(frame);\n        if (promise) {\n            return promise;\n        }\n    }\n\n    const promise = new ZalgoPromise((resolve, reject) => {\n        frame.addEventListener('load', () => {\n            linkFrameWindow(frame);\n            resolve(frame);\n        });\n\n        frame.addEventListener('error', (err : Event) => {\n            if (frame.contentWindow) {\n                resolve(frame);\n            } else {\n                reject(err);\n            }\n        });\n    });\n\n    awaitFrameLoadPromises.set(frame, promise);\n\n    return promise;\n}\n\nexport function awaitFrameWindow(frame : HTMLIFrameElement) : ZalgoPromise<CrossDomainWindowType> {\n    return awaitFrameLoad(frame).then(loadedFrame => {\n\n        if (!loadedFrame.contentWindow) {\n            throw new Error(`Could not find window in iframe`);\n        }\n\n        return loadedFrame.contentWindow;\n    });\n}\n\nconst getDefaultCreateElementOptions = () : ElementOptionsType => {\n    // $FlowFixMe\n    return {};\n};\n\nexport function createElement(tag : string = 'div', options : ElementOptionsType = getDefaultCreateElementOptions(), container : ?HTMLElement) : HTMLElement {\n\n    tag = tag.toLowerCase();\n    const element = document.createElement(tag);\n\n    if (options.style) {\n        extend(element.style, options.style);\n    }\n\n    if (options.class) {\n        element.className = options.class.join(' ');\n    }\n\n    if (options.id) {\n        element.setAttribute('id', options.id);\n    }\n\n    if (options.attributes) {\n        for (const key of Object.keys(options.attributes)) {\n            element.setAttribute(key, options.attributes[key]);\n        }\n    }\n\n    if (options.styleSheet) {\n        setStyle(element, options.styleSheet);\n    }\n\n    if (container) {\n        appendChild(container, element);\n    }\n\n    if (options.html) {\n        if (tag === 'iframe') {\n            // $FlowFixMe\n            if (!container || !element.contentWindow) {\n                throw new Error(`Iframe html can not be written unless container provided and iframe in DOM`);\n            }\n\n            // $FlowFixMe\n            writeToWindow(element.contentWindow, options.html);\n\n        } else {\n            element.innerHTML = options.html;\n        }\n    }\n\n    return element;\n}\n\ntype StringMap = {|\n    [ string ] : string\n|};\n\nexport type IframeElementOptionsType = {|\n    style? : StringMap,\n    class? : ?$ReadOnlyArray<string>,\n    attributes? : StringMap,\n    styleSheet? : ?string,\n    html? : ?string,\n    url? : ?string\n|};\n\nconst getDefaultIframeOptions = () : IframeElementOptionsType => {\n    // $FlowFixMe\n    return {};\n};\n\nconst getDefaultStringMap = () : StringMap => {\n    // $FlowFixMe\n    return {};\n};\n\nexport function iframe(options : IframeElementOptionsType = getDefaultIframeOptions(), container : ?HTMLElement) : HTMLIFrameElement {\n\n    const attributes = options.attributes || getDefaultStringMap();\n    const style = options.style || getDefaultStringMap();\n\n    // $FlowFixMe\n    const newAttributes = {\n        allowTransparency: 'true',\n        ...attributes\n    };\n\n    // $FlowFixMe\n    const newStyle = {\n        backgroundColor: 'transparent',\n        border:          'none',\n        ...style\n    };\n\n    const frame = createElement('iframe', {\n        attributes: newAttributes,\n        style:      newStyle,\n        html:       options.html,\n        class:      options.class\n    });\n\n    const isIE = window.navigator.userAgent.match(/MSIE|Edge/i); // eslint-disable-line compat/compat\n\n    if (!frame.hasAttribute('id')) {\n        frame.setAttribute('id', uniqueID());\n    }\n\n    // $FlowFixMe\n    awaitFrameLoad(frame);\n\n    if (container) {\n        const el = getElement(container);\n        el.appendChild(frame);\n    }\n\n    if (options.url || isIE) {\n        frame.setAttribute('src', options.url || 'about:blank');\n    }\n\n    // $FlowFixMe\n    return frame;\n}\n\nexport function addEventListener(obj : HTMLElement, event : string, handler : (event : Event) => void) : CancelableType {\n    obj.addEventListener(event, handler);\n    return {\n        cancel() {\n            obj.removeEventListener(event, handler);\n        }\n    };\n}\n\nexport function bindEvents(element : HTMLElement, eventNames : $ReadOnlyArray<string>, handler : (event : Event) => void) : CancelableType {\n\n    handler = once(handler);\n\n    for (const eventName of eventNames) {\n        element.addEventListener(eventName, handler);\n    }\n\n    return {\n        cancel: once(() => {\n            for (const eventName of eventNames) {\n                element.removeEventListener(eventName, handler);\n            }\n        })\n    };\n}\n\nconst VENDOR_PREFIXES = [ 'webkit', 'moz', 'ms', 'o' ];\n\nexport function setVendorCSS(element : HTMLElement, name : string, value : string) {\n\n    // $FlowFixMe\n    element.style[name] = value;\n\n    const capitalizedName = capitalizeFirstLetter(name);\n\n    for (const prefix of VENDOR_PREFIXES) {\n        // $FlowFixMe\n        element.style[`${ prefix }${ capitalizedName }`] = value;\n    }\n}\n\nconst ANIMATION_START_EVENTS = [ 'animationstart', 'webkitAnimationStart', 'oAnimationStart', 'MSAnimationStart' ];\nconst ANIMATION_END_EVENTS   = [ 'animationend', 'webkitAnimationEnd', 'oAnimationEnd', 'MSAnimationEnd' ];\n\nexport function animate(element : ElementRefType, name : string, clean : (Function) => void, timeout : number = 1000) : ZalgoPromise<void> {\n    return new ZalgoPromise((resolve, reject) => {\n\n        const el = getElement(element);\n\n        if (!el) {\n            return resolve();\n        }\n\n        let hasStarted = false;\n\n        // eslint-disable-next-line prefer-const\n        let startTimeout;\n        let endTimeout;\n        // eslint-disable-next-line prefer-const\n        let startEvent;\n        // eslint-disable-next-line prefer-const\n        let endEvent;\n\n        function cleanUp() {\n            clearTimeout(startTimeout);\n            clearTimeout(endTimeout);\n            startEvent.cancel();\n            endEvent.cancel();\n        }\n\n        startEvent = bindEvents(el, ANIMATION_START_EVENTS, event => {\n\n            // $FlowFixMe\n            if (event.target !== el || event.animationName !== name) {\n                return;\n            }\n\n            clearTimeout(startTimeout);\n\n            event.stopPropagation();\n\n            startEvent.cancel();\n            hasStarted = true;\n\n            endTimeout = setTimeout(() => {\n                cleanUp();\n                resolve();\n            }, timeout);\n        });\n\n        endEvent = bindEvents(el, ANIMATION_END_EVENTS, event => {\n\n            // $FlowFixMe\n            if (event.target !== el || event.animationName !== name) {\n                return;\n            }\n\n            cleanUp();\n\n            // $FlowFixMe\n            if (typeof event.animationName === 'string' && event.animationName !== name) {\n                return reject(`Expected animation name to be ${ name }, found ${ event.animationName }`);\n            }\n\n            return resolve();\n        });\n\n        setVendorCSS(el, 'animationName', name);\n\n        startTimeout = setTimeout(() => {\n            if (!hasStarted) {\n                cleanUp();\n                return resolve();\n            }\n        }, 200);\n\n        if (clean) {\n            clean(cleanUp);\n        }\n    });\n}\n\nexport function makeElementVisible(element : HTMLElement) {\n    element.style.setProperty('visibility', '');\n}\n\nexport function makeElementInvisible(element : HTMLElement) {\n    element.style.setProperty('visibility', 'hidden', 'important');\n}\n\n\nexport function showElement(element : HTMLElement) {\n    element.style.setProperty('display', '');\n}\n\nexport function hideElement(element : HTMLElement) {\n    element.style.setProperty('display', 'none', 'important');\n}\n\nexport function destroyElement(element : HTMLElement) {\n    if (element && element.parentNode) {\n        element.parentNode.removeChild(element);\n    }\n}\n\nexport function showAndAnimate(element : HTMLElement, name : string, clean : (Function) => void) : ZalgoPromise<void> {\n    const animation = animate(element, name, clean);\n    showElement(element);\n    return animation;\n}\n\nexport function animateAndHide(element : HTMLElement, name : string, clean : (Function) => void) : ZalgoPromise<void> {\n    return animate(element, name, clean).then(() => {\n        hideElement(element);\n    });\n}\n\nexport function addClass(element : HTMLElement, name : string) {\n    element.classList.add(name);\n}\n\nexport function removeClass(element : HTMLElement, name : string) {\n    element.classList.remove(name);\n}\n\nexport function isElementClosed(el : HTMLElement) : boolean {\n    if (!el || !el.parentNode || !el.ownerDocument || !el.ownerDocument.documentElement || !el.ownerDocument.documentElement.contains(el)) {\n        return true;\n    }\n    return false;\n}\n\nexport function watchElementForClose(element : HTMLElement, handler : () => mixed) : CancelableType {\n    handler = once(handler);\n\n    let cancelled = false;\n    const mutationObservers = [];\n    // eslint-disable-next-line prefer-const\n    let interval;\n    // eslint-disable-next-line prefer-const\n    let sacrificialFrame;\n    let sacrificialFrameWin;\n\n    const cancel = () => {\n        cancelled = true;\n        for (const observer of mutationObservers) {\n            observer.disconnect();\n        }\n        if (interval) {\n            interval.cancel();\n        }\n        if (sacrificialFrameWin) {\n            // eslint-disable-next-line no-use-before-define\n            sacrificialFrameWin.removeEventListener('unload', elementClosed);\n        }\n        if (sacrificialFrame) {\n            destroyElement(sacrificialFrame);\n        }\n    };\n\n    const elementClosed = () => {\n        if (!cancelled) {\n            handler();\n            cancel();\n        }\n    };\n\n    if (isElementClosed(element)) {\n        elementClosed();\n        return { cancel };\n    }\n\n    // Strategy 1: Mutation observer\n\n    if (window.MutationObserver) {\n        let mutationElement = element.parentElement;\n        while (mutationElement) {\n            const mutationObserver = new window.MutationObserver(() => {\n                if (isElementClosed(element)) {\n                    elementClosed();\n                }\n            });\n\n            mutationObserver.observe(mutationElement, { childList: true });\n            mutationObservers.push(mutationObserver);\n            mutationElement = mutationElement.parentElement;\n        }\n    }\n\n    // Strategy 2: Sacrificial iframe\n\n    sacrificialFrame = document.createElement('iframe');\n    sacrificialFrame.setAttribute('name', `__detect_close_${ uniqueID() }__`);\n    sacrificialFrame.style.display = 'none';\n    awaitFrameWindow(sacrificialFrame).then(frameWin => {\n        sacrificialFrameWin = assertSameDomain(frameWin);\n        sacrificialFrameWin.addEventListener('unload', elementClosed);\n    });\n    element.appendChild(sacrificialFrame);\n\n    // Strategy 3: Poller\n\n    const check = () => {\n        if (isElementClosed(element)) {\n            elementClosed();\n        }\n    };\n    interval = safeInterval(check, 1000);\n\n    return { cancel };\n}\n\nexport function fixScripts(el : HTMLElement, doc : Document = window.document) {\n    for (const script of querySelectorAll('script', el)) {\n        const parentNode = script.parentNode;\n\n        if (!parentNode) {\n            continue;\n        }\n\n        const newScript = doc.createElement('script');\n        newScript.text = script.textContent;\n        parentNode.replaceChild(newScript, script);\n    }\n}\n\ntype OnResizeOptions = {|\n    width? : boolean,\n    height? : boolean,\n    interval? : number,\n    win? : SameDomainWindowType\n|};\n\nexport function onResize(el : HTMLElement, handler : ({| width : number, height : number |}) => void, { width = true, height = true, interval = 100, win = window } : OnResizeOptions = {}) : {| cancel : () => void |} {\n    let currentWidth = el.offsetWidth;\n    let currentHeight = el.offsetHeight;\n    let canceled = false;\n\n    handler({ width: currentWidth, height: currentHeight });\n\n    const check = () => {\n        if (canceled || !isElementVisible(el)) {\n            return;\n        }\n\n        const newWidth = el.offsetWidth;\n        const newHeight = el.offsetHeight;\n\n        if ((width && newWidth !== currentWidth) || (height && newHeight !== currentHeight)) {\n            handler({ width: newWidth, height: newHeight });\n        }\n\n        currentWidth = newWidth;\n        currentHeight = newHeight;\n    };\n\n    let observer;\n    let timeout;\n\n    win.addEventListener('resize', check);\n\n    if (typeof win.ResizeObserver !== 'undefined') {\n        observer = new win.ResizeObserver(check);\n        observer.observe(el);\n        timeout = safeInterval(check, interval * 10);\n\n    } else if (typeof win.MutationObserver !== 'undefined') {\n        observer = new win.MutationObserver(check);\n        observer.observe(el, {\n            attributes:    true,\n            childList:     true,\n            subtree:       true,\n            characterData: false\n        });\n        timeout = safeInterval(check, interval * 10);\n    } else {\n        timeout = safeInterval(check, interval);\n    }\n\n    return {\n        cancel: () => {\n            canceled = true;\n            observer.disconnect();\n            window.removeEventListener('resize', check);\n            timeout.cancel();\n        }\n    };\n}\n\nexport function getResourceLoadTime(url : string) : ?number {\n    const performance = getPerformance();\n\n    if (!performance) {\n        return;\n    }\n\n    if (typeof performance.getEntries !== 'function') {\n        return;\n    }\n\n    const entries = performance.getEntries();\n\n    for (let i = 0; i < entries.length; i++) {\n        const entry = entries[i];\n\n        if (entry && entry.name && entry.name.indexOf(url) === 0 && typeof entry.duration === 'number') {\n            return Math.floor(entry.duration);\n        }\n    }\n}\n\nexport function isShadowElement(element : Node) : boolean {\n    while (element.parentNode) {\n        element = element.parentNode;\n    }\n\n    return element.toString() === '[object ShadowRoot]';\n}\n\nexport function getShadowRoot(element : Node) : ?Node {\n    while (element.parentNode) {\n        element = element.parentNode;\n    }\n\n    if (isShadowElement(element)) {\n        return element;\n    }\n}\n\nexport function getShadowHost(element : Node) : ?HTMLElement {\n    const shadowRoot = getShadowRoot(element);\n\n    // $FlowFixMe\n    if (shadowRoot && shadowRoot.host) {\n        // $FlowFixMe\n        return shadowRoot.host;\n    }\n}\n\n\nexport function insertShadowSlot(element : HTMLElement) : HTMLElement {\n    const shadowHost = getShadowHost(element);\n\n    if (!shadowHost) {\n        throw new Error(`Element is not in shadow dom`);\n    }\n\n    const slotName = `shadow-slot-${ uniqueID() }`;\n    const slot = document.createElement('slot');\n    slot.setAttribute('name', slotName);\n    element.appendChild(slot);\n\n    const slotProvider = document.createElement('div');\n    slotProvider.setAttribute('slot', slotName);\n    shadowHost.appendChild(slotProvider);\n\n    if (isShadowElement(shadowHost)) {\n        return insertShadowSlot(slotProvider);\n    }\n\n    return slotProvider;\n}\n\nexport function preventClickFocus(el : HTMLElement) {\n    const onFocus = (event : Event) => {\n        el.removeEventListener('focus', onFocus);\n        event.preventDefault();\n        el.blur();\n        return false;\n    };\n\n    el.addEventListener('mousedown', () => {\n        el.addEventListener('focus', onFocus);\n        setTimeout(() => {\n            el.removeEventListener('focus', onFocus);\n        }, 1);\n    });\n}\n\nexport function getStackTrace() : string {\n    try {\n        throw new Error('_');\n    }\n    catch (err) {\n        return err.stack || '';\n    }\n}\n\nfunction inferCurrentScript() : ?HTMLScriptElement {\n    try {\n        const stack = getStackTrace();\n        const stackDetails = (/.*at [^(]*\\((.*):(.+):(.+)\\)$/ig).exec(stack);\n        const scriptLocation = stackDetails && stackDetails[1];\n\n        if (!scriptLocation) {\n            return;\n        }\n\n        for (const script of Array.prototype.slice.call(document.getElementsByTagName('script')).reverse()) {\n            if (script.src && script.src === scriptLocation) {\n                return script;\n            }\n        }\n\n    } catch (err) {\n        // pass\n    }\n}\n\n// eslint-disable-next-line compat/compat\nlet currentScript = typeof document !== 'undefined' ? document.currentScript : null;\n\ntype GetCurrentScript = () => HTMLScriptElement;\n\nexport const getCurrentScript : GetCurrentScript = memoize(() => {\n    if (currentScript) {\n        return currentScript;\n    }\n\n    currentScript = inferCurrentScript();\n\n    if (currentScript) {\n        return currentScript;\n    }\n\n    throw new Error('Can not determine current script');\n});\n\nconst currentUID = uniqueID();\n\ntype GetCurrentScriptUID = () => string;\n\nexport const getCurrentScriptUID : GetCurrentScriptUID = memoize(() => {\n    let script;\n\n    try {\n        script = getCurrentScript();\n    } catch (err) {\n        return currentUID;\n    }\n\n    let uid = script.getAttribute(ATTRIBUTES.UID);\n\n    if (uid && typeof uid === 'string') {\n        return uid;\n    }\n\n    uid = script.getAttribute(`${ ATTRIBUTES.UID }-auto`);\n\n    if (uid && typeof uid === 'string') {\n        return uid;\n    }\n\n    if (script.src) {\n\n        const { src, dataset } = script;\n        const stringToHash = JSON.stringify({ src, dataset });\n        const hashedString = strHashStr(stringToHash);\n        const hashResult = hashedString.slice(hashedString.length - UID_HASH_LENGTH);\n\n        uid = `uid_${ hashResult }`;\n    } else {\n        uid = uniqueID();\n    }\n\n    script.setAttribute(`${ ATTRIBUTES.UID }-auto`, uid);\n\n    return uid;\n});\n","/* @flow */\n\nexport function isPerc(str : string) : boolean {\n    return typeof str === 'string' && (/^[0-9]+%$/).test(str);\n}\n\nexport function isPx(str : string) : boolean {\n    return typeof str === 'string' && (/^[0-9]+px$/).test(str);\n}\n\nexport function toNum(val : string | number) : number {\n\n    if (typeof val === 'number') {\n        return val;\n    }\n\n    const match = val.match(/^([0-9]+)(px|%)$/);\n\n    if (!match) {\n        throw new Error(`Could not match css value from ${ val }`);\n    }\n\n    return parseInt(match[1], 10);\n}\n\nexport function toPx(val : number | string) : string {\n    return `${ toNum(val) }px`;\n}\n\nexport function toCSS(val : number | string) : string {\n\n    if (typeof val === 'number') {\n        return toPx(val);\n    }\n\n    return isPerc(val) ? val : toPx(val);\n}\n\nexport function percOf(num : number, perc : string) : number {\n    return parseInt(num * toNum(perc)  / 100, 10);\n}\n\nexport function normalizeDimension(dim : string | number, max : number) : number {\n    if (typeof dim === 'number') {\n        return dim;\n    } else if (isPerc(dim)) {\n        return percOf(max, dim);\n    } else if (isPx(dim)) {\n        return toNum(dim);\n    } else {\n        throw new Error(`Can not normalize dimension: ${ dim }`);\n    }\n}\n","/* @flow */\n\nimport { type CrossDomainWindowType, type SameDomainWindowType } from 'cross-domain-utils/src';\nimport { WeakMap } from 'cross-domain-safe-weakmap/src';\nimport { getOrSet, getCurrentScriptUID } from 'belter/src';\n\nexport function getGlobalKey() : string {\n    if (__POST_ROBOT__.__SCRIPT_NAMESPACE__) {\n        return `${ __POST_ROBOT__.__GLOBAL_KEY__ }_${ getCurrentScriptUID() }`;\n    } else {\n        return __POST_ROBOT__.__GLOBAL_KEY__;\n    }\n}\n\nexport function getGlobal(win : SameDomainWindowType = window) : Object {\n    const globalKey = getGlobalKey();\n\n    if (win !== window) {\n        return win[globalKey];\n    }\n    const global : Object = win[globalKey] = win[globalKey] || {};\n    return global;\n}\n\nexport function deleteGlobal() {\n    const globalKey = getGlobalKey();\n    delete window[globalKey];\n}\n\ntype ObjectGetter = () => Object;\nconst getObj : ObjectGetter = () => ({});\n\ntype GetOrSet<T> = ((string, () => T) => T) & ((string, () => void) => void);\n\ntype GlobalStore<T> = {|\n    get : ((string, T) => T) & ((string, void) => T | void),\n    set : (string, T) => T,\n    has : (string) => boolean,\n    del : (string) => void,\n    getOrSet : GetOrSet<T>,\n    reset : () => void,\n    keys : () => $ReadOnlyArray<string>\n|};\n\nexport function globalStore<T : mixed>(key? : string = 'store', defStore? : ObjectGetter = getObj) : GlobalStore<T> {\n    return getOrSet(getGlobal(), key, () => {\n        let store = defStore();\n\n        return {\n            has: (storeKey) => {\n                return store.hasOwnProperty(storeKey);\n            },\n            get: (storeKey, defVal) => {\n                // $FlowFixMe\n                return store.hasOwnProperty(storeKey) ? store[storeKey] : defVal;\n            },\n            set: (storeKey, val) => {\n                store[storeKey] = val;\n                return val;\n            },\n            del: (storeKey) => {\n                delete store[storeKey];\n            },\n            getOrSet: (storeKey, getter) => {\n                // $FlowFixMe\n                return getOrSet(store, storeKey, getter);\n            },\n            reset: () => {\n                store = defStore();\n            },\n            keys: () => {\n                return Object.keys(store);\n            }\n        };\n    });\n}\n\nexport class WildCard {}\n\nexport function getWildcard() : WildCard {\n    const global = getGlobal();\n    global.WINDOW_WILDCARD = global.WINDOW_WILDCARD || new WildCard();\n    return global.WINDOW_WILDCARD;\n}\n\ntype WindowStore<T> = {|\n    get : ((CrossDomainWindowType | WildCard, T) => T) & ((CrossDomainWindowType | WildCard, void) => T | void),\n    set : (CrossDomainWindowType | WildCard, T) => T,\n    has : (CrossDomainWindowType | WildCard) => boolean,\n    del : (CrossDomainWindowType | WildCard) => void,\n    getOrSet : (CrossDomainWindowType | WildCard, () => T) => T\n|};\n\nexport function windowStore<T>(key? : string = 'store', defStore? : ObjectGetter = getObj) : WindowStore<T> {\n    return globalStore('windowStore').getOrSet(key, () => {\n        const winStore = new WeakMap();\n\n        const getStore = (win : CrossDomainWindowType | WildCard) : ObjectGetter => {\n            return winStore.getOrSet(win, defStore);\n        };\n    \n        return {\n            has: (win) => {\n                const store = getStore(win);\n                return store.hasOwnProperty(key);\n            },\n            get: (win, defVal) => {\n                const store = getStore(win);\n                // $FlowFixMe\n                return store.hasOwnProperty(key) ? store[key] : defVal;\n            },\n            set: (win, val) => {\n                const store = getStore(win);\n                store[key] = val;\n                return val;\n            },\n            del: (win) => {\n                const store = getStore(win);\n                delete store[key];\n            },\n            getOrSet: (win, getter) => {\n                const store = getStore(win);\n                return getOrSet(store, key, getter);\n            }\n        };\n    });\n}\n","/* @flow */\n\nexport const KEY_CODES = {\n    ENTER: 13,\n    SPACE: 32\n};\n\nexport const ATTRIBUTES = {\n    UID: 'data-uid'\n};\n\nexport const UID_HASH_LENGTH = 30;\n","/* @flow */\n\nimport { getAncestor, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { uniqueID } from 'belter/src';\n\nimport { MESSAGE_NAME, WILDCARD } from '../conf';\nimport { windowStore, globalStore, getGlobal } from '../global';\nimport type { OnType, SendType, CancelableType } from '../types';\n\nfunction getInstanceID() : string {\n    return globalStore('instance').getOrSet('instanceID', uniqueID);\n}\n\nfunction getHelloPromise(win : CrossDomainWindowType) : ZalgoPromise<{| domain : string |}> {\n    const helloPromises = windowStore('helloPromises');\n    return helloPromises.getOrSet(win, () => new ZalgoPromise());\n}\n\nfunction resolveHelloPromise(win : CrossDomainWindowType, { domain }) : ZalgoPromise<{| domain : string |}> {\n    const helloPromises = windowStore('helloPromises');\n    const existingPromise = helloPromises.get(win);\n    if (existingPromise) {\n        existingPromise.resolve({ domain });\n    }\n    const newPromise = ZalgoPromise.resolve({ domain });\n    helloPromises.set(win, newPromise);\n    return newPromise;\n}\n\nfunction listenForHello({ on } : {| on : OnType |}) : CancelableType {\n    return on(MESSAGE_NAME.HELLO, { domain: WILDCARD }, ({ source, origin }) => {\n        resolveHelloPromise(source, { domain: origin });\n        return { instanceID: getInstanceID() };\n    });\n}\n\nexport function sayHello(win : CrossDomainWindowType, { send } : {| send : SendType |}) : ZalgoPromise<{| win : CrossDomainWindowType, domain : string, instanceID : string |}> {\n    return send(win, MESSAGE_NAME.HELLO, { instanceID: getInstanceID() }, { domain: WILDCARD, timeout: -1 })\n        .then(({ origin, data: { instanceID } }) => {\n            resolveHelloPromise(win, { domain: origin });\n            return { win, domain: origin, instanceID };\n        });\n}\n\nexport function getWindowInstanceID(win : CrossDomainWindowType, { send } : {| send : SendType |}) : ZalgoPromise<string> {\n    return windowStore('windowInstanceIDPromises').getOrSet(win, () => {\n        return sayHello(win, { send }).then(({ instanceID }) => instanceID);\n    });\n}\n\nexport function initHello({ on, send } : {| on : OnType, send : SendType |}) : CancelableType {\n    return globalStore('builtinListeners').getOrSet('helloListener', () => {\n        const listener = listenForHello({ on });\n\n        const parent = getAncestor();\n        if (parent) {\n            sayHello(parent, { send }).catch(err => {\n                // $FlowFixMe\n                if (__TEST__ && getGlobal(parent)) {\n                    throw err;\n                }\n            });\n        }\n\n        return listener;\n    });\n}\n\nexport function awaitWindowHello(win : CrossDomainWindowType, timeout : number = 5000, name : string = 'Window') : ZalgoPromise<{| domain : string |}> {\n    let promise = getHelloPromise(win);\n\n    if (timeout !== -1) {\n        promise = promise.timeout(timeout, new Error(`${ name } did not load after ${ timeout }ms`));\n    }\n\n    return promise;\n}\n","/* @flow */\n\nexport const MESSAGE_TYPE = {\n    REQUEST:  ('postrobot_message_request' : 'postrobot_message_request'),\n    RESPONSE: ('postrobot_message_response' : 'postrobot_message_response'),\n    ACK:      ('postrobot_message_ack' : 'postrobot_message_ack')\n};\n\nexport const MESSAGE_ACK = {\n    SUCCESS: ('success' : 'success'),\n    ERROR:   ('error' : 'error')\n};\n\nexport const MESSAGE_NAME = {\n    METHOD:      ('postrobot_method' : 'postrobot_method'),\n    HELLO:       ('postrobot_hello' : 'postrobot_hello'),\n    OPEN_TUNNEL: ('postrobot_open_tunnel' : 'postrobot_open_tunnel')\n};\n\nexport const SEND_STRATEGY = {\n    POST_MESSAGE: ('postrobot_post_message' : 'postrobot_post_message'),\n    BRIDGE:       ('postrobot_bridge' : 'postrobot_bridge'),\n    GLOBAL:       ('postrobot_global' : 'postrobot_global')\n};\n\nexport const BRIDGE_NAME_PREFIX = '__postrobot_bridge__';\nexport const POSTROBOT_PROXY =    '__postrobot_proxy__';\n\nexport const WILDCARD = '*';\n\nexport const SERIALIZATION_TYPE = {\n    CROSS_DOMAIN_ZALGO_PROMISE: ('cross_domain_zalgo_promise' : 'cross_domain_zalgo_promise'),\n    CROSS_DOMAIN_FUNCTION:      ('cross_domain_function' : 'cross_domain_function'),\n    CROSS_DOMAIN_WINDOW:        ('cross_domain_window' : 'cross_domain_window')\n};\n","/* @flow */\n\nimport { type CrossDomainWindowType } from 'cross-domain-utils/src';\n\nimport { windowStore } from '../global';\n\nexport function markWindowKnown(win : CrossDomainWindowType) {\n    const knownWindows = windowStore('knownWindows');\n    knownWindows.set(win, true);\n}\n\nexport function isWindowKnown(win : CrossDomainWindowType) : boolean {\n    const knownWindows = windowStore('knownWindows');\n    return knownWindows.get(win, false);\n}\n","/* @flow */\n\nimport { TYPE } from './constants';\nimport type { CustomSerializedType } from './types';\n\nexport function isSerializedType(item : mixed) : boolean {\n    return (typeof item === 'object' && item !== null && typeof item.__type__ === 'string');\n}\n\nexport function determineType(val : mixed) : $Values<typeof TYPE> | void {\n    if (typeof val === 'undefined') {\n        return TYPE.UNDEFINED;\n    }\n\n    if (val === null) {\n        return TYPE.NULL;\n    }\n\n    if (Array.isArray(val)) {\n        return TYPE.ARRAY;\n    }\n\n    if (typeof val === 'function') {\n        return TYPE.FUNCTION;\n    }\n\n    if (typeof val === 'object') {\n\n        if (val instanceof Error) {\n            return TYPE.ERROR;\n        }\n\n        if (typeof val.then === 'function') {\n            return TYPE.PROMISE;\n        }\n\n        if (Object.prototype.toString.call(val) === '[object RegExp]') {\n            return TYPE.REGEX;\n        }\n\n        if (Object.prototype.toString.call(val) === '[object Date]') {\n            return TYPE.DATE;\n        }\n\n        return TYPE.OBJECT;\n    }\n\n    if (typeof val === 'string') {\n        return TYPE.STRING;\n    }\n\n    if (typeof val === 'number') {\n        return TYPE.NUMBER;\n    }\n\n    if (typeof val === 'boolean') {\n        return TYPE.BOOLEAN;\n    }\n}\n\nexport function serializeType<T : string, V : mixed>(type : T, val : V) : CustomSerializedType<T, V> {\n    return {\n        __type__: type,\n        __val__:  val\n    };\n}\n","/* @flow */\n\nexport const TYPE = {\n    FUNCTION:  ('function' : 'function'),\n    ERROR:     ('error' : 'error'),\n    PROMISE:   ('promise' : 'promise'),\n    REGEX:     ('regex' : 'regex'),\n    DATE:      ('date' : 'date'),\n    ARRAY:     ('array' : 'array'),\n    OBJECT:    ('object' : 'object'),\n    STRING:    ('string' : 'string'),\n    NUMBER:    ('number' : 'number'),\n    BOOLEAN:   ('boolean' : 'boolean'),\n    NULL:      ('null' : 'null'),\n    UNDEFINED: ('undefined' : 'undefined')\n};\n","/* @flow */\n\nimport { TYPE } from './constants';\nimport type { Thenable, CustomSerializedType, NativeSerializedType } from './types';\nimport { determineType, isSerializedType } from './common';\nimport {\n    serializeFunction,\n    serializeError, type SerializedError,\n    serializePromise,\n    serializeRegex, type SerializedRegex,\n    serializeDate, type SerializedDate,\n    serializeArray,\n    serializeObject,\n    serializeString,\n    serializeNumber,\n    serializeBoolean,\n    serializeNull\n} from './serializers';\n\ntype NativeSerializer<V : mixed, S : mixed, T : $Values<typeof TYPE>> = (value : V, key : string) => NativeSerializedType<T, S>;\ntype CustomSerializer<V : mixed, S : mixed, T : string> = (value : V, key : string) => CustomSerializedType<T, S>;\ntype PrimitiveSerializer<V : mixed, S : mixed> = (value : V, key : string) => S;\ntype CustomOrPrimitiveSerializer<V : mixed, T : string> = CustomSerializer<V, *, T> | PrimitiveSerializer<V, *>;\ntype NativeOrCustomOrPrimitiveSerializer<V : mixed, S : mixed, T : string> = NativeSerializer<V, S, T> | CustomOrPrimitiveSerializer<V, T>;\n\ntype Serializers = {|\n    function? : CustomOrPrimitiveSerializer<Function, typeof TYPE.FUNCTION>,\n    error? : NativeOrCustomOrPrimitiveSerializer<Error, SerializedError, typeof TYPE.ERROR>,\n    promise? : CustomOrPrimitiveSerializer<Thenable, typeof TYPE.PROMISE>,\n    regex? : NativeOrCustomOrPrimitiveSerializer<RegExp, SerializedRegex, typeof TYPE.REGEX>,\n    date? : NativeOrCustomOrPrimitiveSerializer<Date, SerializedDate, typeof TYPE.DATE>,\n    array? : CustomOrPrimitiveSerializer<$ReadOnlyArray<mixed>, typeof TYPE.ARRAY>,\n    object? : CustomOrPrimitiveSerializer<Object, typeof TYPE.OBJECT>,\n    string? : CustomOrPrimitiveSerializer<string, typeof TYPE.STRING>,\n    number? : CustomOrPrimitiveSerializer<number, typeof TYPE.NUMBER>,\n    boolean? : CustomOrPrimitiveSerializer<boolean, typeof TYPE.BOOLEAN>,\n    null? : CustomOrPrimitiveSerializer<null, typeof TYPE.NULL>\n|};\n\nconst SERIALIZER : Serializers = {\n    [ TYPE.FUNCTION ]:  serializeFunction,\n    [ TYPE.ERROR ]:     serializeError,\n    [ TYPE.PROMISE ]:   serializePromise,\n    [ TYPE.REGEX ]:     serializeRegex,\n    [ TYPE.DATE ]:      serializeDate,\n    [ TYPE.ARRAY ]:     serializeArray,\n    [ TYPE.OBJECT ]:    serializeObject,\n    [ TYPE.STRING ]:    serializeString,\n    [ TYPE.NUMBER ]:    serializeNumber,\n    [ TYPE.BOOLEAN ]:   serializeBoolean,\n    [ TYPE.NULL ]:      serializeNull\n};\n\n// $FlowFixMe\nconst defaultSerializers : Serializers = {};\n\nexport function serialize<T : mixed>(obj : T, serializers : Serializers = defaultSerializers) : string {\n\n    function replacer(key) : ?mixed {\n        const val = this[key];\n\n        if (isSerializedType(this)) {\n            return val;\n        }\n        \n        const type = determineType(val);\n\n        if (!type) {\n            return val;\n        }\n\n        // $FlowFixMe\n        const serializer = serializers[type] || SERIALIZER[type];\n\n        if (!serializer) {\n            return val;\n        }\n\n        return serializer(val, key);\n    }\n\n    const result = JSON.stringify(obj, replacer);\n\n    if (typeof result === 'undefined') {\n        return TYPE.UNDEFINED;\n    }\n\n    return result;\n}\n","/* @flow */\n\nexport type SerializedFunction = void;\n\nexport function serializeFunction() : SerializedFunction {\n    // pass\n}\n\nexport function deserializeFunction() {\n    throw new Error(`Function serialization is not implemented; nothing to deserialize`);\n}\n","/* @flow */\n\nimport { serializeType } from '../common';\nimport { TYPE } from '../constants';\nimport type { NativeSerializedType } from '../types';\n\nimport { serializeObject } from './object';\n\nexport type SerializedError = {|\n    message : string,\n    stack : string,\n    code : string | number | void,\n    data : mixed\n|};\n\n// $FlowFixMe\nexport function serializeError({ message, stack, code, data } : Error) : NativeSerializedType<typeof TYPE.ERROR, SerializedError> {\n    return serializeType(TYPE.ERROR, { message, stack, code, data });\n}\n\nexport function deserializeError({ message, stack, code, data } : SerializedError) : Error {\n    const error = new Error(message);\n    // $FlowFixMe\n    error.code = code;\n\n    if (data) {\n        // $FlowFixMe\n        error.data = serializeObject(data);\n    }\n\n    error.stack = `${ stack }\\n\\n${ error.stack }`;\n    return error;\n}\n","/* @flow */\n\nexport type SerializedPromise = void;\n\nexport function serializePromise() : SerializedPromise {\n    // pass\n}\n\nexport function deserializePromise() {\n    throw new Error(`Promise serialization is not implemented; nothing to deserialize`);\n}\n","/* @flow */\n\nimport { serializeType } from '../common';\nimport { TYPE } from '../constants';\nimport type { NativeSerializedType } from '../types';\n\nexport type SerializedRegex = string;\n\nexport function serializeRegex(val : RegExp) : NativeSerializedType<typeof TYPE.REGEX, SerializedRegex> {\n    return serializeType(TYPE.REGEX, val.source);\n}\n\nexport function deserializeRegex(val : string) : RegExp {\n    // eslint-disable-next-line security/detect-non-literal-regexp\n    return new RegExp(val);\n}\n","/* @flow */\n\nimport { serializeType } from '../common';\nimport { TYPE } from '../constants';\nimport type { NativeSerializedType } from '../types';\n\nexport type SerializedDate = string;\n\nexport function serializeDate(val : Date) : NativeSerializedType<typeof TYPE.DATE, SerializedDate> {\n    return serializeType(TYPE.DATE, val.toJSON());\n}\n\nexport function deserializeDate(val : string) : Date {\n    return new Date(val);\n}\n","/* @flow */\n\nexport type SerializedArray<T : mixed = mixed> = $ReadOnlyArray<T>;\n\nexport function serializeArray<T : mixed>(val : $ReadOnlyArray<T>) : SerializedArray<T> {\n    return val;\n}\n\nexport function deserializeArray<T : mixed>(val : SerializedArray<T>) : $ReadOnlyArray<T> {\n    return val;\n}\n","/* @flow */\n\nexport type SerializedObject = Object;\n\nexport function serializeObject(val : Object) : SerializedObject {\n    return val;\n}\n\nexport function deserializeObject(val : SerializedObject) : Object {\n    return val;\n}\n","/* @flow */\n\nexport type SerializedString = string;\n\nexport function serializeString(val : string) : SerializedString {\n    return val;\n}\n\nexport function deserializeString(val : SerializedString) : string {\n    return val;\n}\n","/* @flow */\n\nexport type SerializedNumber = number;\n\nexport function serializeNumber(val : number) : SerializedNumber {\n    return val;\n}\n\nexport function deserializeNumber(val : SerializedNumber) : number {\n    return val;\n}\n","/* @flow */\n\nexport type SerializedBoolean = boolean;\n\nexport function serializeBoolean(val : boolean) : SerializedBoolean {\n    return val;\n}\n\nexport function deserializeBoolean(val : SerializedBoolean) : boolean {\n    return val;\n}\n","/* @flow */\n\nexport type SerializedNull = null;\n\nexport function serializeNull(val : null) : SerializedNull {\n    return val;\n}\n\nexport function deserializeNull(val : SerializedNull) : null {\n    return val;\n}\n","/* @flow */\n\nimport type { Thenable } from './types';\nimport { TYPE } from './constants';\nimport { determineType, isSerializedType } from './common';\nimport {\n    deserializeFunction,\n    deserializeError, type SerializedError,\n    deserializePromise,\n    deserializeRegex, type SerializedRegex,\n    deserializeDate, type SerializedDate,\n    deserializeArray,\n    deserializeObject,\n    deserializeString,\n    deserializeNumber,\n    deserializeBoolean,\n    deserializeNull\n} from './serializers';\n\ntype Deserializer<V : mixed, S : mixed> = (serializedValue : S, key : string) => V;\ntype PrimitiveDeserializer<V, S = V> = (serializedValue : S, key : string) => V;\n\ntype Deserializers = {\n    function? : Deserializer<Function, *>,\n    error? : Deserializer<Error, SerializedError>,\n    promise? : Deserializer<Thenable, *>,\n    regex? : Deserializer<RegExp, SerializedRegex>,\n    date? : Deserializer<Date, SerializedDate>,\n    array? : PrimitiveDeserializer<$ReadOnlyArray<mixed>>,\n    object? : PrimitiveDeserializer<Object>,\n    string? : PrimitiveDeserializer<string>,\n    number? : PrimitiveDeserializer<number>,\n    boolean? : PrimitiveDeserializer<boolean>,\n    null? : PrimitiveDeserializer<null>,\n    [string] : Deserializer<mixed, *>\n};\n\n// $FlowFixMe\nconst DESERIALIZER : Deserializers = {\n    [ TYPE.FUNCTION ]:  deserializeFunction,\n    [ TYPE.ERROR ]:     deserializeError,\n    [ TYPE.PROMISE ]:   deserializePromise,\n    [ TYPE.REGEX ]:     deserializeRegex,\n    [ TYPE.DATE ]:      deserializeDate,\n    [ TYPE.ARRAY ]:     deserializeArray,\n    [ TYPE.OBJECT ]:    deserializeObject,\n    [ TYPE.STRING ]:    deserializeString,\n    [ TYPE.NUMBER ]:    deserializeNumber,\n    [ TYPE.BOOLEAN ]:   deserializeBoolean,\n    [ TYPE.NULL ]:      deserializeNull\n};\n\n// $FlowFixMe\nconst defaultDeserializers : Deserializers = {};\n\nexport function deserialize<T : mixed | null | void>(str : string, deserializers : Deserializers = defaultDeserializers) : T {\n    if (str === TYPE.UNDEFINED) {\n        // $FlowFixMe\n        return;\n    }\n\n    function replacer(key, val) : ?mixed {\n        if (isSerializedType(this)) {\n            return val;\n        }\n\n        let type;\n        let value;\n\n        if (isSerializedType(val)) {\n            type = val.__type__;\n            value = val.__val__;\n        } else {\n            type = determineType(val);\n            value = val;\n        }\n\n        if (!type) {\n            return value;\n        }\n\n        // $FlowFixMe\n        const deserializer = deserializers[type] || DESERIALIZER[type];\n\n        if (!deserializer) {\n            return value;\n        }\n\n        return deserializer(value, key);\n    }\n\n    return JSON.parse(str, replacer);\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { getDomain, isSameDomain, isOpener, isSameTopWindow, matchDomain, getUserAgent, getDomainFromUrl, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { noop } from 'belter/src';\n\nimport { BRIDGE_NAME_PREFIX } from '../conf';\nimport { windowStore } from '../global';\n\nexport function needsBridgeForBrowser() : boolean {\n\n    if (getUserAgent(window).match(/MSIE|trident|edge\\/12|edge\\/13/i)) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function needsBridgeForWin(win : CrossDomainWindowType) : boolean {\n\n    if (!isSameTopWindow(window, win)) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function needsBridgeForDomain(domain : ?string, win : ?CrossDomainWindowType) : boolean {\n\n    if (domain) {\n        if (getDomain() !== getDomainFromUrl(domain)) {\n            return true;\n        }\n    } else if (win) {\n        if (!isSameDomain(win))  {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function needsBridge({ win, domain } : {| win? : CrossDomainWindowType, domain? : string |}) : boolean {\n\n    if (!needsBridgeForBrowser()) {\n        return false;\n    }\n\n    if (domain && !needsBridgeForDomain(domain, win)) {\n        return false;\n    }\n\n    if (win && !needsBridgeForWin(win)) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function getBridgeName(domain : string) : string {\n\n    domain = domain || getDomainFromUrl(domain);\n\n    const sanitizedDomain = domain.replace(/[^a-zA-Z0-9]+/g, '_');\n\n    const id = `${ BRIDGE_NAME_PREFIX }_${ sanitizedDomain }`;\n\n    return id;\n}\n\nexport function isBridge() : boolean {\n    return Boolean(window.name && window.name === getBridgeName(getDomain()));\n}\n\nexport const documentBodyReady : ZalgoPromise<HTMLBodyElement> = new ZalgoPromise(resolve => {\n\n    if (window.document && window.document.body) {\n        return resolve(window.document.body);\n    }\n\n    const interval = setInterval(() => {\n        if (window.document && window.document.body) {\n            clearInterval(interval);\n            return resolve(window.document.body);\n        }\n    }, 10);\n});\n\nexport function registerRemoteWindow(win : CrossDomainWindowType) {\n    const remoteWindowPromises = windowStore('remoteWindowPromises');\n    remoteWindowPromises.getOrSet(win, () => new ZalgoPromise());\n}\n\nexport function findRemoteWindow(win : CrossDomainWindowType) : ZalgoPromise<(remoteWin : CrossDomainWindowType, message : string, remoteDomain : string) => void> {\n    const remoteWindowPromises = windowStore('remoteWindowPromises');\n    const remoteWinPromise = remoteWindowPromises.get(win);\n\n    if (!remoteWinPromise) {\n        throw new Error(`Remote window promise not found`);\n    }\n\n    return remoteWinPromise;\n}\n\ntype SendMessageType = {|\n    (string) : void,\n    fireAndForget : (string) => void\n|};\n\nexport function registerRemoteSendMessage(win : CrossDomainWindowType, domain : string, sendMessage : SendMessageType) {\n    const sendMessageWrapper = (remoteWin : CrossDomainWindowType, remoteDomain : string, message : string) => {\n        if (remoteWin !== win) {\n            throw new Error(`Remote window does not match window`);\n        }\n\n        if (!matchDomain(remoteDomain, domain)) {\n            throw new Error(`Remote domain ${ remoteDomain } does not match domain ${ domain }`);\n        }\n\n        sendMessage.fireAndForget(message);\n    };\n\n    findRemoteWindow(win).resolve(sendMessageWrapper);\n}\n\nexport function rejectRemoteSendMessage(win : CrossDomainWindowType, err : Error) {\n    findRemoteWindow(win).reject(err).catch(noop);\n}\n\nexport function sendBridgeMessage(win : CrossDomainWindowType, domain : string, message : string) : ZalgoPromise<void> {\n\n    const messagingChild  = isOpener(window, win);\n    const messagingParent = isOpener(win, window);\n\n    if (!messagingChild && !messagingParent) {\n        throw new Error(`Can only send messages to and from parent and popup windows`);\n    }\n\n    return findRemoteWindow(win).then(sendMessage => {\n        return sendMessage(win, domain, message);\n    });\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { getDomain, getFrameByName, isWindowClosed, getDomainFromUrl, normalizeMockUrl, type CrossDomainWindowType } from 'cross-domain-utils/src';\n\nimport { BRIDGE_TIMEOUT, MESSAGE_NAME } from '../conf';\nimport { awaitWindowHello } from '../lib';\nimport { windowStore, globalStore } from '../global';\nimport type { OnType, SendType, ReceiveMessageType } from '../types';\n\nimport { getBridgeName, documentBodyReady, registerRemoteSendMessage, registerRemoteWindow } from './common';\n\ntype WinDetails = {|\n    win : CrossDomainWindowType,\n    domain? : ?string,\n    name? : ?string\n|};\n\nexport function listenForOpenTunnel({ on, send, receiveMessage } : {| on : OnType, send : SendType, receiveMessage : ReceiveMessageType |}) {\n    const popupWindowsByName = globalStore('popupWindowsByName');\n\n    on(MESSAGE_NAME.OPEN_TUNNEL, ({ source, origin, data }) => {\n        const bridgePromise = globalStore('bridges').get(origin);\n\n        if (!bridgePromise) {\n            throw new Error(`Can not find bridge promise for domain ${ origin }`);\n        }\n\n        return bridgePromise.then(bridge => {\n            if (source !== bridge) {\n                throw new Error(`Message source does not matched registered bridge for domain ${ origin }`);\n            }\n\n            if (!data.name) {\n                throw new Error(`Register window expected to be passed window name`);\n            }\n\n            if (!data.sendMessage) {\n                throw new Error(`Register window expected to be passed sendMessage method`);\n            }\n\n            if (!popupWindowsByName.has(data.name)) {\n                throw new Error(`Window with name ${ data.name } does not exist, or was not opened by this window`);\n            }\n\n            const getWindowDetails = () : WinDetails => {\n                const winDetails = popupWindowsByName.get(data.name);\n                // $FlowFixMe\n                return winDetails;\n            };\n\n            if (!getWindowDetails().domain) {\n                throw new Error(`We do not have a registered domain for window ${ data.name }`);\n            }\n\n            if (getWindowDetails().domain !== origin) {\n                throw new Error(`Message origin ${ origin } does not matched registered window origin ${ getWindowDetails().domain || 'unknown' }`);\n            }\n\n            registerRemoteSendMessage(getWindowDetails().win, origin, data.sendMessage);\n\n            return {\n                sendMessage(message) {\n\n                    if (!window || window.closed) {\n                        return;\n                    }\n\n                    if (!getWindowDetails()) {\n                        return;\n                    }\n\n                    const domain = getWindowDetails().domain;\n\n                    if (!domain) {\n                        return;\n                    }\n\n                    try {\n                        receiveMessage({\n                            data:   message,\n                            origin: domain,\n                            source: getWindowDetails().win\n                        }, { on, send });\n                    } catch (err) {\n                        ZalgoPromise.reject(err);\n                    }\n                }\n            };\n        });\n    });\n}\n\nfunction openBridgeFrame(name : string, url : string) : HTMLIFrameElement {\n\n    const iframe = document.createElement(`iframe`);\n\n    iframe.setAttribute(`name`, name);\n    iframe.setAttribute(`id`,   name);\n\n    iframe.setAttribute(`style`, `display: none; margin: 0; padding: 0; border: 0px none; overflow: hidden;`);\n    iframe.setAttribute(`frameborder`, `0`);\n    iframe.setAttribute(`border`, `0`);\n    iframe.setAttribute(`scrolling`, `no`);\n    iframe.setAttribute(`allowTransparency`, `true`);\n\n    iframe.setAttribute(`tabindex`, `-1`);\n    iframe.setAttribute(`hidden`, `true`);\n    iframe.setAttribute(`title`, ``);\n    iframe.setAttribute(`role`, `presentation`);\n\n    iframe.src = url;\n\n    return iframe;\n}\n\nexport function hasBridge(url : string, domain : string) : boolean {\n    const bridges = globalStore('bridges');\n    return bridges.has(domain || getDomainFromUrl(url));\n}\n\nexport function openBridge(url : string, domain : string) : ZalgoPromise<CrossDomainWindowType> {\n    const bridges = globalStore('bridges');\n    const bridgeFrames = globalStore('bridgeFrames');\n    \n    domain = domain || getDomainFromUrl(url);\n    \n    return bridges.getOrSet(domain, () => ZalgoPromise.try(() => {\n\n        if (getDomain() === domain) {\n            throw new Error(`Can not open bridge on the same domain as current domain: ${ domain }`);\n        }\n\n        const name  = getBridgeName(domain);\n        const frame = getFrameByName(window, name);\n\n        if (frame) {\n            throw new Error(`Frame with name ${ name } already exists on page`);\n        }\n\n        const iframe = openBridgeFrame(name, url);\n        bridgeFrames.set(domain, iframe);\n\n        return documentBodyReady.then(body => {\n\n            body.appendChild(iframe);\n            const bridge = iframe.contentWindow;\n\n            return new ZalgoPromise((resolve, reject) => {\n\n                iframe.addEventListener('load', resolve);\n                iframe.addEventListener('error', reject);\n\n            }).then(() => {\n\n                return awaitWindowHello(bridge, BRIDGE_TIMEOUT, `Bridge ${ url }`);\n\n            }).then(() => {\n\n                return bridge;\n            });\n        });\n    }));\n}\n\nexport function linkWindow({ win, name, domain } : WinDetails) : WinDetails {\n    const popupWindowsByName = globalStore('popupWindowsByName');\n    const popupWindowsByWin = windowStore('popupWindowsByWin');\n\n    for (const winName of popupWindowsByName.keys()) {\n        const details = popupWindowsByName.get(winName);\n        if (!details || isWindowClosed(details.win)) {\n            popupWindowsByName.del(winName);\n        }\n    }\n\n    if (isWindowClosed(win)) {\n        return { win, name, domain };\n    }\n\n    const details = popupWindowsByWin.getOrSet(win, () : WinDetails => {\n        if (!name) {\n            return { win };\n        }\n        \n        // $FlowFixMe\n        return popupWindowsByName.getOrSet(name, () : WinDetails => {\n            return { win, name };\n        });\n    });\n\n    if (details.win && details.win !== win) {\n        throw new Error(`Different window already linked for window: ${ name || 'undefined' }`);\n    }\n\n    if (name) {\n        details.name = name;\n        popupWindowsByName.set(name, details);\n    }\n\n    if (domain) {\n        details.domain = domain;\n        registerRemoteWindow(win);\n    }\n\n    popupWindowsByWin.set(win, details);\n    \n    return details;\n}\n\nexport function linkUrl(win : CrossDomainWindowType, url : string) {\n    linkWindow({ win, domain: getDomainFromUrl(url) });\n}\n\nexport function listenForWindowOpen() {\n    const windowOpen = window.open;\n\n    window.open = function windowOpenWrapper(url : string, name : string, options : string, last : mixed) : mixed {\n        const win = windowOpen.call(this, normalizeMockUrl(url), name, options, last);\n    \n        if (!win) {\n            return win;\n        }\n    \n        linkWindow({ win, name, domain: url ? getDomainFromUrl(url) : null });\n    \n        return win;\n    };\n}\n\nexport function destroyBridges() {\n    const bridges = globalStore('bridges');\n    const bridgeFrames = globalStore('bridgeFrames');\n\n    for (const domain of bridgeFrames.keys()) {\n        const frame = bridgeFrames.get(domain);\n        if (frame && frame.parentNode) {\n            frame.parentNode.removeChild(frame);\n        }\n    }\n    bridgeFrames.reset();\n    bridges.reset();\n}\n","/* @flow */\n\nimport type { OnType, SendType, ReceiveMessageType } from '../types';\n\nimport { listenForWindowOpen, listenForOpenTunnel } from './parent';\nimport { setupOpenTunnelToParent } from './bridge';\nimport { openTunnelToOpener } from './child';\n\nexport function setupBridge({ on, send, receiveMessage } : {| on : OnType, send : SendType, receiveMessage : ReceiveMessageType |}) {\n    listenForWindowOpen();\n    listenForOpenTunnel({ on, send, receiveMessage });\n    setupOpenTunnelToParent({ send });\n    openTunnelToOpener({ on, send, receiveMessage });\n}\n","/* @flow */\n\nimport { type ZalgoPromise } from 'zalgo-promise/src';\nimport { getParent, isWindowClosed, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { noop, uniqueID } from 'belter/src';\n\nimport { MESSAGE_NAME, WILDCARD } from '../conf';\nimport { getGlobal, globalStore } from '../global';\nimport type { SendType, ResponseMessageEvent } from '../types';\n\nfunction cleanTunnelWindows() {\n    const tunnelWindows = globalStore('tunnelWindows');\n\n    for (const key of tunnelWindows.keys()) {\n        const tunnelWindow = tunnelWindows[key];\n\n        try {\n            noop(tunnelWindow.source);\n        } catch (err) {\n            tunnelWindows.del(key);\n            continue;\n        }\n\n        if (isWindowClosed(tunnelWindow.source)) {\n            tunnelWindows.del(key);\n        }\n    }\n}\n\ntype TunnelWindowDataType = {|\n    name : string,\n    source : CrossDomainWindowType,\n    canary : () => void,\n    sendMessage : (message : string) => void\n|};\n\nfunction addTunnelWindow({ name, source, canary, sendMessage } : TunnelWindowDataType) : string {\n    cleanTunnelWindows();\n    const id = uniqueID();\n    const tunnelWindows = globalStore('tunnelWindows');\n    tunnelWindows.set(id, { name, source, canary, sendMessage });\n    return id;\n}\n\nexport function setupOpenTunnelToParent({ send } : {| send : SendType |}) {\n    getGlobal(window).openTunnelToParent = function openTunnelToParent({ name, source, canary, sendMessage } : TunnelWindowDataType) : ZalgoPromise<ResponseMessageEvent> {\n\n        const tunnelWindows = globalStore('tunnelWindows');\n        const parentWindow = getParent(window);\n    \n        if (!parentWindow) {\n            throw new Error(`No parent window found to open tunnel to`);\n        }\n    \n        const id = addTunnelWindow({ name, source, canary, sendMessage });\n    \n        return send(parentWindow, MESSAGE_NAME.OPEN_TUNNEL, {\n    \n            name,\n    \n            sendMessage() {\n    \n                const tunnelWindow = tunnelWindows.get(id);\n    \n                try {\n                    // IE gets antsy if you try to even reference a closed window\n                    noop(tunnelWindow && tunnelWindow.source);\n                } catch (err) {\n                    tunnelWindows.del(id);\n                    return;\n                }\n    \n                if (!tunnelWindow || !tunnelWindow.source || isWindowClosed(tunnelWindow.source)) {\n                    return;\n                }\n    \n                try {\n                    tunnelWindow.canary();\n                } catch (err) {\n                    return;\n                }\n    \n                tunnelWindow.sendMessage.apply(this, arguments);\n            }\n    \n        }, { domain: WILDCARD });\n    };\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { isSameDomain, getOpener, getDomain, getFrameByName, assertSameDomain, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { noop } from 'belter/src';\n\nimport { getGlobal, windowStore } from '../global';\nimport type { OnType, SendType, ReceiveMessageType } from '../types';\n\nimport { needsBridge, registerRemoteWindow, rejectRemoteSendMessage, registerRemoteSendMessage, getBridgeName } from './common';\n\nfunction awaitRemoteBridgeForWindow (win : CrossDomainWindowType) : ZalgoPromise<?CrossDomainWindowType> {\n    return windowStore('remoteBridgeAwaiters').getOrSet(win, () => {\n        return ZalgoPromise.try(() => {\n            const frame = getFrameByName(win, getBridgeName(getDomain()));\n\n            if (!frame) {\n                return;\n            }\n\n            if (isSameDomain(frame) && getGlobal(assertSameDomain(frame))) {\n                return frame;\n            }\n\n            return new ZalgoPromise(resolve => {\n\n                let interval;\n                let timeout; // eslint-disable-line prefer-const\n\n                interval = setInterval(() => { // eslint-disable-line prefer-const\n                    if (frame && isSameDomain(frame) && getGlobal(assertSameDomain(frame))) {\n                        clearInterval(interval);\n                        clearTimeout(timeout);\n                        return resolve(frame);\n                    }\n                }, 100);\n\n                timeout = setTimeout(() => {\n                    clearInterval(interval);\n                    return resolve();\n                }, 2000);\n            });\n        });\n    });\n}\n\nexport function openTunnelToOpener({ on, send, receiveMessage } : {| on : OnType, send : SendType, receiveMessage : ReceiveMessageType |}) : ZalgoPromise<void> {\n    return ZalgoPromise.try(() => {\n        const opener = getOpener(window);\n        \n        if (!opener || !needsBridge({ win: opener })) {\n            return;\n        }\n\n        registerRemoteWindow(opener);\n\n        return awaitRemoteBridgeForWindow(opener).then(bridge => {\n\n            if (!bridge) {\n                return rejectRemoteSendMessage(opener, new Error(`Can not register with opener: no bridge found in opener`));\n            }\n\n            if (!window.name) {\n                return rejectRemoteSendMessage(opener, new Error(`Can not register with opener: window does not have a name`));\n            }\n\n            return getGlobal(assertSameDomain(bridge)).openTunnelToParent({\n\n                name: window.name,\n\n                source: window,\n\n                canary() {\n                    // pass\n                },\n\n                sendMessage(message) {\n\n                    try {\n                        noop(window);\n                    } catch (err) {\n                        return;\n                    }\n\n                    if (!window || window.closed) {\n                        return;\n                    }\n\n                    try {\n                        receiveMessage({\n                            data:   message,\n                            origin: this.origin,\n                            source: this.source\n                        }, { on, send });\n                    } catch (err) {\n                        ZalgoPromise.reject(err);\n                    }\n                }\n\n            }).then(({ source, origin, data }) => {\n\n                if (source !== opener) {\n                    throw new Error(`Source does not match opener`);\n                }\n\n                registerRemoteSendMessage(source, origin, data.sendMessage);\n\n            }).catch(err => {\n\n                rejectRemoteSendMessage(opener, err);\n                throw err;\n            });\n        });\n    });\n}\n","/* @flow */\n\nimport { isSameDomain, isWindowClosed, type CrossDomainWindowType, closeWindow,\n    type DomainMatcher, getOpener, WINDOW_TYPE, isWindow, assertSameDomain, getFrameForWindow } from 'cross-domain-utils/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { uniqueID, memoizePromise, noop } from 'belter/src';\nimport { serializeType, type CustomSerializedType } from 'universal-serialize/src';\n\nimport { SERIALIZATION_TYPE } from '../conf';\nimport { windowStore, globalStore } from '../global';\nimport { getWindowInstanceID } from '../lib';\nimport { linkWindow } from '../bridge';\nimport type { SendType } from '../types';\n\nfunction cleanupProxyWindows() {\n    const idToProxyWindow = globalStore('idToProxyWindow');\n    for (const id of idToProxyWindow.keys()) {\n        // $FlowFixMe\n        if (idToProxyWindow.get(id).shouldClean()) {\n            idToProxyWindow.del(id);\n        }\n    }\n}\n\ntype SerializedWindowType = {|\n    id : string,\n    getType : () => ZalgoPromise<$Values<typeof WINDOW_TYPE>>,\n    close : () => ZalgoPromise<void>,\n    focus : () => ZalgoPromise<void>,\n    isClosed : () => ZalgoPromise<boolean>,\n    setLocation : (string) => ZalgoPromise<void>,\n    getName : () => ZalgoPromise<?string>,\n    setName : (string) => ZalgoPromise<void>,\n    getInstanceID : () => ZalgoPromise<string>\n|};\n\nfunction getSerializedWindow(winPromise : ZalgoPromise<CrossDomainWindowType>, { send, id = uniqueID() } : {| send : SendType, id? : string |}) : SerializedWindowType {\n    \n    let windowNamePromise = winPromise.then(win => {\n        if (isSameDomain(win)) {\n            return assertSameDomain(win).name;\n        }\n    });\n    \n    const windowTypePromise = winPromise.then(window => {\n        if (!isWindowClosed(window)) {\n            return getOpener(window) ? WINDOW_TYPE.POPUP : WINDOW_TYPE.IFRAME;\n        } else {\n            throw new Error(`Window is closed, can not determine type`);\n        }\n    });\n\n    windowNamePromise.catch(noop);\n    windowTypePromise.catch(noop);\n\n    return {\n        id,\n        getType: () => {\n            return windowTypePromise;\n        },\n        getInstanceID: memoizePromise(() => winPromise.then(win => getWindowInstanceID(win, { send }))),\n        close:         () => winPromise.then(closeWindow),\n        getName:       () => winPromise.then(win => {\n            if (isWindowClosed(win)) {\n                return;\n            }\n\n            if (isSameDomain(win)) {\n                return assertSameDomain(win).name;\n            }\n\n            return windowNamePromise;\n        }),\n        focus:   () => winPromise.then(win => {\n            win.focus();\n        }),\n        isClosed: () => winPromise.then(win => {\n            return isWindowClosed(win);\n        }),\n        setLocation: (href) => winPromise.then(win => {\n            const domain = `${ window.location.protocol }//${ window.location.host }`;\n\n            if (href.indexOf('/') === 0) {\n                href = `${ domain }${ href }`;\n            } else if (!href.match(/^https?:\\/\\//) && href.indexOf(domain) !== 0) {\n                throw new Error(`Expected url to be http or https url, or absolute path, got ${ JSON.stringify(href) }`);\n            }\n\n            if (isSameDomain(win)) {\n                try {\n                    if (win.location && typeof win.location.replace === 'function') {\n                        // $FlowFixMe\n                        win.location.replace(href);\n                        return;\n                    }\n                } catch (err) {\n                    // pass\n                }\n            }\n\n            win.location = href;\n        }),\n        setName: (name) => winPromise.then(win => {\n            if (__POST_ROBOT__.__IE_POPUP_SUPPORT__) {\n                linkWindow({ win, name });\n            }\n\n            const sameDomain = isSameDomain(win);\n            const frame = getFrameForWindow(win);\n\n            if (!sameDomain) {\n                throw new Error(`Can not set name for cross-domain window: ${ name }`);\n            }\n\n            assertSameDomain(win).name = name;\n            if (frame) {\n                frame.setAttribute('name', name);\n            }\n\n            windowNamePromise = ZalgoPromise.resolve(name);\n        })\n    };\n}\n\nexport class ProxyWindow {\n\n    id : string\n    isProxyWindow : true = true\n    serializedWindow : SerializedWindowType\n    actualWindow : ?CrossDomainWindowType\n    actualWindowPromise : ZalgoPromise<CrossDomainWindowType>\n    send : SendType\n    name : string\n\n    constructor({ send, win, serializedWindow } : {| win? : CrossDomainWindowType, serializedWindow? : SerializedWindowType, send : SendType |}) {\n        this.actualWindowPromise = new ZalgoPromise();\n        this.serializedWindow = serializedWindow || getSerializedWindow(this.actualWindowPromise, { send });\n        \n        globalStore('idToProxyWindow').set(this.getID(), this);\n        if (win) {\n            this.setWindow(win, { send });\n        }\n    }\n\n    getID() : string {\n        return this.serializedWindow.id;\n    }\n\n    getType() : ZalgoPromise<$Values<typeof WINDOW_TYPE>> {\n        return this.serializedWindow.getType();\n    }\n\n    isPopup() : ZalgoPromise<boolean> {\n        return this.getType().then(type => {\n            return type === WINDOW_TYPE.POPUP;\n        });\n    }\n\n    setLocation(href : string) : ZalgoPromise<ProxyWindow> {\n        return this.serializedWindow.setLocation(href).then(() => this);\n    }\n\n    getName() : ZalgoPromise<?string> {\n        return this.serializedWindow.getName();\n    }\n\n    setName(name : string) : ZalgoPromise<ProxyWindow> {\n        return this.serializedWindow.setName(name).then(() => this);\n    }\n\n    close() : ZalgoPromise<ProxyWindow> {\n        return this.serializedWindow.close().then(() => this);\n    }\n\n    focus() : ZalgoPromise<ProxyWindow> {\n        const isPopupPromise = this.isPopup();\n        const getNamePromise = this.getName();\n\n        const reopenPromise = ZalgoPromise.hash({ isPopup: isPopupPromise, name: getNamePromise }).then(({ isPopup, name }) => {\n            if (isPopup && name) {\n                window.open('', name);\n            }\n        });\n        const focusPromise = this.serializedWindow.focus();\n\n        return ZalgoPromise.all([\n            reopenPromise,\n            focusPromise\n        ]).then(() => this);\n    }\n\n    isClosed() : ZalgoPromise<boolean> {\n        return this.serializedWindow.isClosed();\n    }\n\n    getWindow() : ?CrossDomainWindowType {\n        return this.actualWindow;\n    }\n\n    setWindow(win : CrossDomainWindowType, { send } : {| send : SendType |}) {\n        this.actualWindow = win;\n        this.actualWindowPromise.resolve(this.actualWindow);\n        this.serializedWindow = getSerializedWindow(this.actualWindowPromise, { send, id: this.getID() });\n        windowStore('winToProxyWindow').set(win, this);\n    }\n\n    awaitWindow() : ZalgoPromise<CrossDomainWindowType> {\n        return this.actualWindowPromise;\n    }\n\n    matchWindow(win : CrossDomainWindowType, { send } : {| send : SendType |}) : ZalgoPromise<boolean> {\n        return ZalgoPromise.try(() => {\n            if (this.actualWindow) {\n                return win === this.actualWindow;\n            }\n            \n            return ZalgoPromise.hash({\n                proxyInstanceID:       this.getInstanceID(),\n                knownWindowInstanceID: getWindowInstanceID(win, { send })\n            }).then(({ proxyInstanceID, knownWindowInstanceID }) => {\n                const match = proxyInstanceID === knownWindowInstanceID;\n\n                if (match) {\n                    this.setWindow(win, { send });\n                }\n\n                return match;\n            });\n        });\n    }\n\n    unwrap() : CrossDomainWindowType | ProxyWindow {\n        return this.actualWindow || this;\n    }\n\n    getInstanceID() : ZalgoPromise<string> {\n        return this.serializedWindow.getInstanceID();\n    }\n\n    shouldClean() : boolean {\n        return Boolean(this.actualWindow && isWindowClosed(this.actualWindow));\n    }\n\n    serialize() : SerializedWindowType {\n        return this.serializedWindow;\n    }\n\n    static unwrap(win : CrossDomainWindowType | ProxyWindow) : CrossDomainWindowType | ProxyWindow {\n        return ProxyWindow.isProxyWindow(win)\n            // $FlowFixMe\n            ? win.unwrap()\n            : win;\n    }\n\n    static serialize(win : CrossDomainWindowType | ProxyWindow, { send } : {| send : SendType |}) : SerializedWindowType {\n        cleanupProxyWindows();\n        return ProxyWindow.toProxyWindow(win, { send }).serialize();\n    }\n\n    static deserialize(serializedWindow : SerializedWindowType, { send } : {| send : SendType |}) : ProxyWindow {\n        cleanupProxyWindows();\n        return globalStore('idToProxyWindow').get(serializedWindow.id) || new ProxyWindow({ serializedWindow, send });\n    }\n\n    static isProxyWindow(obj : CrossDomainWindowType | ProxyWindow) : boolean {\n        // $FlowFixMe\n        return Boolean(obj && !isWindow(obj) && obj.isProxyWindow);\n    }\n\n    static toProxyWindow(win : CrossDomainWindowType | ProxyWindow, { send } : {| send : SendType |}) : ProxyWindow {\n        cleanupProxyWindows();\n\n        if (ProxyWindow.isProxyWindow(win)) {\n            // $FlowFixMe\n            return win;\n        }\n\n        // $FlowFixMe\n        const actualWindow : CrossDomainWindowType = win;\n        \n        return windowStore('winToProxyWindow').get(actualWindow) || new ProxyWindow({ win: actualWindow, send });\n    }\n}\n\nexport type SerializedWindow = CustomSerializedType<typeof SERIALIZATION_TYPE.CROSS_DOMAIN_WINDOW, SerializedWindowType>;\n\nexport function serializeWindow(destination : CrossDomainWindowType | ProxyWindow, domain : DomainMatcher, win : CrossDomainWindowType, { send } : {| send : SendType |}) : SerializedWindow {\n    return serializeType(SERIALIZATION_TYPE.CROSS_DOMAIN_WINDOW, ProxyWindow.serialize(win, { send }));\n}\n\nexport function deserializeWindow(source : CrossDomainWindowType | ProxyWindow, origin : string, win : SerializedWindowType, { send } : {| send : SendType |}) : ProxyWindow {\n    return ProxyWindow.deserialize(win, { send });\n}\n","/* @flow */\n\nimport { matchDomain, getDomain, type CrossDomainWindowType, type DomainMatcher } from 'cross-domain-utils/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { uniqueID, isRegex, arrayFrom } from 'belter/src';\nimport { serializeType, type CustomSerializedType } from 'universal-serialize/src';\n\nimport { MESSAGE_NAME, WILDCARD, SERIALIZATION_TYPE } from '../conf';\nimport { windowStore, globalStore } from '../global';\nimport type { OnType, SendType, CancelableType } from '../types';\n\nimport { ProxyWindow } from './window';\n\ntype StoredMethod = {|\n    name : string,\n    domain : DomainMatcher,\n    val : Function,\n    source : CrossDomainWindowType | ProxyWindow\n|};\n\nfunction addMethod(id : string, val : Function, name : string, source : CrossDomainWindowType | ProxyWindow, domain : DomainMatcher) {\n    const methodStore = windowStore('methodStore');\n    const proxyWindowMethods = globalStore('proxyWindowMethods');\n    \n    if (ProxyWindow.isProxyWindow(source)) {\n        proxyWindowMethods.set(id, { val, name, domain, source });\n    } else {\n        proxyWindowMethods.del(id);\n        // $FlowFixMe\n        const methods = methodStore.getOrSet(source, () => ({}));\n        methods[id] = { domain, name, val, source };\n    }\n}\n\nfunction lookupMethod(source : CrossDomainWindowType, id : string) : ?StoredMethod {\n    const methodStore = windowStore('methodStore');\n    const proxyWindowMethods = globalStore('proxyWindowMethods');\n    const methods = methodStore.getOrSet(source, () => ({}));\n    return methods[id] || proxyWindowMethods.get(id);\n}\n\nfunction stringifyArguments(args : $ReadOnlyArray<mixed> = []) : string {\n    return arrayFrom(args).map(arg => {\n        if (typeof arg === 'string') {\n            return `'${ arg }'`;\n        }\n        if (arg === undefined) {\n            return 'undefined';\n        }\n        if (arg === null) {\n            return 'null';\n        }\n        if (typeof arg === 'boolean') {\n            return arg.toString();\n        }\n        if (Array.isArray(arg)) {\n            return '[ ... ]';\n        }\n        if (typeof arg === 'object') {\n            return '{ ... }';\n        }\n        if (typeof arg === 'function') {\n            return '() => { ... }';\n        }\n        return `<${ typeof arg }>`;\n    }).join(', ');\n}\n\nfunction listenForFunctionCalls({ on, send } : {| on : OnType, send : SendType |}) : CancelableType {\n    return globalStore('builtinListeners').getOrSet('functionCalls', () => {\n        return on(MESSAGE_NAME.METHOD, { domain: WILDCARD }, ({ source, origin, data } : {| source : CrossDomainWindowType, origin : string, data : Object |}) => {\n            const { id, name } = data;\n\n            const meth = lookupMethod(source, id);\n    \n            if (!meth) {\n                throw new Error(`Could not find method '${ name }' with id: ${ data.id } in ${ getDomain(window) }`);\n            }\n\n            const { source: methodSource, domain, val } = meth;\n            \n            return ZalgoPromise.try(() => {\n                if (!matchDomain(domain, origin)) {\n                    // $FlowFixMe\n                    throw new Error(`Method '${ data.name }' domain ${ JSON.stringify(isRegex(meth.domain) ? meth.domain.source : meth.domain) } does not match origin ${ origin } in ${ getDomain(window) }`);\n                }\n                \n                if (ProxyWindow.isProxyWindow(methodSource)) {\n                    // $FlowFixMe\n                    return methodSource.matchWindow(source, { send }).then(match => {\n                        if (!match) {\n                            throw new Error(`Method call '${ data.name }' failed - proxy window does not match source in ${ getDomain(window) }`);\n                        }\n                    });\n                }\n            }).then(() => {\n                return val.apply({ source, origin }, data.args);\n            }, err => {\n                return ZalgoPromise.try(() => {\n                    if (val.onError) {\n                        return val.onError(err);\n                    }\n                }).then(() => {\n                    // $FlowFixMe\n                    if (err.stack) {\n                        // $FlowFixMe\n                        err.stack = `Remote call to ${ name }(${ stringifyArguments(data.args) }) failed\\n\\n${ err.stack }`;\n                    }\n\n                    throw err;\n                });\n            }).then(result => {\n                return { result, id, name };\n            });\n        });\n    });\n}\n\nexport type SerializedFunction = CustomSerializedType<typeof SERIALIZATION_TYPE.CROSS_DOMAIN_FUNCTION, {|\n    id : string,\n    name : string\n|}>;\n\n// eslint-disable-next-line flowtype/require-exact-type\ntype SerializableFunction<T> = {\n    () : ZalgoPromise<T> | T,\n    __id__? : string,\n    __name__? : string\n};\n\nexport function serializeFunction<T>(destination : CrossDomainWindowType | ProxyWindow, domain : DomainMatcher, val : SerializableFunction<T>, key : string, { on, send } : {| on : OnType, send : SendType |}) : SerializedFunction {\n    listenForFunctionCalls({ on, send });\n    \n    const id = val.__id__ || uniqueID();\n    destination = ProxyWindow.unwrap(destination);\n    let name = val.__name__ || val.name || key;\n\n    if (typeof name === 'string' && typeof name.indexOf === 'function' && name.indexOf('anonymous::') === 0) {\n        name = name.replace('anonymous::', `${ key }::`);\n    }\n\n    if (ProxyWindow.isProxyWindow(destination)) {\n        addMethod(id, val, name, destination, domain);\n\n        // $FlowFixMe\n        destination.awaitWindow().then(win => {\n            addMethod(id, val, name, win, domain);\n        });\n    } else {\n        addMethod(id, val, name, destination, domain);\n    }\n\n    return serializeType(SERIALIZATION_TYPE.CROSS_DOMAIN_FUNCTION, { id, name });\n}\n\nexport function deserializeFunction<T>(source : CrossDomainWindowType | ProxyWindow, origin : string, { id, name } : {| id : string, name : string |}, { send } : {| send : SendType |}) : (...args : $ReadOnlyArray<mixed>) => ZalgoPromise<T> {\n    const getDeserializedFunction = (opts? : Object = {}) => {\n        function crossDomainFunctionWrapper<X : mixed>() : ZalgoPromise<X> {\n            let originalStack;\n    \n            if (__DEBUG__) {\n                originalStack = (new Error(`Original call to ${ name }():`)).stack;\n            }\n    \n            return ProxyWindow.toProxyWindow(source, { send }).awaitWindow().then(win => {\n                const meth = lookupMethod(win, id);\n    \n                if (meth && meth.val !== crossDomainFunctionWrapper) {\n                    return meth.val.apply({ source: window, origin: getDomain() }, arguments);\n                } else {\n                    const args = Array.prototype.slice.call(arguments);\n\n                    if (opts.fireAndForget) {\n                        return send(win, MESSAGE_NAME.METHOD, { id, name, args }, { domain: origin, fireAndForget: true });\n                    } else {\n                        return send(win, MESSAGE_NAME.METHOD, { id, name, args }, { domain: origin, fireAndForget: false })\n                            .then(res => res.data.result);\n                    }\n                }\n    \n            }).catch(err => {\n                // $FlowFixMe\n                if (__DEBUG__ && originalStack && err.stack) {\n                    // $FlowFixMe\n                    err.stack = `Remote call to ${ name }(${ stringifyArguments(arguments) }) failed\\n\\n${ err.stack }\\n\\n${ originalStack }`;\n                }\n                throw err;\n            });\n        }\n\n        crossDomainFunctionWrapper.__name__ = name;\n        crossDomainFunctionWrapper.__origin__ = origin;\n        crossDomainFunctionWrapper.__source__ = source;\n        crossDomainFunctionWrapper.__id__ = id;\n\n        crossDomainFunctionWrapper.origin = origin;\n\n        return crossDomainFunctionWrapper;\n    };\n\n    const crossDomainFunctionWrapper = getDeserializedFunction();\n    crossDomainFunctionWrapper.fireAndForget = getDeserializedFunction({ fireAndForget: true });\n\n    return crossDomainFunctionWrapper;\n}\n","/* @flow */\n\nimport { type CrossDomainWindowType, isWindow, type DomainMatcher } from 'cross-domain-utils/src';\nimport { TYPE, serialize, deserialize, type Thenable } from 'universal-serialize/src';\n\nimport { SERIALIZATION_TYPE } from '../conf';\nimport type { OnType, SendType } from '../types';\n\nimport { serializeFunction, deserializeFunction, type SerializedFunction } from './function';\nimport { serializePromise, deserializePromise, type SerializedPromise } from './promise';\nimport { serializeWindow, deserializeWindow, type SerializedWindow, ProxyWindow } from './window';\n\nexport function serializeMessage<T : mixed>(destination : CrossDomainWindowType | ProxyWindow, domain : DomainMatcher, obj : T, { on, send } : {| on : OnType, send : SendType |}) : string {\n    return serialize(obj, {\n        [ TYPE.PROMISE ]:  (val : Thenable, key : string) : SerializedPromise => serializePromise(destination, domain, val, key, { on, send }),\n        [ TYPE.FUNCTION ]: (val : Function, key : string) : SerializedFunction => serializeFunction(destination, domain, val, key, { on, send }),\n        [ TYPE.OBJECT ]:   (val : CrossDomainWindowType) : Object | SerializedWindow => {\n            return (isWindow(val) || ProxyWindow.isProxyWindow(val)) ? serializeWindow(destination, domain, val, { send }) : val;\n        }\n    });\n}\n\nexport function deserializeMessage<T : mixed>(source : CrossDomainWindowType | ProxyWindow, origin : string, message : string, { send } : {| on : OnType, send : SendType |}) : T {\n    return deserialize(message, {\n        [ SERIALIZATION_TYPE.CROSS_DOMAIN_ZALGO_PROMISE ]: (serializedPromise)  => deserializePromise(source, origin, serializedPromise),\n        [ SERIALIZATION_TYPE.CROSS_DOMAIN_FUNCTION ]:      (serializedFunction) => deserializeFunction(source, origin, serializedFunction, { send }),\n        [ SERIALIZATION_TYPE.CROSS_DOMAIN_WINDOW ]:        (serializedWindow)   => deserializeWindow(source, origin, serializedWindow, { send })\n    });\n}\n","/* @flow */\n\nimport { type CrossDomainWindowType, type DomainMatcher } from 'cross-domain-utils/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { serializeType, type CustomSerializedType, type Thenable } from 'universal-serialize/src';\n\nimport { SERIALIZATION_TYPE } from '../conf';\nimport type { OnType, SendType } from '../types';\n\nimport { serializeFunction, type SerializedFunction } from './function';\nimport { ProxyWindow } from './window';\n\nexport type SerializedPromise = CustomSerializedType<typeof SERIALIZATION_TYPE.CROSS_DOMAIN_ZALGO_PROMISE, {|\n    then : SerializedFunction\n|}>;\n\nexport function serializePromise(destination : CrossDomainWindowType | ProxyWindow, domain : DomainMatcher, val : Thenable, key : string, { on, send } : {| on : OnType, send : SendType |}) : SerializedPromise {\n    return serializeType(SERIALIZATION_TYPE.CROSS_DOMAIN_ZALGO_PROMISE, {\n        then: serializeFunction(destination, domain, (resolve, reject) => val.then(resolve, reject), key, { on, send })\n    });\n}\n\nexport function deserializePromise<T>(source : CrossDomainWindowType | ProxyWindow, origin : string, { then } : {| then : Function |}) : ZalgoPromise<T> {\n    return new ZalgoPromise(then);\n}\n","/* @flow */\n\nimport { isSameDomain, isSameTopWindow, isActuallySameDomain, getActualDomain,\n    getDomain, type CrossDomainWindowType, PROTOCOL } from 'cross-domain-utils/src';\n\nimport { SEND_STRATEGY, WILDCARD } from '../../conf';\nimport { needsGlobalMessagingForBrowser } from '../../lib';\nimport { getGlobal } from '../../global';\nimport { sendBridgeMessage, needsBridgeForBrowser, isBridge } from '../../bridge';\n\ntype SendStrategies = {|\n    [$Values<typeof SEND_STRATEGY>] : (CrossDomainWindowType, string, string) => void\n|};\n\nexport const SEND_MESSAGE_STRATEGIES : SendStrategies = {};\n\nSEND_MESSAGE_STRATEGIES[SEND_STRATEGY.POST_MESSAGE] = (win : CrossDomainWindowType, serializedMessage : string, domain : string) => {\n    if (domain.indexOf(PROTOCOL.FILE) === 0) {\n        domain = WILDCARD;\n    }\n\n    if (__TEST__) {\n        if (needsGlobalMessagingForBrowser() && isSameTopWindow(window, win) === false) {\n            return;\n        }\n\n        if (domain.indexOf(PROTOCOL.MOCK) === 0) {\n            if (!isActuallySameDomain(win)) {\n                throw new Error(`Attempting to send message to mock domain ${ domain }, but window is actually cross-domain`);\n            }\n\n            // $FlowFixMe\n            const windowDomain = getDomain(win);\n                \n            if (windowDomain !== domain) {\n                throw new Error(`Mock domain target ${ domain } does not match window domain ${ windowDomain }`);\n            }\n\n            // $FlowFixMe\n            domain = getActualDomain(win);\n\n        }\n    }\n\n    win.postMessage(serializedMessage, domain);\n};\n\nif (__POST_ROBOT__.__IE_POPUP_SUPPORT__) {\n\n    SEND_MESSAGE_STRATEGIES[SEND_STRATEGY.BRIDGE] = (win : CrossDomainWindowType, serializedMessage : string, domain : string) => {\n\n        if (!needsBridgeForBrowser() && !isBridge()) {\n            throw new Error(`Bridge not needed for browser`);\n        }\n\n        if (isSameDomain(win)) {\n            throw new Error(`Post message through bridge disabled between same domain windows`);\n        }\n\n        if (isSameTopWindow(window, win) !== false) {\n            throw new Error(`Can only use bridge to communicate between two different windows, not between frames`);\n        }\n\n        sendBridgeMessage(win, domain, serializedMessage);\n    };\n}\n\nif (__POST_ROBOT__.__IE_POPUP_SUPPORT__ || __POST_ROBOT__.__GLOBAL_MESSAGE_SUPPORT__) {\n    \n    SEND_MESSAGE_STRATEGIES[SEND_STRATEGY.GLOBAL] = (win : CrossDomainWindowType, serializedMessage : string) => {\n\n        if (!needsGlobalMessagingForBrowser()) {\n            throw new Error(`Global messaging not needed for browser`);\n        }\n\n        if (!isSameDomain(win)) {\n            throw new Error(`Post message through global disabled between different domain windows`);\n        }\n\n        if (isSameTopWindow(window, win) !== false) {\n            throw new Error(`Can only use global to communicate between two different windows, not between frames`);\n        }\n\n        // $FlowFixMe\n        const foreignGlobal = getGlobal(win);\n\n        if (!foreignGlobal) {\n            throw new Error(`Can not find postRobot global on foreign window`);\n        }\n\n        foreignGlobal.receiveMessage({\n            source: window,\n            origin: getDomain(),\n            data:   serializedMessage\n        });\n    };\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { isWindowClosed, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { stringifyError, noop } from 'belter/src';\n\nimport { serializeMessage } from '../../serialize';\nimport { windowStore, getGlobalKey } from '../../global';\nimport type { Message, PackedMessages } from '../types';\nimport type { OnType, SendType } from '../../types';\n\nimport { SEND_MESSAGE_STRATEGIES } from './strategies';\n\nfunction packMessages(messages : $ReadOnlyArray<Message>) : PackedMessages {\n    return {\n        [ getGlobalKey() ]: messages\n    };\n}\n\nexport function sendMessage(win : CrossDomainWindowType, domain : string, message : Message, { on, send } : {| on : OnType, send : SendType |}) : ZalgoPromise<void> {\n    return ZalgoPromise.try(() => {\n        const messageBuffer = windowStore();\n\n        const domainBuffer = messageBuffer.getOrSet(win, () => ({}));\n\n        domainBuffer.buffer = domainBuffer.buffer || [];\n        domainBuffer.buffer.push(message);\n\n        domainBuffer.flush = domainBuffer.flush || ZalgoPromise.flush().then(() => {\n            if (isWindowClosed(win)) {\n                throw new Error('Window is closed');\n            }\n\n            const serializedMessage = serializeMessage(win, domain, packMessages(domainBuffer.buffer || []), { on, send });\n            delete domainBuffer.buffer;\n\n            const strategies = Object.keys(SEND_MESSAGE_STRATEGIES);\n            const errors = [];\n\n            for (const strategyName of strategies) {\n                try {\n                    SEND_MESSAGE_STRATEGIES[strategyName](win, serializedMessage, domain);\n                } catch (err) {\n                    errors.push(err);\n                }\n            }\n\n            if (errors.length === strategies.length) {\n                throw new Error(`All post-robot messaging strategies failed:\\n\\n${ errors.map((err, i) => `${ i }. ${ stringifyError(err) }`).join('\\n\\n') }`);\n            }\n        });\n\n        return domainBuffer.flush.then(() => {\n            delete domainBuffer.flush;\n        });\n    }).then(noop);\n}\n","/* @flow */\n\nimport { type ZalgoPromise } from 'zalgo-promise/src';\nimport { matchDomain, type CrossDomainWindowType, type DomainMatcher } from 'cross-domain-utils/src';\nimport { isRegex, getOrSet } from 'belter/src';\n\nimport { getWildcard, type WildCard, globalStore, windowStore } from '../global';\nimport { WILDCARD } from '../conf';\n\nexport function resetListeners() {\n    const responseListeners = globalStore('responseListeners');\n    const erroredResponseListeners = globalStore('erroredResponseListeners');\n    responseListeners.reset();\n    erroredResponseListeners.reset();\n}\n\nconst __DOMAIN_REGEX__ = '__domain_regex__';\n\nexport type RequestListenerType = {|\n    handler : ({| source : CrossDomainWindowType, origin : string, data : mixed |}) => (mixed | ZalgoPromise<mixed>),\n    handleError : (err : mixed) => void,\n    window : ?CrossDomainWindowType,\n    name : string,\n    domain : DomainMatcher\n|};\n\nexport type ResponseListenerType = {|\n    name : string,\n    win : CrossDomainWindowType,\n    domain : DomainMatcher,\n    promise : ZalgoPromise<*>,\n    ack? : ?boolean,\n    cancelled? : ?boolean\n|};\n\nexport function addResponseListener(hash : string, listener : ResponseListenerType) {\n    const responseListeners = globalStore('responseListeners');\n    responseListeners.set(hash, listener);\n}\n\nexport function getResponseListener(hash : string) : ?ResponseListenerType {\n    const responseListeners = globalStore('responseListeners');\n    return responseListeners.get(hash);\n}\n\nexport function deleteResponseListener(hash : string) {\n    const responseListeners = globalStore('responseListeners');\n    responseListeners.del(hash);\n}\n\nexport function cancelResponseListeners() {\n    const responseListeners = globalStore('responseListeners');\n    for (const hash of responseListeners.keys()) {\n        const listener = responseListeners.get(hash);\n        if (listener) {\n            listener.cancelled = true;\n        }\n        responseListeners.del(hash);\n    }\n}\n\nexport function markResponseListenerErrored(hash : string) {\n    const erroredResponseListeners = globalStore('erroredResponseListeners');\n    erroredResponseListeners.set(hash, true);\n}\n\nexport function isResponseListenerErrored(hash : string) : boolean {\n    const erroredResponseListeners = globalStore('erroredResponseListeners');\n    return erroredResponseListeners.has(hash);\n}\n\nexport function getRequestListener({ name, win, domain } : {| name : string, win : ?(CrossDomainWindowType | WildCard), domain : ?(string | RegExp) |}) : ?RequestListenerType {\n    const requestListeners = windowStore('requestListeners');\n\n    if (win === WILDCARD) {\n        win = null;\n    }\n\n    if (domain === WILDCARD) {\n        domain = null;\n    }\n\n    if (!name) {\n        throw new Error(`Name required to get request listener`);\n    }\n\n    for (const winQualifier of [ win, getWildcard() ]) {\n        if (!winQualifier) {\n            continue;\n        }\n\n        const nameListeners = requestListeners.get(winQualifier);\n\n        if (!nameListeners) {\n            continue;\n        }\n\n        const domainListeners = nameListeners[name];\n\n        if (!domainListeners) {\n            continue;\n        }\n\n        if (domain && typeof domain === 'string') {\n            if (domainListeners[domain]) {\n                return domainListeners[domain];\n            }\n\n            if (domainListeners[__DOMAIN_REGEX__]) {\n                for (const { regex, listener } of domainListeners[__DOMAIN_REGEX__]) {\n                    if (matchDomain(regex, domain)) {\n                        return listener;\n                    }\n                }\n            }\n        }\n\n        if (domainListeners[WILDCARD]) {\n            return domainListeners[WILDCARD];\n        }\n    }\n}\n\nexport function addRequestListener({ name, win, domain } : {| name : string, win : ?(CrossDomainWindowType | WildCard), domain : ?DomainMatcher |}, listener : RequestListenerType) : {| cancel : () => void |} {\n    const requestListeners = windowStore('requestListeners');\n\n    if (!name || typeof name !== 'string') {\n        throw new Error(`Name required to add request listener`);\n    }\n\n    if (Array.isArray(win)) {\n        const listenersCollection = [];\n\n        for (const item of win) {\n            listenersCollection.push(addRequestListener({ name, domain, win: item }, listener));\n        }\n\n        return {\n            cancel() {\n                for (const cancelListener of listenersCollection) {\n                    cancelListener.cancel();\n                }\n            }\n        };\n    }\n\n    if (Array.isArray(domain)) {\n        const listenersCollection = [];\n\n        for (const item of domain) {\n            listenersCollection.push(addRequestListener({ name, win, domain: item }, listener));\n        }\n\n        return {\n            cancel() {\n                for (const cancelListener of listenersCollection) {\n                    cancelListener.cancel();\n                }\n            }\n        };\n    }\n\n    const existingListener = getRequestListener({ name, win, domain });\n\n    if (!win || win === WILDCARD) {\n        win = getWildcard();\n    }\n\n    domain = domain || WILDCARD;\n\n    if (existingListener) {\n        if (win && domain) {\n            throw new Error(`Request listener already exists for ${ name } on domain ${ domain.toString() } for ${ win === getWildcard() ? 'wildcard' : 'specified' } window`);\n        } else if (win) {\n            throw new Error(`Request listener already exists for ${ name } for ${ win === getWildcard() ? 'wildcard' : 'specified' } window`);\n        } else if (domain) {\n            throw new Error(`Request listener already exists for ${ name } on domain ${ domain.toString() }`);\n        } else {\n            throw new Error(`Request listener already exists for ${ name }`);\n        }\n    }\n\n    const nameListeners = requestListeners.getOrSet(win, () => ({}));\n    const domainListeners = getOrSet(nameListeners, name, () => ({}));\n\n    const strDomain = domain.toString();\n\n    let regexListeners;\n    let regexListener;\n\n    if (isRegex(domain)) {\n        regexListeners = getOrSet(domainListeners, __DOMAIN_REGEX__, () => []);\n        regexListener = { regex: domain, listener };\n        regexListeners.push(regexListener);\n    } else {\n        domainListeners[strDomain] = listener;\n    }\n\n    return {\n        cancel() {\n            delete domainListeners[strDomain];\n\n            if (regexListener) {\n                regexListeners.splice(regexListeners.indexOf(regexListener, 1));\n\n                if (!regexListeners.length) {\n                    delete domainListeners[__DOMAIN_REGEX__];\n                }\n            }\n\n            if (!Object.keys(domainListeners).length) {\n                delete nameListeners[name];\n            }\n\n            if (win && !Object.keys(nameListeners).length) {\n                requestListeners.del(win);\n            }\n        }\n    };\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { getDomain, isWindowClosed, matchDomain, stringifyDomainPattern, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { noop, stringifyError, uniqueID } from 'belter/src';\n\nimport { MESSAGE_TYPE, MESSAGE_ACK, MESSAGE_NAME } from '../../conf';\nimport { sendMessage } from '../send';\nimport { getRequestListener, getResponseListener, deleteResponseListener, isResponseListenerErrored } from '../listeners';\nimport type { RequestMessage, AckResponseMessage, ResponseMessage } from '../types';\nimport type { OnType, SendType } from '../../types';\n\nexport function handleRequest(source : CrossDomainWindowType, origin : string, message : RequestMessage, { on, send } : {| on : OnType, send : SendType |}) : ZalgoPromise<void> {\n\n    const options = getRequestListener({ name: message.name, win: source, domain: origin });\n\n    const logName = (message.name === MESSAGE_NAME.METHOD && message.data && typeof message.data.name === 'string') ? `${ message.data.name }()` : message.name;\n\n    if (__DEBUG__) {\n        // eslint-disable-next-line no-console\n        console.info('receive::req', logName, origin, '\\n\\n', message.data);\n    }\n\n    function sendAck() : ZalgoPromise<void> {\n        return ZalgoPromise.flush().then(() => {\n            if (message.fireAndForget || isWindowClosed(source)) {\n                return;\n            }\n\n            try {\n                return sendMessage(source, origin, {\n                    id:     uniqueID(),\n                    origin: getDomain(window),\n                    type:   MESSAGE_TYPE.ACK,\n                    hash:   message.hash,\n                    name:   message.name\n                }, { on, send });\n            } catch (err) {\n                throw new Error(`Send ack message failed for ${ logName } in ${ getDomain() }\\n\\n${ stringifyError(err) }`);\n            }\n        });\n    }\n\n\n    function sendResponse(ack : $Values<typeof MESSAGE_ACK>, data : ?Object, error : ?mixed) : ZalgoPromise<void> {\n        return ZalgoPromise.flush().then(() => {\n            if (message.fireAndForget || isWindowClosed(source)) {\n                return;\n            }\n\n            if (__DEBUG__) {\n                if (ack === MESSAGE_ACK.SUCCESS) {\n                    console.info('respond::res', logName, origin, '\\n\\n', data);  // eslint-disable-line no-console\n                } else if (ack === MESSAGE_ACK.ERROR) {\n                    console.error('respond::err', logName, origin, '\\n\\n', error); // eslint-disable-line no-console\n                }\n            }\n\n            try {\n                return sendMessage(source, origin, {\n                    id:     uniqueID(),\n                    origin: getDomain(window),\n                    type:   MESSAGE_TYPE.RESPONSE,\n                    hash:   message.hash,\n                    name:   message.name,\n                    ack,\n                    data,\n                    error\n                }, { on, send });\n            } catch (err) {\n                throw new Error(`Send response message failed for ${ logName } in ${ getDomain() }\\n\\n${ stringifyError(err) }`);\n            }\n        });\n    }\n\n    \n    return ZalgoPromise.all([\n        sendAck(),\n\n        ZalgoPromise.try(() => {\n\n            if (!options) {\n                throw new Error(`No handler found for post message: ${ message.name } from ${ origin } in ${ window.location.protocol }//${ window.location.host }${ window.location.pathname }`);\n            }\n\n            if (!matchDomain(options.domain, origin)) {\n                throw new Error(`Request origin ${ origin } does not match domain ${ options.domain.toString() }`);\n            }\n\n            const data = message.data;\n\n            return options.handler({ source, origin, data });\n\n        }).then(data => {\n            return sendResponse(MESSAGE_ACK.SUCCESS, data);\n\n        }, error => {\n            return sendResponse(MESSAGE_ACK.ERROR, null, error);\n        })\n\n    ]).then(noop).catch(err => {\n        if (options && options.handleError) {\n            return options.handleError(err);\n        } else {\n            throw err;\n        }\n    });\n}\n\nexport function handleAck(source : CrossDomainWindowType, origin : string, message : AckResponseMessage) {\n\n    if (isResponseListenerErrored(message.hash)) {\n        return;\n    }\n\n    const options = getResponseListener(message.hash);\n\n    if (!options) {\n        throw new Error(`No handler found for post message ack for message: ${ message.name } from ${ origin } in ${ window.location.protocol }//${ window.location.host }${ window.location.pathname }`);\n    }\n\n    try {\n        if (!matchDomain(options.domain, origin)) {\n            throw new Error(`Ack origin ${ origin } does not match domain ${ options.domain.toString() }`);\n        }\n    \n        if (source !== options.win) {\n            throw new Error(`Ack source does not match registered window`);\n        }\n    } catch (err) {\n        options.promise.reject(err);\n    }\n\n    options.ack = true;\n}\n\nexport function handleResponse(source : CrossDomainWindowType, origin : string, message : ResponseMessage) : void | ZalgoPromise<void> {\n\n    if (isResponseListenerErrored(message.hash)) {\n        return;\n    }\n\n    const options = getResponseListener(message.hash);\n\n    if (!options) {\n        throw new Error(`No handler found for post message response for message: ${ message.name } from ${ origin } in ${ window.location.protocol }//${ window.location.host }${ window.location.pathname }`);\n    }\n\n    if (!matchDomain(options.domain, origin)) {\n        throw new Error(`Response origin ${ origin } does not match domain ${ stringifyDomainPattern(options.domain) }`);\n    }\n\n    if (source !== options.win) {\n        throw new Error(`Response source does not match registered window`);\n    }\n\n    deleteResponseListener(message.hash);\n\n    const logName = (message.name === MESSAGE_NAME.METHOD && message.data && typeof message.data.name === 'string') ? `${ message.data.name }()` : message.name;\n\n    if (message.ack === MESSAGE_ACK.ERROR) {\n        if (__DEBUG__) {\n            console.error('receive::err', logName, origin, '\\n\\n', message.error); // eslint-disable-line no-console\n        }\n\n        options.promise.reject(message.error);\n\n    } else if (message.ack === MESSAGE_ACK.SUCCESS) {\n        if (__DEBUG__) {\n            console.info('receive::res', logName, origin, '\\n\\n', message.data); // eslint-disable-line no-console\n        }\n\n        options.promise.resolve({ source, origin, data: message.data });\n    }\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { isWindowClosed, type CrossDomainWindowType, getDomain, isSameTopWindow, PROTOCOL  } from 'cross-domain-utils/src';\nimport { addEventListener, noop } from 'belter/src';\n\nimport type { Message } from '../types';\nimport { MESSAGE_TYPE } from '../../conf';\nimport { markWindowKnown, needsGlobalMessagingForBrowser } from '../../lib';\nimport { deserializeMessage } from '../../serialize';\nimport { getGlobal, globalStore, getGlobalKey } from '../../global';\nimport type { OnType, SendType, MessageEvent, CancelableType } from '../../types';\n\nimport { handleRequest, handleResponse, handleAck } from './types';\n\nfunction deserializeMessages(message : string, source : CrossDomainWindowType, origin : string, { on, send } : {| on : OnType, send : SendType |}) : ?$ReadOnlyArray<Message> {\n    let parsedMessage;\n\n    try {\n        parsedMessage = deserializeMessage(source, origin, message, { on, send });\n    } catch (err) {\n        return;\n    }\n\n    if (!parsedMessage) {\n        return;\n    }\n\n    if (typeof parsedMessage !== 'object' || parsedMessage === null) {\n        return;\n    }\n\n    const parseMessages = parsedMessage[getGlobalKey()];\n\n    if (!Array.isArray(parseMessages)) {\n        return;\n    }\n\n    return parseMessages;\n}\n\nexport function receiveMessage(event : MessageEvent, { on, send } : {| on : OnType, send : SendType |}) {\n    const receivedMessages = globalStore('receivedMessages');\n\n    try {\n        if (!window || window.closed || !event.source) {\n            return;\n        }\n    } catch (err) {\n        return;\n    }\n\n    let { source, origin, data } = event;\n\n    if (__TEST__) {\n        if (isWindowClosed(source)) {\n            return;\n        }\n\n        // $FlowFixMe\n        origin = getDomain(source);\n    }\n\n    const messages = deserializeMessages(data, source, origin, { on, send });\n\n    if (!messages) {\n        return;\n    }\n\n    markWindowKnown(source);\n\n    for (const message of messages) {\n        if (receivedMessages.has(message.id)) {\n            return;\n        }\n\n        receivedMessages.set(message.id, true);\n\n        if (isWindowClosed(source) && !message.fireAndForget) {\n            return;\n        }\n\n        if (message.origin.indexOf(PROTOCOL.FILE) === 0) {\n            origin = `${ PROTOCOL.FILE }//`;\n        }\n\n        try {\n            if (message.type === MESSAGE_TYPE.REQUEST) {\n                handleRequest(source, origin, message, { on, send });\n            } else if (message.type === MESSAGE_TYPE.RESPONSE) {\n                handleResponse(source, origin, message);\n            } else if (message.type === MESSAGE_TYPE.ACK) {\n                handleAck(source, origin, message);\n            }\n        } catch (err) {\n            setTimeout(() => {\n                throw err;\n            }, 0);\n        }\n    }\n}\n\nexport function setupGlobalReceiveMessage({ on, send } : {| on : OnType, send : SendType |}) {\n    const global = getGlobal();\n    global.receiveMessage = global.receiveMessage || (message => receiveMessage(message, { on, send }));\n}\n\ntype ListenerEvent = {|\n    source : CrossDomainWindowType,\n    origin : string,\n    data : string,\n    sourceElement : CrossDomainWindowType,\n    originalEvent? : {| origin : string |}\n|};\n\nexport function messageListener(event : ListenerEvent, { on, send } : {| on : OnType, send : SendType |}) {\n    ZalgoPromise.try(() => {\n        try {\n            noop(event.source);\n        } catch (err) {\n            return;\n        }\n\n        const source = event.source || event.sourceElement;\n        let origin = event.origin || (event.originalEvent && event.originalEvent.origin);\n        const data = event.data;\n\n        if (origin === 'null') {\n            origin = `${ PROTOCOL.FILE }//`;\n        }\n\n        if (!source) {\n            return;\n        }\n\n        if (!origin) {\n            throw new Error(`Post message did not have origin domain`);\n        }\n\n        if (__TEST__) {\n            if (needsGlobalMessagingForBrowser() && isSameTopWindow(source, window) === false) {\n                return;\n            }\n        }\n\n        receiveMessage({ source, origin, data }, { on, send });\n    });\n}\n\nexport function listenForMessages({ on, send } : {| on : OnType, send : SendType |}) : CancelableType {\n    return globalStore().getOrSet('postMessageListener', () => {\n        return addEventListener(window, 'message', event => {\n            // $FlowFixMe\n            messageListener(event, { on, send });\n        });\n    });\n}\n\nexport function stopListenForMessages() {\n    const listener = globalStore().get('postMessageListener');\n    if (listener) {\n        listener.cancel();\n    }\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\n\nimport { addRequestListener, type RequestListenerType } from '../drivers';\nimport { WILDCARD } from '../conf';\nimport type { ServerOptionsType, HandlerType, CancelableType } from '../types';\n\nconst getDefaultServerOptions = () : ServerOptionsType => {\n    // $FlowFixMe\n    return {};\n};\n\nexport function on(name : string, options : ServerOptionsType | HandlerType, handler : ?HandlerType) : CancelableType {\n\n    if (!name) {\n        throw new Error('Expected name');\n    }\n\n    options = options || getDefaultServerOptions();\n    if (typeof options === 'function') {\n        handler = options;\n        options = getDefaultServerOptions();\n    }\n\n    if (!handler) {\n        throw new Error('Expected handler');\n    }\n\n    options = options || {};\n    options.name = name;\n    options.handler = handler || options.handler;\n\n    const win = options.window;\n    const domain = options.domain;\n\n    const listenerOptions : RequestListenerType = {\n        handler:     options.handler,\n        handleError: options.errorHandler || (err => {\n            throw err;\n        }),\n        window: win,\n        domain: domain || WILDCARD,\n        name\n    };\n\n    const requestListener = addRequestListener({ name, win, domain }, listenerOptions);\n\n    return {\n        cancel() {\n            requestListener.cancel();\n        }\n    };\n}\n\ntype CancelableZalgoPromise<T> = ZalgoPromise<T> & {|\n    cancel : () => void\n|};\n\nexport function once(name : string, options? : ServerOptionsType | HandlerType, handler? : HandlerType) : CancelableZalgoPromise<{| source : mixed, origin : string, data : Object |}> {\n    \n    options = options || getDefaultServerOptions();\n    if (typeof options === 'function') {\n        handler = options;\n        options = getDefaultServerOptions();\n    }\n\n    const promise = new ZalgoPromise();\n    let listener; // eslint-disable-line prefer-const\n\n    options.errorHandler = (err) => {\n        listener.cancel();\n        promise.reject(err);\n    };\n\n    listener = on(name, options, event => {\n        listener.cancel();\n        promise.resolve(event);\n        if (handler) {\n            return handler(event);\n        }\n    });\n\n    // $FlowFixMe\n    promise.cancel = listener.cancel;\n\n    // $FlowFixMe\n    return promise;\n}\n","/* @flow */\n\nimport { getUserAgent } from 'cross-domain-utils/src';\n\nexport function needsGlobalMessagingForBrowser() : boolean {\n\n    if (getUserAgent(window).match(/MSIE|rv:11|trident|edge\\/12|edge\\/13/i)) {\n        return true;\n    }\n\n    return false;\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { isAncestor, isWindowClosed, getDomain, matchDomain, type CrossDomainWindowType, type DomainMatcher } from 'cross-domain-utils/src';\nimport { uniqueID, isRegex, noop, safeInterval, stringify, stringifyError } from 'belter/src';\n\n\nimport { CHILD_WINDOW_TIMEOUT, MESSAGE_TYPE, WILDCARD, MESSAGE_NAME, ACK_TIMEOUT, RES_TIMEOUT, ACK_TIMEOUT_KNOWN, RESPONSE_CYCLE_TIME } from '../conf';\nimport { sendMessage, addResponseListener, deleteResponseListener, markResponseListenerErrored, type ResponseListenerType } from '../drivers';\nimport { awaitWindowHello, sayHello, isWindowKnown } from '../lib';\nimport { windowStore } from '../global';\nimport type { SendType } from '../types';\n\nimport { on } from './on';\n\nfunction validateOptions(name : string, win : CrossDomainWindowType, domain : ?DomainMatcher) {\n    if (!name) {\n        throw new Error('Expected name');\n    }\n\n    if (domain) {\n        if (typeof domain !== 'string' && !Array.isArray(domain) && !isRegex(domain)) {\n            throw new TypeError(`Can not send ${ name }. Expected domain ${ JSON.stringify(domain) } to be a string, array, or regex`);\n        }\n    }\n\n    if (isWindowClosed(win)) {\n        throw new Error(`Can not send ${ name }. Target window is closed`);\n    }\n}\n\nfunction normalizeDomain(win : CrossDomainWindowType, targetDomain : DomainMatcher, actualDomain : ?string, { send } : {| send : SendType |}) : ZalgoPromise<string> {\n    return ZalgoPromise.try(() => {\n        if (typeof targetDomain === 'string') {\n            return targetDomain;\n        }\n\n        return ZalgoPromise.try(() => {\n            return actualDomain || sayHello(win, { send }).then(({ domain }) => domain);\n\n        }).then(normalizedDomain => {\n            if (!matchDomain(targetDomain, targetDomain)) {\n                throw new Error(`Domain ${ stringify(targetDomain) } does not match ${ stringify(targetDomain) }`);\n            }\n\n            return normalizedDomain;\n        });\n    });\n}\n\nexport const send : SendType = (win, name, data, options) => {\n    options = options || {};\n    const domainMatcher = options.domain || WILDCARD;\n    const responseTimeout = options.timeout || RES_TIMEOUT;\n    const childTimeout = options.timeout || CHILD_WINDOW_TIMEOUT;\n    const fireAndForget = options.fireAndForget || false;\n\n    // $FlowFixMe\n    return ZalgoPromise.try(() => {\n        validateOptions(name, win, domainMatcher);\n\n        if (isAncestor(window, win)) {\n            return awaitWindowHello(win, childTimeout);\n        }\n        \n    }).then(({ domain: actualDomain } = {}) => {\n\n        return normalizeDomain(win, domainMatcher, actualDomain, { send });\n    }).then(targetDomain => {\n        const domain = targetDomain;\n\n        const logName = (name === MESSAGE_NAME.METHOD && data && typeof data.name === 'string') ? `${ data.name }()` : name;\n\n        if (__DEBUG__) {\n            console.info('send::req', logName, domain, '\\n\\n', data); // eslint-disable-line no-console\n        }\n\n        const promise = new ZalgoPromise();\n        const hash = `${ name }_${ uniqueID() }`;\n\n        if (!fireAndForget) {\n            const responseListener : ResponseListenerType = { name, win, domain, promise };\n            addResponseListener(hash, responseListener);\n\n            const reqPromises = windowStore('requestPromises').getOrSet(win, () => []);\n            reqPromises.push(promise);\n\n            promise.catch(() => {\n                markResponseListenerErrored(hash);\n                deleteResponseListener(hash);\n            });\n\n            const totalAckTimeout = isWindowKnown(win) ? ACK_TIMEOUT_KNOWN : ACK_TIMEOUT;\n            const totalResTimeout = responseTimeout;\n\n            let ackTimeout = totalAckTimeout;\n            let resTimeout = totalResTimeout;\n        \n            const interval = safeInterval(() => {\n                if (isWindowClosed(win)) {\n                    return promise.reject(new Error(`Window closed for ${ name } before ${ responseListener.ack ? 'response' : 'ack' }`));\n                }\n\n                if (responseListener.cancelled) {\n                    return promise.reject(new Error(`Response listener was cancelled for ${ name }`));\n                }\n\n                ackTimeout = Math.max(ackTimeout - RESPONSE_CYCLE_TIME, 0);\n                if (resTimeout !== -1) {\n                    resTimeout = Math.max(resTimeout - RESPONSE_CYCLE_TIME, 0);\n                }\n\n                if (!responseListener.ack && ackTimeout === 0) {\n                    return promise.reject(new Error(`No ack for postMessage ${ logName } in ${ getDomain() } in ${ totalAckTimeout }ms`));\n\n                } else if (resTimeout === 0) {\n                    return promise.reject(new Error(`No response for postMessage ${ logName } in ${ getDomain() } in ${ totalResTimeout }ms`));\n                }\n            }, RESPONSE_CYCLE_TIME);\n\n            promise.finally(() => {\n                interval.cancel();\n                reqPromises.splice(reqPromises.indexOf(promise, 1));\n            }).catch(noop);\n        }\n\n        return sendMessage(win, domain, {\n            id:     uniqueID(),\n            origin: getDomain(window),\n            type:   MESSAGE_TYPE.REQUEST,\n            hash,\n            name,\n            data,\n            fireAndForget\n        }, { on, send }).then(() => {\n            return fireAndForget ? promise.resolve() : promise;\n        }, err => {\n            throw new Error(`Send request message failed for ${ logName } in ${ getDomain() }\\n\\n${ stringifyError(err) }`);\n        });\n    });\n};\n","/* @flow */\n\nimport { setup } from './setup';\nimport { setupBridge, openBridge, linkWindow, linkUrl, isBridge, needsBridge, needsBridgeForBrowser, hasBridge,\n    needsBridgeForWin, needsBridgeForDomain, destroyBridges } from './bridge';\n\nexport { ZalgoPromise as Promise } from 'zalgo-promise/src';\n\nexport * from './types';\nexport { ProxyWindow } from './serialize';\nexport { setup, destroy, serializeMessage, deserializeMessage, createProxyWindow, toProxyWindow } from './setup';\nexport { on, once, send } from './public';\nexport { markWindowKnown } from './lib';\nexport { cleanUpWindow } from './clean';\n\n// $FlowFixMe\nexport let bridge;\n\nif (__POST_ROBOT__.__IE_POPUP_SUPPORT__) {\n    bridge = { setupBridge, openBridge, linkWindow, linkUrl, isBridge, needsBridge,\n        needsBridgeForBrowser, hasBridge, needsBridgeForWin, needsBridgeForDomain, destroyBridges };\n}\n\nif (__POST_ROBOT__.__AUTO_SETUP__) {\n    setup();\n}\n","/* @flow */\n\nexport const BRIDGE_TIMEOUT = 5000;\nexport const CHILD_WINDOW_TIMEOUT = 5000;\n\nexport const ACK_TIMEOUT = 2000;\nexport const ACK_TIMEOUT_KNOWN = 10000;\nexport const RES_TIMEOUT : number = __TEST__ ? 2000 : -1;\nexport const RESPONSE_CYCLE_TIME = 500;\n","/* @flow */\n\nimport type { CrossDomainWindowType, DomainMatcher } from 'cross-domain-utils/src';\n\nimport { initHello } from './lib';\nimport { listenForMessages, stopListenForMessages, receiveMessage, setupGlobalReceiveMessage, cancelResponseListeners } from './drivers';\nimport { getGlobal, deleteGlobal } from './global';\nimport { on, send } from './public';\nimport { setupBridge } from './bridge';\nimport { serializeMessage as internalSerializeMessage, deserializeMessage as internalDeserializeMessage, ProxyWindow } from './serialize';\n\nexport function serializeMessage<T>(destination : CrossDomainWindowType | ProxyWindow, domain : DomainMatcher, obj : T) : string {\n    return internalSerializeMessage(destination, domain, obj, { on, send });\n}\n\nexport function deserializeMessage<T : mixed>(source : CrossDomainWindowType | ProxyWindow, origin : string, message : string) : T {\n    return internalDeserializeMessage(source, origin, message, { on, send });\n}\n\nexport function createProxyWindow(win? : CrossDomainWindowType) : ProxyWindow {\n    return new ProxyWindow({ send, win });\n}\n\nexport function toProxyWindow(win : CrossDomainWindowType | ProxyWindow) : ProxyWindow {\n    return ProxyWindow.toProxyWindow(win, { send });\n}\n\nexport function setup() {\n    if (!getGlobal().initialized) {\n        getGlobal().initialized = true;\n    \n        setupGlobalReceiveMessage({ on, send });\n        listenForMessages({ on, send });\n    \n        if (__POST_ROBOT__.__IE_POPUP_SUPPORT__) {\n            setupBridge({ on, send, receiveMessage });\n        }\n\n        initHello({ on, send });\n    }\n}\n\nexport function destroy() {\n    cancelResponseListeners();\n    stopListenForMessages();\n    deleteGlobal();\n}\n","/* @flow */\n\nimport { type CrossDomainWindowType, isWindowClosed } from 'cross-domain-utils/src';\nimport { noop } from 'belter/src';\n\nimport { windowStore } from './global';\n\nexport function cleanUpWindow(win : CrossDomainWindowType) {\n    const requestPromises = windowStore('requestPromises');\n    for (const promise of requestPromises.get(win, [])) {\n        promise.reject(new Error(`Window ${ isWindowClosed(win) ? 'closed' : 'cleaned up' } before response`)).catch(noop);\n    }\n}\n","/* @flow */\n\nimport { isSameDomain, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { getCurrentScriptUID } from 'belter/src';\n\nexport function getGlobalKey() : string {\n    if (__ZOID__.__SCRIPT_NAMESPACE__) {\n        return `${ __ZOID__.__GLOBAL_KEY__ }_${ getCurrentScriptUID() }`;\n    } else {\n        return __ZOID__.__GLOBAL_KEY__;\n    }\n}\n\nexport function getGlobal(win? : CrossDomainWindowType = window) : Object {\n    const globalKey = getGlobalKey();\n\n    if (!isSameDomain(win)) {\n        throw new Error(`Can not get global for window on different domain`);\n    }\n\n    if (!win[globalKey]) {\n        win[globalKey] = {};\n    }\n\n    return win[globalKey];\n}\n\nexport function destroyGlobal() {\n    const globalKey = getGlobalKey();\n    delete window[globalKey];\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\n\nexport type ProxyObject<T> = {|\n    get : () => ZalgoPromise<T>\n|};\n\nexport function getProxyObject<T>(obj : T) : ProxyObject<T> {\n    return {\n        get() : ZalgoPromise<T> {\n            return ZalgoPromise.try(() => {\n                if (this.source && this.source !== window) {\n                    throw new Error(`Can not call get on proxy object from a remote window`);\n                }\n    \n                return obj;\n            });\n        }\n    };\n}\n","/* @flow */\n\nimport { WINDOW_TYPE } from 'cross-domain-utils/src';\n\nexport const ZOID = `zoid`;\n\nexport const POST_MESSAGE = {\n    DELEGATE:       `${ ZOID }_delegate`,\n    ALLOW_DELEGATE: `${ ZOID }_allow_delegate`\n};\n\nexport const PROP_TYPE = {\n    STRING:   `string`,\n    OBJECT:   `object`,\n    FUNCTION: `function`,\n    BOOLEAN:  `boolean`,\n    NUMBER:   `number`,\n    ARRAY:    `array`\n};\n\nexport const INITIAL_PROPS = {\n    RAW: 'raw',\n    UID: 'uid'\n};\n\nexport const WINDOW_REFERENCES = {\n    OPENER: ('opener' : 'opener'),\n    PARENT: ('parent' : 'parent'),\n    GLOBAL: ('global' : 'global')\n};\n\nexport const PROP_SERIALIZATION = {\n    JSON:   ('json' : 'json'),\n    DOTIFY: ('dotify' : 'dotify'),\n    BASE64: ('base64' : 'base64')\n};\n\nexport const CONTEXT = WINDOW_TYPE;\n\nexport const WILDCARD = '*';\n\nexport const DEFAULT_DIMENSIONS = {\n    WIDTH:  '300px',\n    HEIGHT: '150px'\n};\n\nexport const EVENT = {\n    RENDER:   'zoid-render',\n    RENDERED: 'zoid-rendered',\n    DISPLAY:  'zoid-display',\n    ERROR:    'zoid-error',\n    CLOSE:    'zoid-close',\n    DESTROY:  'zoid-destroy',\n    PROPS:    'zoid-props',\n    RESIZE:   'zoid-resize',\n    FOCUS:    'zoid-focus'\n};\n","/* @flow */\n\nimport { getDomain, isSameDomain, type CrossDomainWindowType } from 'cross-domain-utils/src';\n\nimport type { PropsDefinitionType, PropsType } from '../component/props';\n\nimport type { ChildHelpers } from './index';\n\n// $FlowFixMe\nexport function normalizeChildProp<P, T, X>(propsDef : PropsDefinitionType<P, X>, props : PropsType<P>, key : string, value : ?T, helpers : ChildHelpers<P, X>) : ?T  {\n    if (!propsDef.hasOwnProperty(key)) {\n        return value;\n    }\n\n    const prop = propsDef[key];\n\n    if (typeof prop.childDecorate === 'function') {\n        const { uid, close, focus, onError, onProps, resize, getParent, getParentDomain, show, hide, export: xport } = helpers;\n        const decoratedValue = prop.childDecorate({ value, uid, close, focus, onError, onProps, resize, getParent, getParentDomain, show, hide, export: xport });\n\n        // $FlowFixMe\n        return decoratedValue;\n    }\n\n    return value;\n}\n\n// eslint-disable-next-line max-params\nexport function normalizeChildProps<P, X>(parentComponentWindow : CrossDomainWindowType, propsDef : PropsDefinitionType<P, X>, props : PropsType<P>, origin : string, helpers : ChildHelpers<P, X>, isUpdate : boolean = false) : (PropsType<P>) {\n\n    const result = {};\n\n    for (const key of Object.keys(props)) {\n        const prop = propsDef[key];\n\n        if (prop && prop.sameDomain && (origin !== getDomain(window) || !isSameDomain(parentComponentWindow))) {\n            continue;\n        }\n\n        // $FlowFixMe\n        const value = normalizeChildProp(propsDef, props, key, props[key], helpers);\n\n        result[key] = value;\n        if (prop && prop.alias && !result[prop.alias]) {\n            result[prop.alias] = value;\n        }\n    }\n\n    if (!isUpdate) {\n        for (const key of Object.keys(propsDef)) {\n            if (!props.hasOwnProperty(key)) {\n                result[key] = normalizeChildProp(propsDef, props, key, undefined, helpers);\n            }\n        }\n    }\n\n    // $FlowFixMe\n    return result;\n}\n","/* @flow */\n\nimport { inlineMemoize, stringifyError, base64decode } from 'belter/src';\n\nimport { ZOID } from '../constants';\nimport type { ChildPayload } from '../parent';\n\nfunction parseChildWindowName(windowName : string) : ChildPayload {\n    return inlineMemoize(parseChildWindowName, () => {\n        if (!windowName) {\n            throw new Error(`No window name`);\n        }\n    \n        const [ , zoidcomp, name, encodedPayload ] = windowName.split('__');\n    \n        if (zoidcomp !== ZOID) {\n            throw new Error(`Window not rendered by zoid - got ${ zoidcomp }`);\n        }\n    \n        if (!name) {\n            throw new Error(`Expected component name`);\n        }\n    \n        if (!encodedPayload) {\n            throw new Error(`Expected encoded payload`);\n        }\n    \n        try {\n            return JSON.parse(base64decode(encodedPayload));\n        } catch (err) {\n            throw new Error(`Can not decode window name payload: ${ encodedPayload }: ${ stringifyError(err) }`);\n        }\n    }, [ windowName ]);\n}\n\nexport function getChildPayload() : ?ChildPayload {\n    try {\n        return parseChildWindowName(window.name);\n    } catch (err) {\n        // pass\n    }\n}\n","/* @flow */\n/* eslint max-lines: 0 */\n\nimport { isSameDomain, matchDomain, getDomain, getOpener,\n    getNthParentFromTop, getAncestor, getAllFramesInWindow,\n    type CrossDomainWindowType, onCloseWindow } from 'cross-domain-utils/src';\nimport { markWindowKnown, deserializeMessage, type CrossDomainFunctionType } from 'post-robot/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { extend, onResize, elementReady, assertExists, noop } from 'belter/src';\n\nimport { getGlobal } from '../lib';\nimport { CONTEXT, INITIAL_PROPS, WINDOW_REFERENCES } from '../constants';\nimport type { NormalizedComponentOptionsType } from '../component';\nimport type { PropsType } from '../component/props';\nimport type { WindowRef, PropRef, ParentExportsType } from '../parent';\nimport type { StringMatcherType } from '../types';\n\nimport { normalizeChildProps } from './props';\nimport { getChildPayload } from './window';\n\nexport type ChildExportsType<P> = {|\n    updateProps : CrossDomainFunctionType<[ PropsType<P> ], void>,\n    close : CrossDomainFunctionType<[], void>\n|};\n\nexport type ChildHelpers<P, X> = {|\n    uid : string,\n    close : () => ZalgoPromise<void>,\n    focus : () => ZalgoPromise<void>,\n    resize : ({| width : ?number, height : ?number |}) => ZalgoPromise<void>,\n    onError : (mixed) => ZalgoPromise<void>,\n    onProps : ((PropsType<P>) => void) => void,\n    getParent : () => CrossDomainWindowType,\n    getParentDomain : () => string,\n    show : () => ZalgoPromise<void>,\n    hide : () => ZalgoPromise<void>,\n    export : (X) => ZalgoPromise<void>\n|};\n\nfunction getParentComponentWindow(ref : WindowRef) : CrossDomainWindowType {\n    const { type } = ref;\n\n    if (type === WINDOW_REFERENCES.OPENER) {\n        return assertExists('opener', getOpener(window));\n\n    } else if (type === WINDOW_REFERENCES.PARENT && typeof ref.distance === 'number') {\n        return assertExists('parent', getNthParentFromTop(window, ref.distance));\n\n    } else if (type === WINDOW_REFERENCES.GLOBAL && ref.uid && typeof ref.uid === 'string') {\n        const { uid } = ref;\n        const ancestor = getAncestor(window);\n\n        if (!ancestor) {\n            throw new Error(`Can not find ancestor window`);\n        }\n\n        for (const frame of getAllFramesInWindow(ancestor)) {\n            if (isSameDomain(frame)) {\n                const global = getGlobal(frame);\n\n                if (global && global.windows && global.windows[uid]) {\n                    return global.windows[uid];\n                }\n            }\n        }\n    }\n\n    throw new Error(`Unable to find ${ type } parent component window`);\n}\n\nfunction checkParentDomain(allowedParentDomains : StringMatcherType, domain : string) {\n    if (!matchDomain(allowedParentDomains, domain)) {\n        throw new Error(`Can not be rendered by domain: ${ domain }`);\n    }\n}\n\nfunction focus() : ZalgoPromise<void> {\n    return ZalgoPromise.try(() => {\n        window.focus();\n    });\n}\n\nfunction destroy() : ZalgoPromise<void> {\n    return ZalgoPromise.try(() => {\n        window.close();\n    });\n}\n\nfunction getPropsByRef<P>(parentComponentWindow : CrossDomainWindowType, domain : string, { type, value, uid } : PropRef) : (PropsType<P>) {\n    let props;\n\n    if (type === INITIAL_PROPS.RAW) {\n        props = value;\n    } else if (type === INITIAL_PROPS.UID) {\n        if (!isSameDomain(parentComponentWindow)) {\n            throw new Error(`Parent component window is on a different domain - expected ${ getDomain() } - can not retrieve props`);\n        }\n\n        const global = getGlobal(parentComponentWindow);\n        props = assertExists('props', global && global.props[uid]);\n    }\n\n    if (!props) {\n        throw new Error(`Could not find props`);\n    }\n\n    return deserializeMessage(parentComponentWindow, domain, props);\n}\n\nexport type ChildComponent<P> = {|\n    getProps : () => PropsType<P>,\n    init : () => ZalgoPromise<void>\n|};\n\nexport function childComponent<P, X>(options : NormalizedComponentOptionsType<P, X>) : ChildComponent<P> {\n    const { propsDef, autoResize, allowedParentDomains } = options;\n\n    const onPropHandlers = [];\n    const childPayload = getChildPayload();\n    let props : PropsType<P>;\n\n    if (!childPayload) {\n        throw new Error(`No child payload found`);\n    }\n\n    if (childPayload.version !== __ZOID__.__VERSION__) {\n        throw new Error(`Parent window has zoid version ${ childPayload.version }, child window has version ${ __ZOID__.__VERSION__ }`);\n    }\n\n    const { uid, parent: parentRef, parentDomain, exports: parentExports, context, props: propsRef } = childPayload;\n    const parentComponentWindow = getParentComponentWindow(parentRef);\n    const parent : ParentExportsType<P, X> = deserializeMessage(parentComponentWindow, parentDomain, parentExports);\n\n    const { show, hide, close } = parent;\n\n    const getParent = () => parentComponentWindow;\n    const getParentDomain = () => parentDomain;\n    \n    const onProps = (handler : Function) => {\n        onPropHandlers.push(handler);\n    };\n\n    const onError = (err : mixed) : ZalgoPromise<void> => {\n        return ZalgoPromise.try(() => {\n            if (parent && parent.onError) {\n                return parent.onError(err);\n            } else {\n                throw err;\n            }\n        });\n    };\n\n    const resize = ({ width, height } : {| width : ?number, height : ?number |}) : ZalgoPromise<void> => {\n        return parent.resize.fireAndForget({ width, height });\n    };\n\n    const xport = (xports : X) : ZalgoPromise<void> => {\n        return parent.export(xports);\n    };\n\n    const getHelpers = () : ChildHelpers<P, X> => {\n        return {\n            show, hide, close, focus, onError, resize,\n            onProps, getParent, getParentDomain, uid, export: xport\n        };\n    };\n\n    const watchForClose = () => {\n        window.addEventListener('beforeunload', () => {\n            parent.checkClose.fireAndForget();\n        });\n\n        window.addEventListener('unload', () => {\n            parent.checkClose.fireAndForget();\n        });\n\n        onCloseWindow(parentComponentWindow, () => {\n            destroy();\n        });\n    };\n\n    const setProps = (newProps : PropsType<P>, origin : string, isUpdate : boolean = false) => {\n        const helpers = getHelpers();\n        const normalizedProps = normalizeChildProps(parentComponentWindow, propsDef, newProps, origin, helpers, isUpdate);\n\n        if (props) {\n            extend(props, normalizedProps);\n        } else {\n            props = normalizedProps;\n        }\n\n        for (const handler of onPropHandlers) {\n            handler(props);\n        }\n    };\n    \n    const getAutoResize = () : ZalgoPromise<{| width : boolean, height : boolean, element : ?HTMLElement |}> => {\n        const { width = false, height = false, element: elementRef = 'body' } = autoResize;\n        return elementReady(elementRef).catch(noop).then(element => {\n            return { width, height, element };\n        });\n    };\n\n    const watchForResize = () : ?ZalgoPromise<void> => {\n        return getAutoResize().then(({ width, height, element }) => {\n            if (!element || (!width && !height) || context === CONTEXT.POPUP) {\n                return;\n            }\n\n            onResize(element, ({ width: newWidth, height: newHeight }) => {\n                resize({\n                    width:  width ? newWidth : undefined,\n                    height: height ? newHeight : undefined\n                });\n            }, { width, height });\n        });\n    };\n\n    const updateProps = (newProps : (PropsType<P>)) : ZalgoPromise<void> => {\n        return ZalgoPromise.try(() => setProps(newProps, parentDomain, true));\n    };\n\n    const init = () => {\n        return ZalgoPromise.try(() => {\n            checkParentDomain(allowedParentDomains, parentDomain);\n            markWindowKnown(parentComponentWindow);\n            watchForClose();\n\n            return parent.init({ updateProps, close: destroy });\n    \n        }).then(() => {\n            return watchForResize();\n    \n        }).catch(err => {\n            onError(err);\n        });\n    };\n\n    const getProps = () => {\n        if (props) {\n            return props;\n        }\n\n        setProps(getPropsByRef(parentComponentWindow, parentDomain, propsRef), parentDomain);\n        return props;\n    };\n\n    return {\n        init,\n        getProps\n    };\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { dotify, isDefined, extend, base64encode } from 'belter/src';\n\nimport type { PropsInputType, PropsType, PropsDefinitionType, MixedPropDefinitionType } from '../component/props';\nimport { PROP_SERIALIZATION } from '../constants';\n\nimport type { ParentHelpers } from './index';\n\n/*  Normalize Props\n    ---------------\n\n    Turn props into normalized values, using defaults, function options, etc.\n*/\n\nexport function extendProps<P, X>(propsDef : PropsDefinitionType<P, X>, props : PropsType<P>, inputProps : PropsInputType<P>, helpers : ParentHelpers<P>, isUpdate : boolean = false) { // eslint-disable-line complexity\n\n    // $FlowFixMe\n    inputProps = inputProps || {};\n    extend(props, inputProps);\n\n    const propNames = isUpdate ? [] : [ ...Object.keys(propsDef) ];\n\n    for (const key of Object.keys(inputProps)) {\n        if (propNames.indexOf(key) === -1) {\n            propNames.push(key);\n        }\n    }\n\n    const aliases = [];\n\n    const { state, close, focus, event, onError } = helpers;\n\n    for (const key of propNames) {\n        const propDef = propsDef[key];\n\n        // $FlowFixMe\n        let value = inputProps[key];\n\n        if (!propDef) {\n            continue;\n        }\n\n        const alias = propDef.alias;\n        if (alias) {\n            if (!isDefined(value) && isDefined(inputProps[alias])) {\n                value = inputProps[alias];\n            }\n            aliases.push(alias);\n        }\n\n        if (propDef.value) {\n            value = propDef.value({ props, state, close, focus, event, onError });\n        }\n\n        if (!isDefined(value) && propDef.default) {\n            value = propDef.default({ props, state, close, focus, event, onError });\n        }\n\n        if (isDefined(value)) {\n            if (propDef.type === 'array' ? !Array.isArray(value) : (typeof value !== propDef.type)) {\n                throw new TypeError(`Prop is not of type ${ propDef.type }: ${ key }`);\n            }\n        }\n        \n        // $FlowFixMe\n        props[key] = value;\n    }\n\n    for (const alias of aliases) {\n        delete props[alias];\n    }\n\n    // $FlowFixMe\n    for (const key of Object.keys(props)) {\n        const propDef = propsDef[key];\n        const value = props[key];\n\n        if (!propDef) {\n            continue;\n        }\n\n        if (__DEBUG__ && isDefined(value) && propDef.validate) {\n            propDef.validate({ value, props });\n        }\n\n        if (isDefined(value) && propDef.decorate) {\n            props[key] = propDef.decorate({ value, props, state, close, focus, event, onError });\n        }\n    }\n\n    for (const key of Object.keys(propsDef)) {\n        const propDef = propsDef[key];\n        // $FlowFixMe\n        const propVal = props[key];\n        if (propDef.required !== false && !isDefined(propVal)) {\n            throw new Error(`Expected prop \"${ key }\" to be defined`);\n        }\n    }\n}\n\n// $FlowFixMe\nfunction getQueryParam<P, X>(prop : MixedPropDefinitionType<P, X>, key : string, value : string) : ZalgoPromise<string> {\n    return ZalgoPromise.try(() => {\n        if (typeof prop.queryParam === 'function') {\n            return prop.queryParam({ value });\n        } else if (typeof prop.queryParam === 'string') {\n            return prop.queryParam;\n        } else {\n            return key;\n        }\n    });\n}\n\n// $FlowFixMe\nfunction getQueryValue<P, X>(prop : MixedPropDefinitionType<P, X>, key : string, value : string) : ZalgoPromise<string> {\n    return ZalgoPromise.try(() => {\n        if (typeof prop.queryValue === 'function' && isDefined(value)) {\n            return prop.queryValue({ value });\n        } else {\n            return value;\n        }\n    });\n}\n\nexport function propsToQuery<P, X>(propsDef : PropsDefinitionType<P, X>, props : (PropsType<P>)) : ZalgoPromise<{ [string] : string | boolean }> {\n\n    const params = {};\n\n    // $FlowFixMe\n    const keys = Object.keys(props);\n    \n    return ZalgoPromise.all(keys.map(key => {\n\n        const prop = propsDef[key];\n\n        if (!prop) {\n            return; // eslint-disable-line array-callback-return\n        }\n\n        return ZalgoPromise.resolve().then(() => {\n\n            const value = props[key];\n\n            if (value === null || typeof value === 'undefined') {\n                return;\n            }\n\n            if (!prop.queryParam) {\n                return;\n            }\n\n            return value;\n\n        }).then(value => {\n\n            if (value === null || typeof value === 'undefined') {\n                return;\n            }\n\n            return ZalgoPromise.all([\n                getQueryParam(prop, key, value),\n                getQueryValue(prop, key, value)\n            ]).then(([ queryParam, queryValue ]) => {\n\n                let result;\n\n                if (typeof queryValue === 'boolean') {\n                    result = queryValue.toString();\n                } else if (typeof queryValue === 'string') {\n                    result = queryValue.toString();\n                } else if (typeof queryValue === 'object' && queryValue !== null) {\n\n                    if (prop.serialization === PROP_SERIALIZATION.JSON) {\n                        result = JSON.stringify(queryValue);\n                    } else if (prop.serialization === PROP_SERIALIZATION.BASE64) {\n                        result = base64encode(JSON.stringify(queryValue));\n                    } else if (prop.serialization === PROP_SERIALIZATION.DOTIFY || !prop.serialization) {\n                        result = dotify(queryValue, key);\n\n                        for (const dotkey of Object.keys(result)) {\n                            params[dotkey] = result[dotkey];\n                        }\n\n                        return;\n                    }\n\n                } else if (typeof queryValue === 'number') {\n                    result = queryValue.toString();\n                }\n\n                params[queryParam] = result;\n            });\n        });\n\n    })).then(() => {\n        return params;\n    });\n}\n","/* @flow */\n/* eslint max-lines: 0 */\n\nimport { send, bridge, serializeMessage, ProxyWindow, toProxyWindow, type CrossDomainFunctionType, cleanUpWindow } from 'post-robot/src';\nimport { isSameDomain, matchDomain, getDomainFromUrl, isBlankDomain,\n    getDomain, type CrossDomainWindowType,\n    getDistanceFromTop, normalizeMockUrl, assertSameDomain, closeWindow, onCloseWindow, isWindowClosed, isSameTopWindow } from 'cross-domain-utils/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { addEventListener, uniqueID, elementReady, writeElementToWindow, eventEmitter, type EventEmitterType,\n    noop, onResize, extendUrl, appendChild, cleanup, base64encode, isRegex,\n    once, stringifyError, destroyElement, getElementSafe, showElement, hideElement, iframe, memoize,\n    awaitFrameWindow, popup, normalizeDimension, watchElementForClose, isShadowElement, insertShadowSlot } from 'belter/src';\n\nimport { ZOID, POST_MESSAGE, CONTEXT, EVENT,\n    INITIAL_PROPS, WINDOW_REFERENCES } from '../constants';\nimport { getGlobal, getProxyObject, type ProxyObject } from '../lib';\nimport type { PropsInputType, PropsType } from '../component/props';\nimport type { ChildExportsType } from '../child';\nimport type { CssDimensionsType } from '../types';\nimport type { NormalizedComponentOptionsType, AttributesType } from '../component';\n\nimport { propsToQuery, extendProps } from './props';\n\nexport type RenderOptionsType<P> = {|\n    uid : string,\n    props : PropsInputType<P>,\n    tag : string,\n    context : $Values<typeof CONTEXT>,\n    close : (?string) => ZalgoPromise<void>,\n    focus : () => ZalgoPromise<void>,\n    doc : Document,\n    container? : HTMLElement,\n    dimensions : CssDimensionsType,\n    state : Object,\n    event : EventEmitterType,\n    frame : ?HTMLIFrameElement,\n    prerenderFrame : ?HTMLIFrameElement\n|};\n\nexport type ParentExportsType<P, X> = {|\n    init : (ChildExportsType<P>) => ZalgoPromise<void>,\n    close : () => ZalgoPromise<void>,\n    checkClose : CrossDomainFunctionType<[], boolean>,\n    resize : CrossDomainFunctionType<[{| width? : ?number, height? : ?number |}], void>,\n    onError : (mixed) => ZalgoPromise<void>,\n    show : () => ZalgoPromise<void>,\n    hide : () => ZalgoPromise<void>,\n    export : (X) => ZalgoPromise<void>\n|};\n\nexport type PropRef =\n    {| type : typeof INITIAL_PROPS.RAW, uid? : string, value? : string |};\n\nexport type WindowRef =\n    {| type : typeof WINDOW_REFERENCES.OPENER |} |\n    {| type : typeof WINDOW_REFERENCES.PARENT, distance : number |} |\n    {| type : typeof WINDOW_REFERENCES.GLOBAL, uid : string |};\n\nexport type ChildPayload = {|\n    uid : string,\n    tag : string,\n    version : string,\n    context : $Values<typeof CONTEXT>,\n    parentDomain : string,\n    childDomain : string,\n    parent : WindowRef,\n    props : PropRef,\n    exports : string\n|};\n\nexport type StateType = Object;\n\nexport type ParentHelpers<P> = {|\n    state : StateType,\n    close : () => ZalgoPromise<void>,\n    focus : () => ZalgoPromise<void>,\n    resize : ({| width : ?number, height : ?number |}) => ZalgoPromise<void>,\n    onError : (mixed) => ZalgoPromise<void>,\n    updateProps : PropsInputType<P> => ZalgoPromise<void>,\n    event : EventEmitterType,\n    show : () => ZalgoPromise<void>,\n    hide : () => ZalgoPromise<void>\n|};\n\nfunction getDefaultProps<P>() : PropsType<P> {\n    // $FlowFixMe\n    return {};\n}\n\ntype InternalState = {|\n    visible : boolean\n|};\n\ntype GetProxyContainer = (container : string | HTMLElement) => ZalgoPromise<ProxyObject<HTMLElement>>;\ntype Show = () => ZalgoPromise<void>;\ntype Hide = () => ZalgoPromise<void>;\ntype Close = () => ZalgoPromise<void>;\ntype OnError = (mixed) => ZalgoPromise<void>;\ntype RenderContainer = (proxyContainer : ProxyObject<HTMLElement>, {| context : $Values<typeof CONTEXT>, uid : string, proxyFrame : ?ProxyObject<HTMLIFrameElement>, proxyPrerenderFrame : ?ProxyObject<HTMLIFrameElement> |}) => ZalgoPromise<?ProxyObject<HTMLElement>>;\ntype SetProxyWin = (ProxyWindow) => ZalgoPromise<void>;\ntype GetProxyWindow = () => ZalgoPromise<ProxyWindow>;\ntype OpenFrame = (context : $Values<typeof CONTEXT>, {| windowName : string |}) => ZalgoPromise<?ProxyObject<HTMLIFrameElement>>;\ntype OpenPrerenderFrame = (context : $Values<typeof CONTEXT>) => ZalgoPromise<?ProxyObject<HTMLIFrameElement>>;\ntype Prerender = (proxyPrerenderWin : ProxyWindow, {| context : $Values<typeof CONTEXT>, uid : string |}) => ZalgoPromise<void>;\ntype Open = (context : $Values<typeof CONTEXT>, {| proxyWin : ProxyWindow, proxyFrame : ?ProxyObject<HTMLIFrameElement>, windowName : string |}) => ZalgoPromise<ProxyWindow>;\ntype OpenPrerender = (context : $Values<typeof CONTEXT>, proxyWin : ProxyWindow, proxyPrerenderFrame : ?ProxyObject<HTMLIFrameElement>) => ZalgoPromise<ProxyWindow>;\ntype WatchForUnload = () => ZalgoPromise<void>;\ntype GetInternalState = () => ZalgoPromise<InternalState>;\ntype SetInternalState = (InternalState) => ZalgoPromise<InternalState>;\n\ntype ParentDelegateOverrides<P> = {|\n    props : PropsType<P>,\n    event : EventEmitterType,\n    close : Close,\n    onError : OnError,\n    getProxyContainer : GetProxyContainer,\n    show : Show,\n    hide : Hide,\n    renderContainer : RenderContainer,\n    getProxyWindow : GetProxyWindow,\n    setProxyWin : SetProxyWin,\n    openFrame : OpenFrame,\n    openPrerenderFrame : OpenPrerenderFrame,\n    prerender : Prerender,\n    open : Open,\n    openPrerender : OpenPrerender,\n    watchForUnload : WatchForUnload,\n    getInternalState : GetInternalState,\n    setInternalState : SetInternalState\n|};\n\ntype DelegateOverrides = {|\n    getProxyContainer : GetProxyContainer,\n    show : Show,\n    hide : Hide,\n    renderContainer : RenderContainer,\n    getProxyWindow : GetProxyWindow,\n    setProxyWin : SetProxyWin,\n    openFrame : OpenFrame,\n    openPrerenderFrame : OpenPrerenderFrame,\n    prerender : Prerender,\n    open : Open,\n    openPrerender : OpenPrerender,\n    watchForUnload : WatchForUnload\n|};\n\ntype ParentComponent<P, X> = {|\n    init : () => void,\n    render : (CrossDomainWindowType, string | HTMLElement, $Values<typeof CONTEXT>) => ZalgoPromise<void>,\n    setProps : (newProps : PropsInputType<P>, isUpdate? : boolean) => void,\n    destroy : (err? : mixed) => ZalgoPromise<void>,\n    getHelpers : () => ParentHelpers<P>,\n    getDelegateOverrides : () => ZalgoPromise<DelegateOverrides>,\n    getExports : () => X\n|};\n\nconst getDefaultOverrides = <P>() : ParentDelegateOverrides<P> => {\n    // $FlowFixMe\n    return {};\n};\n\nexport function parentComponent<P, X>(options : NormalizedComponentOptionsType<P, X>, overrides? : ParentDelegateOverrides<P> = getDefaultOverrides(), parentWin : CrossDomainWindowType = window) : ParentComponent<P, X> {\n    const { propsDef, containerTemplate, prerenderTemplate, tag, name, attributes, dimensions, autoResize, url, domain: domainMatch, validate, exports: xports } = options;\n\n    const initPromise = new ZalgoPromise();\n    const handledErrors = [];\n    const clean = cleanup();\n    const state = {};\n    let internalState = {\n        visible: true\n    };\n    const event = overrides.event ? overrides.event : eventEmitter();\n    const props = overrides.props ? overrides.props : getDefaultProps();\n\n    let currentProxyWin : ?ProxyWindow;\n    let currentProxyContainer : ?ProxyObject<HTMLElement>;\n    let childComponent : ?ChildExportsType<P>;\n\n    const onErrorOverride : ?OnError = overrides.onError;\n    let getProxyContainerOverride : ?GetProxyContainer = overrides.getProxyContainer;\n    let showOverride : ?Show = overrides.show;\n    let hideOverride : ?Hide = overrides.hide;\n    const closeOverride : ?Close = overrides.close;\n    let renderContainerOverride : ?RenderContainer = overrides.renderContainer;\n    let getProxyWindowOverride : ?GetProxyWindow = overrides.getProxyWindow;\n    let setProxyWinOverride : ?SetProxyWin = overrides.setProxyWin;\n    let openFrameOverride : ?OpenFrame = overrides.openFrame;\n    let openPrerenderFrameOverride : ?OpenPrerenderFrame = overrides.openPrerenderFrame;\n    let prerenderOverride : ?Prerender = overrides.prerender;\n    let openOverride : ?Open = overrides.open;\n    let openPrerenderOverride : ?OpenPrerender = overrides.openPrerender;\n    let watchForUnloadOverride : ?WatchForUnload = overrides.watchForUnload;\n    const getInternalStateOverride : ?GetInternalState = overrides.getInternalState;\n    const setInternalStateOverride : ?SetInternalState = overrides.setInternalState;\n\n    const getPropsForChild = (domain : string | RegExp) : ZalgoPromise<PropsType<P>> => {\n        const result = {};\n\n        for (const key of Object.keys(props)) {\n            const prop = propsDef[key];\n\n            if (prop && prop.sendToChild === false) {\n                continue;\n            }\n\n            if (prop && prop.sameDomain && !matchDomain(domain, getDomain(window))) {\n                continue;\n            }\n            \n            result[key] = props[key];\n        }\n\n        // $FlowFixMe\n        return ZalgoPromise.hash(result);\n    };\n\n    const setupEvents = () => {\n        event.on(EVENT.RENDER,   () => props.onRender());\n        event.on(EVENT.DISPLAY,  () => props.onDisplay());\n        event.on(EVENT.RENDERED, () => props.onRendered());\n        event.on(EVENT.CLOSE,    () => props.onClose());\n        event.on(EVENT.DESTROY,  () => props.onDestroy());\n        event.on(EVENT.RESIZE,   () => props.onResize());\n        event.on(EVENT.FOCUS,    () => props.onFocus());\n        event.on(EVENT.PROPS,    (newProps) => props.onProps(newProps));\n        event.on(EVENT.ERROR, err => {\n            if (props && props.onError) {\n                return props.onError(err);\n            } else {\n                return initPromise.reject(err).then(() => {\n                    setTimeout(() => {\n                        throw err;\n                    }, 1);\n                });\n            }\n        });\n\n        clean.register(event.reset);\n    };\n\n    const getInternalState = () => {\n        return ZalgoPromise.try(() => {\n            if (getInternalStateOverride) {\n                return getInternalStateOverride();\n            }\n\n            return internalState;\n        });\n    };\n\n    const setInternalState = (newInternalState)  => {\n        return ZalgoPromise.try(() => {\n            if (setInternalStateOverride) {\n                return setInternalStateOverride(newInternalState);\n            }\n\n            internalState = { ...internalState, ...newInternalState };\n            return internalState;\n        });\n    };\n\n    const getProxyWindow = () : ZalgoPromise<ProxyWindow> => {\n        if (getProxyWindowOverride) {\n            return getProxyWindowOverride();\n        }\n\n        return ZalgoPromise.try(() => {\n            const windowProp = props.window;\n\n            if (windowProp) {\n                const proxyWin = toProxyWindow(windowProp);\n                clean.register(() => windowProp.close());\n                return proxyWin;\n            }\n\n            return new ProxyWindow({ send });\n        });\n    };\n\n    const getProxyContainer : GetProxyContainer = (container : string | HTMLElement) : ZalgoPromise<ProxyObject<HTMLElement>> => {\n        if (getProxyContainerOverride) {\n            return getProxyContainerOverride(container);\n        }\n\n        return ZalgoPromise.try(() => {\n            return elementReady(container);\n        }).then(containerElement => {\n            if (isShadowElement(containerElement)) {\n                containerElement = insertShadowSlot(containerElement);\n            }\n\n            return getProxyObject(containerElement);\n        });\n    };\n\n    const getPropsRef = (proxyWin : ProxyWindow, childDomain : string, domain : string | RegExp, uid : string) : ZalgoPromise<PropRef> => {\n        return getPropsForChild(domain).then(childProps => {\n            const value = serializeMessage(proxyWin, domain, childProps);\n\n            const propRef = (childDomain === getDomain())\n                ? { type: INITIAL_PROPS.UID, uid }\n                : { type: INITIAL_PROPS.RAW, value };\n\n            if (propRef.type === INITIAL_PROPS.UID) {\n                const global = getGlobal(window);\n                global.props = global.props || {};\n                global.props[uid] = value;\n\n                clean.register(() => {\n                    delete global.props[uid];\n                });\n            }\n\n            return propRef;\n        });\n    };\n\n    const setProxyWin = (proxyWin : ProxyWindow) : ZalgoPromise<void> => {\n        if (setProxyWinOverride) {\n            return setProxyWinOverride(proxyWin);\n        }\n\n        return ZalgoPromise.try(() => {\n            currentProxyWin = proxyWin;\n        });\n    };\n\n    const show = () : ZalgoPromise<void> => {\n        if (showOverride) {\n            return showOverride();\n        }\n\n        return ZalgoPromise.hash({\n            setState:    setInternalState({ visible: true }),\n            showElement: currentProxyContainer ? currentProxyContainer.get().then(showElement) : null\n        }).then(noop);\n    };\n\n    const hide = () : ZalgoPromise<void> => {\n        if (hideOverride) {\n            return hideOverride();\n        }\n\n        return ZalgoPromise.hash({\n            setState:    setInternalState({ visible: false }),\n            showElement: currentProxyContainer ? currentProxyContainer.get().then(hideElement) : null\n        }).then(noop);\n    };\n\n    const getUrl = () : string => {\n        if (typeof url === 'function') {\n            return url({ props });\n        }\n\n        return url;\n    };\n\n    const getAttributes = () : AttributesType => {\n        if (typeof attributes === 'function') {\n            return attributes({ props });\n        }\n\n        return attributes;\n    };\n\n    const buildUrl = () : ZalgoPromise<string> => {\n        return propsToQuery(propsDef, props).then(query => {\n            return extendUrl(normalizeMockUrl(getUrl()), { query });\n        });\n    };\n\n    const getChildDomain = () : string => {\n        if (domainMatch && typeof domainMatch === 'string') {\n            return domainMatch;\n        }\n\n        return getDomainFromUrl(getUrl());\n    };\n\n    const getDomainMatcher = () : string | RegExp => {\n        if (domainMatch && isRegex(domainMatch)) {\n            return domainMatch;\n        }\n\n        return getChildDomain();\n    };\n\n    const openFrame = (context : $Values<typeof CONTEXT>, { windowName } : {| windowName : string |}) : ZalgoPromise<?ProxyObject<HTMLIFrameElement>> => {\n        if (openFrameOverride) {\n            return openFrameOverride(context, { windowName });\n        }\n        \n        return ZalgoPromise.try(() => {\n            if (context === CONTEXT.IFRAME && __ZOID__.__IFRAME_SUPPORT__) {\n\n                // $FlowFixMe\n                const attrs = {\n                    name:  windowName,\n                    title: name,\n                    ...getAttributes().iframe\n                };\n\n                return getProxyObject(iframe({ attributes: attrs }));\n            }\n        });\n    };\n\n    const openPrerenderFrame = (context : $Values<typeof CONTEXT>) : ZalgoPromise<?ProxyObject<HTMLIFrameElement>> => {\n        if (openPrerenderFrameOverride) {\n            return openPrerenderFrameOverride(context);\n        }\n\n        return ZalgoPromise.try(() => {\n            if (context === CONTEXT.IFRAME && __ZOID__.__IFRAME_SUPPORT__) {\n                // $FlowFixMe\n                const attrs = {\n                    name:  `__${ ZOID }_prerender_frame__${ name }_${ uniqueID() }__`,\n                    title: `prerender__${ name }`,\n                    ...getAttributes().iframe\n                };\n                return getProxyObject(iframe({\n                    attributes: attrs\n                }));\n            }\n        });\n    };\n    \n    const openPrerender = (context : $Values<typeof CONTEXT>, proxyWin : ProxyWindow, proxyPrerenderFrame : ?ProxyObject<HTMLIFrameElement>) : ZalgoPromise<ProxyWindow> => {\n        if (openPrerenderOverride) {\n            return openPrerenderOverride(context, proxyWin, proxyPrerenderFrame);\n        }\n        \n        return ZalgoPromise.try(() => {\n            if (context === CONTEXT.IFRAME && __ZOID__.__IFRAME_SUPPORT__) {\n                if (!proxyPrerenderFrame) {\n                    throw new Error(`Expected proxy frame to be passed`);\n                }\n                \n                return proxyPrerenderFrame.get().then(prerenderFrame => {\n                    clean.register(() => destroyElement(prerenderFrame));\n        \n                    return awaitFrameWindow(prerenderFrame).then(prerenderFrameWindow => {\n                        return assertSameDomain(prerenderFrameWindow);\n                    }).then(win => {\n                        return toProxyWindow(win);\n                    });\n                });\n            } else if (context === CONTEXT.POPUP && __ZOID__.__POPUP_SUPPORT__) {\n                return proxyWin;\n            } else {\n                throw new Error(`No render context available for ${ context }`);\n            }\n        });\n    };\n\n    const focus = () : ZalgoPromise<void> => {\n        return ZalgoPromise.try(() => {\n            if (currentProxyWin) {\n                return ZalgoPromise.all([\n                    event.trigger(EVENT.FOCUS),\n                    currentProxyWin.focus()\n                ]).then(noop);\n            }\n        });\n    };\n\n    const getWindowRef = (target : CrossDomainWindowType, domain : string, uid : string, context : $Values<typeof CONTEXT>) : WindowRef => {\n        \n        if (domain === getDomain(window)) {\n            const global = getGlobal(window);\n            global.windows = global.windows || {};\n            global.windows[uid] = window;\n            clean.register(() => {\n                delete global.windows[uid];\n            });\n    \n            return { type: WINDOW_REFERENCES.GLOBAL, uid };\n        }\n\n        if (context === CONTEXT.POPUP) {\n            return { type: WINDOW_REFERENCES.OPENER };\n        }\n\n        return { type: WINDOW_REFERENCES.PARENT, distance: getDistanceFromTop(window) };\n    };\n\n    const runTimeout = () : ZalgoPromise<void> => {\n        return ZalgoPromise.try(() => {\n            const timeout = props.timeout;\n\n            if (timeout) {\n                return initPromise.timeout(timeout, new Error(`Loading component timed out after ${ timeout } milliseconds`));\n            }\n        });\n    };\n\n    const initChild = (childExports : ChildExportsType<P>) : ZalgoPromise<void> => {\n        return ZalgoPromise.try(() => {\n            childComponent = childExports;\n            initPromise.resolve();\n            clean.register(() => childExports.close.fireAndForget().catch(noop));\n        });\n    };\n\n    const resize = ({ width, height } : {| width? : ?number, height? : ?number |}) : ZalgoPromise<void> => {\n        return ZalgoPromise.try(() => {\n            event.trigger(EVENT.RESIZE, { width, height });\n        });\n    };\n\n    const destroy = (err : mixed) : ZalgoPromise<void> => {\n        // eslint-disable-next-line promise/no-promise-in-callback\n        return ZalgoPromise.try(() => {\n            return event.trigger(EVENT.DESTROY);\n        }).catch(noop).then(() => {\n            return clean.all(err);\n        }).then(() => {\n            initPromise.asyncReject(err || new Error('Component destroyed'));\n        });\n    };\n\n    const close = memoize((err? : mixed) : ZalgoPromise<void> => {\n        return ZalgoPromise.try(() => {\n\n            if (closeOverride) {\n                // $FlowFixMe\n                const source = closeOverride.__source__;\n\n                if (isWindowClosed(source)) {\n                    return;\n                }\n\n                return closeOverride();\n            }\n\n            return ZalgoPromise.try(() => {\n                return event.trigger(EVENT.CLOSE);\n            }).then(() => {\n                return destroy(err || new Error(`Component closed`));\n            });\n        });\n    });\n\n    const open = (context : $Values<typeof CONTEXT>, { proxyWin, proxyFrame, windowName } : {| proxyWin : ProxyWindow, proxyFrame : ?ProxyObject<HTMLIFrameElement>, windowName : string |}) : ZalgoPromise<ProxyWindow> => {\n        if (openOverride) {\n            return openOverride(context,  { proxyWin, proxyFrame, windowName });\n        }\n        \n        return ZalgoPromise.try(() => {\n            if (context === CONTEXT.IFRAME && __ZOID__.__IFRAME_SUPPORT__) {\n                if (!proxyFrame) {\n                    throw new Error(`Expected proxy frame to be passed`);\n                }\n        \n                return proxyFrame.get().then(frame => {\n                    return awaitFrameWindow(frame).then(win => {\n                        clean.register(() => destroyElement(frame));\n                        clean.register(() => cleanUpWindow(win));\n                        return win;\n                    });\n                });\n            } else if (context === CONTEXT.POPUP && __ZOID__.__POPUP_SUPPORT__) {\n                let { width, height } = dimensions;\n    \n                width = normalizeDimension(width, window.outerWidth);\n                height = normalizeDimension(height, window.outerWidth);\n\n                // $FlowFixMe\n                const attrs = {\n                    name: windowName,\n                    width,\n                    height,\n                    ...getAttributes().popup\n                };\n    \n                const win = popup('', attrs);\n    \n                clean.register(() => closeWindow(win));\n                clean.register(() => cleanUpWindow(win));\n\n                return win;\n            } else {\n                throw new Error(`No render context available for ${ context }`);\n            }\n\n        }).then(win => {\n            proxyWin.setWindow(win, { send });\n            return proxyWin;\n        });\n    };\n\n    const watchForUnload = () => {\n        return ZalgoPromise.try(() => {\n            const unloadWindowListener = addEventListener(window, 'unload', once(() => {\n                destroy(new Error(`Window navigated away`));\n            }));\n    \n            const closeParentWindowListener = onCloseWindow(parentWin, destroy, 3000);\n            clean.register(closeParentWindowListener.cancel);\n            clean.register(unloadWindowListener.cancel);\n\n            if (watchForUnloadOverride) {\n                return watchForUnloadOverride();\n            }\n        });\n    };\n\n    const watchForClose = (proxyWin : ProxyWindow, context : $Values<typeof CONTEXT>) : ZalgoPromise<void> => {\n        let cancelled = false;\n\n        clean.register(() => {\n            cancelled = true;\n        });\n\n        return ZalgoPromise.delay(2000).then(() => {\n            return proxyWin.isClosed();\n        }).then(isClosed => {\n            if (isClosed) {\n                return close(new Error(`Detected ${ context } close`));\n            } else if (!cancelled) {\n                return watchForClose(proxyWin, context);\n            }\n        });\n    };\n\n    const checkWindowClose = (proxyWin : ProxyWindow) : ZalgoPromise<boolean> => {\n        let closed = false;\n        \n        return proxyWin.isClosed().then(isClosed => {\n            if (isClosed) {\n                closed = true;\n                return close(new Error(`Detected component window close`));\n            }\n\n            return ZalgoPromise.delay(200)\n                .then(() => proxyWin.isClosed())\n                .then(secondIsClosed => {\n                    if (secondIsClosed) {\n                        closed = true;\n                        return close(new Error(`Detected component window close`));\n                    }\n                });\n        }).then(() => {\n            return closed;\n        });\n    };\n\n    const onError = (err : mixed) : ZalgoPromise<void> => {\n        if (onErrorOverride) {\n            return onErrorOverride(err);\n        }\n\n        return ZalgoPromise.try(() => {\n            if (handledErrors.indexOf(err) !== -1) {\n                return;\n            }\n\n            handledErrors.push(err);\n            initPromise.asyncReject(err);\n\n            return event.trigger(EVENT.ERROR, err);\n        });\n    };\n\n    const exportsPromise : ZalgoPromise<X> = new ZalgoPromise();\n\n    const getExports = () : X => {\n        return xports({\n            getExports: () => exportsPromise\n        });\n    };\n\n    const resolveExports = (actualExports : X) : ZalgoPromise<void> => {\n        return ZalgoPromise.try(() => {\n            exportsPromise.resolve(actualExports);\n        });\n    };\n\n    initChild.onError = onError;\n\n    const buildParentExports = (win : ProxyWindow) : ParentExportsType<P, X> => {\n        const checkClose = () => checkWindowClose(win);\n        return { init: initChild, close, checkClose, resize, onError, show, hide, export: resolveExports };\n    };\n\n    const buildChildPayload = ({ proxyWin, childDomain, domain, target = window, context, uid } : {| proxyWin : ProxyWindow, childDomain : string, domain : string | RegExp, target : CrossDomainWindowType, context : $Values<typeof CONTEXT>, uid : string |} = {}) : ZalgoPromise<ChildPayload> => {\n        return getPropsRef(proxyWin, childDomain, domain, uid).then(propsRef => {\n            return {\n                uid,\n                context,\n                tag,\n                version:      __ZOID__.__VERSION__,\n                childDomain,\n                parentDomain: getDomain(window),\n                parent:       getWindowRef(target, childDomain, uid, context),\n                props:        propsRef,\n                exports:      serializeMessage(proxyWin, domain, buildParentExports(proxyWin))\n            };\n        });\n    };\n\n    const buildWindowName = ({ proxyWin, childDomain, domain, target, uid, context } : {| proxyWin : ProxyWindow, childDomain : string, domain : string | RegExp, target : CrossDomainWindowType, context : $Values<typeof CONTEXT>, uid : string |}) : ZalgoPromise<string> => {\n        return buildChildPayload({ proxyWin, childDomain, domain, target, context, uid }).then(childPayload => {\n            return `__${ ZOID }__${ name }__${ base64encode(JSON.stringify(childPayload)) }__`;\n        });\n    };\n\n    const renderTemplate = (renderer : (RenderOptionsType<P>) => ?HTMLElement, { context, uid, container, doc, frame, prerenderFrame } : {| context : $Values<typeof CONTEXT>, uid : string, container? : HTMLElement, doc : Document, frame? : ?HTMLIFrameElement, prerenderFrame? : ?HTMLIFrameElement |}) : ?HTMLElement => {\n        // $FlowFixMe\n        return renderer({\n            container, context, uid, doc, frame, prerenderFrame,\n            focus, close, state, props, tag, dimensions, event\n        });\n    };\n\n    const prerender = (proxyPrerenderWin : ProxyWindow, { context, uid } : {| context : $Values<typeof CONTEXT>, uid : string |}) : ZalgoPromise<void> => {\n        if (prerenderOverride) {\n            return prerenderOverride(proxyPrerenderWin, { context, uid });\n        }\n                                                                                                                                                                                                                                    \n        return ZalgoPromise.try(() => {\n            if (!prerenderTemplate) {\n                return;\n            }\n\n            let prerenderWindow = proxyPrerenderWin.getWindow();\n\n            if (!prerenderWindow || !isSameDomain(prerenderWindow) || !isBlankDomain(prerenderWindow)) {\n                return;\n            }\n\n            prerenderWindow = assertSameDomain(prerenderWindow);\n    \n            const doc = prerenderWindow.document;\n            const el = renderTemplate(prerenderTemplate, { context, uid, doc });\n\n            if (!el) {\n                return;\n            }\n\n            if (el.ownerDocument !== doc) {\n                throw new Error(`Expected prerender template to have been created with document from child window`);\n            }\n\n            writeElementToWindow(prerenderWindow, el);\n\n            let { width = false, height = false, element = 'body' } = autoResize;\n            element = getElementSafe(element, doc);\n            \n            if (element && (width || height)) {\n                const prerenderResizeListener = onResize(element, ({ width: newWidth, height: newHeight }) => {\n                    resize({\n                        width:  width ? newWidth : undefined,\n                        height: height ? newHeight : undefined\n                    });\n                }, { width, height, win: prerenderWindow });\n\n                event.on(EVENT.RENDERED, prerenderResizeListener.cancel);\n            }\n        });\n    };\n\n    const renderContainer : RenderContainer = (proxyContainer : ProxyObject<HTMLElement>, { proxyFrame, proxyPrerenderFrame, context, uid } :\n        {| context : $Values<typeof CONTEXT>, uid : string, proxyFrame : ?ProxyObject<HTMLIFrameElement>, proxyPrerenderFrame : ?ProxyObject<HTMLIFrameElement> |}) : ZalgoPromise<?ProxyObject<HTMLElement>> => {\n\n        if (renderContainerOverride) {\n            return renderContainerOverride(proxyContainer, { proxyFrame, proxyPrerenderFrame, context, uid });\n        }\n\n        return ZalgoPromise.hash({\n            container:      proxyContainer.get(),\n            // $FlowFixMe\n            frame:          proxyFrame ? proxyFrame.get() : null,\n            // $FlowFixMe\n            prerenderFrame: proxyPrerenderFrame ? proxyPrerenderFrame.get() : null,\n            internalState:  getInternalState()\n        }).then(({ container, frame, prerenderFrame, internalState: { visible } }) => {\n            const innerContainer = renderTemplate(containerTemplate, { context, uid, container, frame, prerenderFrame, doc: document });\n            if (innerContainer) {\n                if (!visible) {\n                    hideElement(innerContainer);\n                }\n                appendChild(container, innerContainer);\n                const containerWatcher = watchElementForClose(innerContainer, () => close(new Error(`Detected container element removed from DOM`)));\n                \n                clean.register(() => containerWatcher.cancel());\n                clean.register(() => destroyElement(innerContainer));\n                currentProxyContainer = getProxyObject(innerContainer);\n                return currentProxyContainer;\n            }\n        });\n    };\n\n    const getBridgeUrl = () : ?string => {\n        if (typeof options.bridgeUrl === 'function') {\n            return options.bridgeUrl({ props });\n        }\n\n        return options.bridgeUrl;\n    };\n\n    const openBridge = (proxyWin : ProxyWindow, domain : string, context : $Values<typeof CONTEXT>) : ?ZalgoPromise<?CrossDomainWindowType> => {\n        if (__POST_ROBOT__.__IE_POPUP_SUPPORT__) {\n            return ZalgoPromise.try(() => {\n                return proxyWin.awaitWindow();\n                \n            }).then(win => {\n                if (!bridge || !bridge.needsBridge({ win, domain }) || bridge.hasBridge(domain, domain)) {\n                    return;\n                }\n\n                const bridgeUrl = getBridgeUrl();\n\n                if (!bridgeUrl) {\n                    throw new Error(`Bridge needed to render ${ context }`);\n                }\n\n                const bridgeDomain = getDomainFromUrl(bridgeUrl);\n                bridge.linkUrl(win, domain);\n                return bridge.openBridge(normalizeMockUrl(bridgeUrl), bridgeDomain);\n            });\n        }\n    };\n\n    const getHelpers = () : ParentHelpers<P> => {\n        return {\n            state, event, close, focus, resize,\n            // eslint-disable-next-line no-use-before-define\n            onError, updateProps, show, hide\n        };\n    };\n\n    const setProps = (newProps : PropsInputType<P>, isUpdate? : boolean = false) => {\n        if (__DEBUG__ && validate) {\n            validate({ props: newProps });\n        }\n\n        const helpers = getHelpers();\n        extendProps(propsDef, props, newProps, helpers, isUpdate);\n    };\n\n    const updateProps = (newProps : PropsInputType<P>) : ZalgoPromise<void> => {\n        setProps(newProps, true);\n\n        return initPromise.then(() => {\n            const child = childComponent;\n            const proxyWin = currentProxyWin;\n            \n            if (!child || !proxyWin) {\n                return;\n            }\n\n            return getPropsForChild(getDomainMatcher()).then(childProps => {\n                return child.updateProps(childProps).catch(err => {\n                    return checkWindowClose(proxyWin).then(closed => {\n                        if (!closed) {\n                            throw err;\n                        }\n                    });\n                });\n            });\n        });\n    };\n\n    const delegate = (context : $Values<typeof CONTEXT>, target : CrossDomainWindowType) : ZalgoPromise<DelegateOverrides> => {\n        const delegateProps = {};\n        for (const propName of Object.keys(props)) {\n            const propDef = propsDef[propName];\n            if (propDef && propDef.allowDelegate) {\n                delegateProps[propName] = props[propName];\n            }\n        }\n\n        const childOverridesPromise = send(target, `${ POST_MESSAGE.DELEGATE }_${ name }`, {\n            overrides: { props: delegateProps, event, close, onError, getInternalState, setInternalState }\n        }).then(({ data: { parent } }) => {\n            const parentComp : ParentComponent<P, X> = parent;\n\n            clean.register(err => {\n                if (!isWindowClosed(target)) {\n                    return parentComp.destroy(err);\n                }\n            });\n            return parentComp.getDelegateOverrides();\n\n        }).catch(err => {\n            throw new Error(`Unable to delegate rendering. Possibly the component is not loaded in the target window.\\n\\n${ stringifyError(err) }`);\n        });\n\n        getProxyContainerOverride = (...args) => childOverridesPromise.then(childOverrides => childOverrides.getProxyContainer(...args));\n        renderContainerOverride = (...args) => childOverridesPromise.then(childOverrides => childOverrides.renderContainer(...args));\n        showOverride = (...args) => childOverridesPromise.then(childOverrides => childOverrides.show(...args));\n        hideOverride = (...args) => childOverridesPromise.then(childOverrides => childOverrides.hide(...args));\n        watchForUnloadOverride = (...args) => childOverridesPromise.then(childOverrides => childOverrides.watchForUnload(...args));\n\n        if (context === CONTEXT.IFRAME && __ZOID__.__IFRAME_SUPPORT__) {\n            getProxyWindowOverride = (...args) => childOverridesPromise.then(childOverrides => childOverrides.getProxyWindow(...args));\n            openFrameOverride = (...args) => childOverridesPromise.then(childOverrides => childOverrides.openFrame(...args));\n            openPrerenderFrameOverride = (...args) => childOverridesPromise.then(childOverrides => childOverrides.openPrerenderFrame(...args));\n            prerenderOverride = (...args) => childOverridesPromise.then(childOverrides => childOverrides.prerender(...args));\n            openOverride = (...args) => childOverridesPromise.then(childOverrides => childOverrides.open(...args));\n            openPrerenderOverride = (...args) => childOverridesPromise.then(childOverrides => childOverrides.openPrerender(...args));\n        } else if (context === CONTEXT.POPUP && __ZOID__.__POPUP_SUPPORT__) {\n            setProxyWinOverride = (...args) => childOverridesPromise.then(childOverrides => childOverrides.setProxyWin(...args));\n        }\n\n        return childOverridesPromise;\n    };\n\n    const getDelegateOverrides = () : ZalgoPromise<DelegateOverrides> => {\n        return ZalgoPromise.try(() => {\n            return {\n                getProxyContainer, show, hide, renderContainer, getProxyWindow, watchForUnload,\n                openFrame, openPrerenderFrame, prerender, open, openPrerender, setProxyWin\n            };\n        });\n    };\n\n    const checkAllowRender = (target : CrossDomainWindowType, domain : string | RegExp, container : string | HTMLElement) => {\n        if (target === window) {\n            return;\n        }\n\n        if (!isSameTopWindow(window, target)) {\n            throw new Error(`Can only renderTo an adjacent frame`);\n        }\n\n        const origin = getDomain();\n\n        if (!matchDomain(domain, origin) && !isSameDomain(target)) {\n            throw new Error(`Can not render remotely to ${ domain.toString() } - can only render to ${ origin }`);\n        }\n\n        if (container && typeof container !== 'string') {\n            throw new Error(`Container passed to renderTo must be a string selector, got ${ typeof container } }`);\n        }\n    };\n\n    const init = () => {\n        setupEvents();\n    };\n\n    const render = (target : CrossDomainWindowType, container : string | HTMLElement, context : $Values<typeof CONTEXT>) : ZalgoPromise<void> => {\n        return ZalgoPromise.try(() => {\n            const uid = `${ ZOID }-${ tag }-${ uniqueID() }`;\n            const domain = getDomainMatcher();\n            const childDomain = getChildDomain();\n            \n            checkAllowRender(target, domain, container);\n\n            const delegatePromise = ZalgoPromise.try(() => {\n                if (target !== window) {\n                    return delegate(context, target);\n                }\n            });\n\n            const windowProp = props.window;\n\n            const watchForUnloadPromise = watchForUnload();\n            \n            const buildUrlPromise = buildUrl();\n            const onRenderPromise = event.trigger(EVENT.RENDER);\n\n            const getProxyContainerPromise = getProxyContainer(container);\n            const getProxyWindowPromise = getProxyWindow();\n\n            const buildWindowNamePromise = getProxyWindowPromise.then(proxyWin => {\n                return buildWindowName({ proxyWin, childDomain, domain, target, context, uid });\n            });\n\n            const openFramePromise = buildWindowNamePromise.then(windowName => openFrame(context, { windowName }));\n            const openPrerenderFramePromise = openPrerenderFrame(context);\n\n            const renderContainerPromise = ZalgoPromise.hash({ proxyContainer: getProxyContainerPromise, proxyFrame: openFramePromise, proxyPrerenderFrame: openPrerenderFramePromise }).then(({ proxyContainer, proxyFrame, proxyPrerenderFrame }) => {\n                return renderContainer(proxyContainer, { context, uid, proxyFrame, proxyPrerenderFrame });\n            }).then(proxyContainer => {\n                return proxyContainer;\n            });\n\n            const openPromise = ZalgoPromise.hash({ windowName: buildWindowNamePromise, proxyFrame: openFramePromise, proxyWin: getProxyWindowPromise }).then(({ windowName, proxyWin, proxyFrame }) => {\n                return windowProp\n                    ? proxyWin\n                    : open(context, { windowName, proxyWin, proxyFrame });\n            });\n\n            const openPrerenderPromise = ZalgoPromise.hash({ proxyWin: openPromise, proxyPrerenderFrame: openPrerenderFramePromise }).then(({ proxyWin, proxyPrerenderFrame }) => {\n                return openPrerender(context, proxyWin, proxyPrerenderFrame);\n            });\n\n            const setStatePromise = openPromise.then(proxyWin => {\n                currentProxyWin = proxyWin;\n                return setProxyWin(proxyWin);\n            });\n            \n            const prerenderPromise = ZalgoPromise.hash({ proxyPrerenderWin: openPrerenderPromise, state: setStatePromise }).then(({ proxyPrerenderWin }) => {\n                return prerender(proxyPrerenderWin, { context, uid });\n            });\n\n            const setWindowNamePromise =  ZalgoPromise.hash({ proxyWin: openPromise, windowName: buildWindowNamePromise }).then(({ proxyWin, windowName }) => {\n                if (windowProp) {\n                    return proxyWin.setName(windowName);\n                }\n            });\n\n            const loadUrlPromise = ZalgoPromise.hash({ proxyWin: openPromise, builtUrl: buildUrlPromise, windowName: setWindowNamePromise, prerender: prerenderPromise }).then(({ proxyWin, builtUrl }) => {\n                return proxyWin.setLocation(builtUrl);\n            });\n\n            const watchForClosePromise = openPromise.then(proxyWin => {\n                watchForClose(proxyWin, context);\n            });\n\n            const onDisplayPromise = ZalgoPromise.hash({ container: renderContainerPromise, prerender: prerenderPromise }).then(() => {\n                return event.trigger(EVENT.DISPLAY);\n            });\n\n            const openBridgePromise = openPromise.then(proxyWin => {\n                return openBridge(proxyWin, childDomain, context);\n            });\n\n            const runTimeoutPromise = loadUrlPromise.then(() => {\n                return runTimeout();\n            });\n\n            const onRenderedPromise = initPromise.then(() => {\n                return event.trigger(EVENT.RENDERED);\n            });\n\n            return ZalgoPromise.hash({\n                initPromise, buildUrlPromise, onRenderPromise, getProxyContainerPromise, openFramePromise, openPrerenderFramePromise, renderContainerPromise, openPromise,\n                openPrerenderPromise, setStatePromise, prerenderPromise, loadUrlPromise, buildWindowNamePromise, setWindowNamePromise, watchForClosePromise, onDisplayPromise,\n                openBridgePromise, runTimeoutPromise, onRenderedPromise, delegatePromise, watchForUnloadPromise\n            });\n            \n        }).catch(err => {\n            return ZalgoPromise.all([\n                onError(err),\n                destroy(err)\n            ]).then(() => {\n                throw err;\n            }, () => {\n                throw err;\n            });\n        }).then(noop);\n    };\n\n    return {\n        init,\n        render,\n        destroy,\n        setProps,\n        getHelpers,\n        getDelegateOverrides,\n        getExports\n    };\n}\n","/* @flow */\n/* eslint react/no-deprecated: off, react/no-find-dom-node: off, react/display-name: off, react/no-did-mount-set-state: off, react/destructuring-assignment: off, react/prop-types: off */\n\nimport { extend, noop } from 'belter/src';\n\nimport type { ComponentDriverType } from '../component';\nimport { CONTEXT } from '../constants';\n\n// eslint-disable-next-line flowtype/require-exact-type\ndeclare class ReactClassType {}\n\n// eslint-disable-next-line flowtype/require-exact-type\ndeclare class __ReactComponent {}\n\ntype ReactElementType = {|\n\n|};\n\ntype ReactType = {|\n    Component : __ReactComponent,\n    createClass : ({| render : () => ReactElementType, componentDidMount : () => void, componentDidUpdate : () => void |}) => (typeof ReactClassType),\n    createElement : (string, ?{ [string] : mixed }, ...children : $ReadOnlyArray<ReactElementType>) => ReactElementType\n|};\n\ntype ReactDomType = {|\n    findDOMNode : (typeof ReactClassType) => HTMLElement\n|};\n\ntype ReactLibraryType = {|\n    React : ReactType,\n    ReactDOM : ReactDomType\n|};\n\nexport const react : ComponentDriverType<*, ReactLibraryType, typeof ReactClassType, *> = {\n\n    register: (tag, propsDef, init, { React, ReactDOM }) => {\n\n        // $FlowFixMe\n        return class extends React.Component {\n            render() : ReactElementType {\n                return React.createElement('div', null);\n            }\n\n            componentDidMount() {\n                // $FlowFixMe\n                const el = ReactDOM.findDOMNode(this);\n                const parent = init(extend({}, this.props));\n                parent.render(el, CONTEXT.IFRAME);\n                this.setState({ parent });\n            }\n\n            componentDidUpdate() {\n\n                if (this.state && this.state.parent) {\n                    this.state.parent.updateProps(extend({}, this.props)).catch(noop);\n                }\n            }\n        };\n    }\n};\n","/* @flow */\n\nimport { noop, dasherizeToCamel } from 'belter/src';\n\nimport type { ComponentDriverType } from '../component';\nimport { CONTEXT } from '../constants';\n\ntype VueComponent = {|\n    render : (Function) => Element,\n    inheritAttrs : boolean,\n    mounted : () => void,\n    watch : {|\n        $attrs : {|\n            deep : boolean,\n            handler : () => void\n        |}\n    |}\n|};\n\ntype RegisteredVueComponent = {|\n    \n|};\n\ntype VueType = {|\n    component : (string, VueComponent) => RegisteredVueComponent\n|};\n\nfunction propsToCamelCase(props : Object) : Object {\n    return Object.keys(props).reduce((acc, key) => {\n        const value = props[key];\n        if (key.includes('-')) {\n            acc[dasherizeToCamel(key)] = value;\n        } else {\n            acc[key] = value;\n        }\n        return acc;\n    }, {});\n}\n\nexport const vue : ComponentDriverType<*, VueType, RegisteredVueComponent, *> = {\n\n    register: (tag, propsDef, init, Vue) => {\n\n        return Vue.component(tag, {\n            render(createElement) : Element {\n                return createElement('div');\n            },\n\n            inheritAttrs: false,\n\n            mounted() {\n                const el = this.$el;\n                this.parent = init({ ...propsToCamelCase(this.$attrs) });\n                this.parent.render(el, CONTEXT.IFRAME);\n            },\n\n            watch: {\n                $attrs: {\n                    handler: function handler() {\n                        if (this.parent && this.$attrs) {\n                            this.parent.updateProps({ ...this.$attrs }).catch(noop);\n                        }\n                    },\n                    deep: true\n                }\n            }\n        });\n    }\n};\n","/* @flow */\n\nimport { dasherizeToCamel, replaceObject, noop } from 'belter/src';\n\nimport type { ComponentDriverType } from '../component';\nimport { CONTEXT } from '../constants';\n\ntype AngularModule = {|\n    directive : (string, () => {|\n        scope : { [string] : '=' | '@' },\n        restrict : string,\n        controller : $ReadOnlyArray<string | Function>\n    |}) => AngularModule\n|};\n\ntype Angular = {|\n    module : (string, $ReadOnlyArray<string>) => AngularModule\n|};\n\nexport const angular : ComponentDriverType<*, Angular, AngularModule, *> = {\n\n    register: (tag, propsDef, init, ng) => {\n\n        const module = ng.module(tag, []).directive(dasherizeToCamel(tag), () => {\n\n            const scope = {};\n\n            for (const key of Object.keys(propsDef)) {\n                scope[key] = '=';\n            }\n\n            scope.props = '=';\n\n            return {\n                scope,\n\n                restrict: 'E',\n\n                controller: [ '$scope', '$element', ($scope, $element) => {\n                    function safeApply() {\n                        if ($scope.$root.$$phase !== '$apply' && $scope.$root.$$phase !== '$digest') {\n                            try {\n                                $scope.$apply();\n                            } catch (err) {\n                                // pass\n                            }\n                        }\n                    }\n\n                    const getProps = () => {\n                        return replaceObject($scope.props, item => {\n                            if (typeof item === 'function') {\n                                return function angularWrapped() : mixed {\n                                    // $FlowFixMe\n                                    const result = item.apply(this, arguments);\n                                    safeApply();\n                                    return result;\n                                };\n                            }\n                            return item;\n                        });\n                    };\n\n                    const instance = init(getProps());\n                    instance.render($element[0], CONTEXT.IFRAME);\n\n                    $scope.$watch(() => {\n                        instance.updateProps(getProps()).catch(noop);\n                    });\n                } ]\n            };\n        });\n\n        return module;\n    }\n};\n","/* @flow */\n/* eslint new-cap: 0 */\n\nimport { replaceObject } from 'belter/src';\n\nimport type { ComponentDriverType } from '../component';\nimport { CONTEXT } from '../constants';\n\ntype Angular2Injection = {||};\n\ntype Angular2Component = {||};\n\ntype Angular2Module = {||};\n\ntype Angular2 = {|\n    Component : ({| selector : string, template : string, inputs : $ReadOnlyArray<string> |}) => {|\n        Class : ({| constructor : $ReadOnlyArray<Angular2Injection | Function>, ngOnInit : () => void, ngDoCheck : () => void |}) => Angular2Component\n    |},\n    NgModule : ({| declarations : $ReadOnlyArray<Angular2Component>, exports : $ReadOnlyArray<Angular2Component> |}) => {|\n        Class : ({| constructor : () => void |}) => Angular2Module\n    |},\n    ElementRef : Angular2Injection,\n    NgZone : Angular2Injection\n|};\n\nconst equals = (obj1, obj2) => {\n    const checked = {};\n\n    for (const key in obj1) {\n        if (obj1.hasOwnProperty(key)) {\n            checked[key] = true;\n\n            if (obj1[key] !== obj2[key]) {\n                return false;\n            }\n        }\n    }\n\n    for (const key in obj2) {\n        if (!checked[key]) {\n            return false;\n        }\n    }\n\n    return true;\n};\n\nexport const angular2 : ComponentDriverType<*, Angular2, Angular2Module, *> = {\n\n    register: (tag, propsDef, init, { Component : AngularComponent, NgModule, ElementRef, NgZone }) => {\n        const getProps = (component) => {\n            return replaceObject({ ...component.internalProps, ...component.props }, item => {\n                if (typeof item === 'function') {\n                    return function angular2Wrapped() : void {\n                        // $FlowFixMe\n                        return component.zone.run(() => item.apply(this, arguments));\n                    };\n                }\n                return item;\n            });\n        };\n\n        const ComponentInstance =\n            AngularComponent({\n                selector: tag,\n                template: '<div></div>',\n                inputs:   [ 'props' ]\n            }).Class({\n                constructor: [ ElementRef, NgZone, function angularConstructor(elementRef, zone) {\n                    this._props = {};\n                    this.elementRef = elementRef;\n                    this.zone = zone;\n                } ],\n                ngOnInit () {\n                    const targetElement = this.elementRef.nativeElement;\n                    \n                    this.parent = init(getProps(this));\n                    this.parent.render(targetElement, CONTEXT.IFRAME);\n                },\n                ngDoCheck() {\n                    if (this.parent && !equals(this._props, this.props)) {\n                        this._props = { ...this.props };\n                        this.parent.updateProps(getProps(this));\n                    }\n                }\n            });\n\n\n        const ModuleInstance = NgModule({\n            declarations: [ ComponentInstance ],\n            exports:      [ ComponentInstance ]\n        }).Class({\n            constructor () {\n                // pass\n            }\n        });\n\n        return ModuleInstance;\n    }\n};\n","/* @flow */\n/* eslint react/react-in-jsx-scope: off */\n\nimport { destroyElement, toCSS } from 'belter/src';\n\nimport { type RenderOptionsType } from '../../parent/parent';\nimport { EVENT } from '../../constants';\n\nconst CLASS = {\n    VISIBLE:   'zoid-visible',\n    INVISIBLE: 'zoid-invisible'\n};\n\nexport function defaultContainerTemplate<P>({ uid, frame, prerenderFrame, doc, props, event, dimensions : { width, height } } : RenderOptionsType<P>) : ?HTMLElement {\n    if (__ZOID__.__DEFAULT_CONTAINER__) {\n        if (!frame || !prerenderFrame) {\n            return;\n        }\n\n        const div = doc.createElement('div');\n        div.setAttribute('id', uid);\n        const style = doc.createElement('style');\n        if (props.cspNonce) {\n            style.setAttribute('nonce', props.cspNonce);\n        }\n\n        style.appendChild(doc.createTextNode(`\n            #${ uid } {\n                display: inline-block;\n                position: relative;\n                width: ${ width };\n                height: ${ height };\n            }\n\n            #${ uid } > iframe {\n                display: inline-block;\n                position: absolute;\n                width: 100%;\n                height: 100%;\n                top: 0;\n                left: 0;\n                transition: opacity .2s ease-in-out;\n            }\n\n            #${ uid } > iframe.${ CLASS.INVISIBLE } {\n                opacity: 0;\n            }\n\n            #${ uid } > iframe.${ CLASS.VISIBLE } {\n                opacity: 1;\n        }\n        `));\n\n        div.appendChild(frame);\n        div.appendChild(prerenderFrame);\n        div.appendChild(style);\n\n        prerenderFrame.classList.add(CLASS.VISIBLE);\n        frame.classList.add(CLASS.INVISIBLE);\n    \n        event.on(EVENT.RENDERED, () => {\n            prerenderFrame.classList.remove(CLASS.VISIBLE);\n            prerenderFrame.classList.add(CLASS.INVISIBLE);\n    \n            frame.classList.remove(CLASS.INVISIBLE);\n            frame.classList.add(CLASS.VISIBLE);\n    \n            setTimeout(() => {\n                destroyElement(prerenderFrame);\n            }, 1);\n        });\n\n        event.on(EVENT.RESIZE, ({ width: newWidth, height: newHeight }) => {\n            if (typeof newWidth === 'number') {\n                div.style.width = toCSS(newWidth);\n            }\n    \n            if (typeof newHeight === 'number') {\n                div.style.height = toCSS(newHeight);\n            }\n        });\n\n        return div;\n    }\n}\n","/* @flow */\n/* eslint react/react-in-jsx-scope: off */\n\nimport { type RenderOptionsType } from '../../parent/parent';\n\nexport function defaultPrerenderTemplate<P>({ doc, props } : RenderOptionsType<P>) : ?HTMLElement {\n    if (__ZOID__.__DEFAULT_PRERENDER__) {\n        const html = doc.createElement('html');\n        const body = doc.createElement('body');\n        const style = doc.createElement('style');\n        const spinner = doc.createElement('div');\n        spinner.classList.add('spinner');\n\n        if (props.cspNonce) {\n            style.setAttribute('nonce', props.cspNonce);\n        }\n\n        html.appendChild(body);\n        body.appendChild(spinner);\n        body.appendChild(style);\n        style.appendChild(doc.createTextNode(`\n            html, body {\n                width: 100%;\n                height: 100%;\n            }\n\n            .spinner {\n                position: fixed;\n                max-height: 60vmin;\n                max-width: 60vmin;\n                height: 40px;\n                width: 40px;\n                top: 50%;\n                left: 50%;\n                box-sizing: border-box;\n                border: 3px solid rgba(0, 0, 0, .2);\n                border-top-color: rgba(33, 128, 192, 0.8);\n                border-radius: 100%;\n                animation: rotation .7s infinite linear;\n            }\n\n            @keyframes rotation {\n                from {\n                    transform: translateX(-50%) translateY(-50%) rotate(0deg);\n                }\n                to {\n                    transform: translateX(-50%) translateY(-50%) rotate(359deg);\n                }\n            }\n        `));\n\n        return html;\n    }\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { once, noop, type EventEmitterType } from 'belter/src';\nimport { isWindow, type CrossDomainWindowType, isWindowClosed, isSameDomain } from 'cross-domain-utils/src';\nimport { ProxyWindow, toProxyWindow } from 'post-robot/src';\n\nimport { PROP_SERIALIZATION } from '../constants';\n\nexport type EventHandlerType<T> = (T) => void | ZalgoPromise<void>;\n\nexport type timeoutPropType = number;\nexport type windowPropType = CrossDomainWindowType | ProxyWindow;\nexport type cspNoncePropType = string;\nexport type uidPropType = string;\nexport type closePropType = () => ZalgoPromise<void>;\nexport type focusPropType = () => ZalgoPromise<void>;\nexport type showPropType = () => ZalgoPromise<void>;\nexport type exportPropType<X> = (X) => ZalgoPromise<void>;\nexport type hidePropType = () => ZalgoPromise<void>;\nexport type resizePropType = ({| width : ?number, height : ?number |}) => ZalgoPromise<void>;\nexport type getParentPropType = () => CrossDomainWindowType;\nexport type getParentDomainPropType = () => string;\n\nexport type onDisplayPropType = EventHandlerType<void>;\nexport type onRenderedPropType = EventHandlerType<void>;\nexport type onRenderPropType = EventHandlerType<void>;\nexport type onClosePropType = EventHandlerType<void>;\nexport type onDestroyPropType = EventHandlerType<void>;\nexport type onResizePropType = EventHandlerType<void>;\nexport type onFocusPropType = EventHandlerType<void>;\nexport type onErrorPropType = EventHandlerType<mixed>;\nexport type onPropsPropType<P> = ((PropsType<P>) => void) => void; // eslint-disable-line no-use-before-define\n\n// eslint-disable-next-line flowtype/require-exact-type\nexport type PropsInputType<P> = {\n    timeout? : timeoutPropType,\n    window? : windowPropType,\n    cspNonce? : cspNoncePropType,\n\n    onDisplay? : onDisplayPropType,\n    onRendered? : onRenderedPropType,\n    onRender? : onRenderPropType,\n    onClose? : onClosePropType,\n    onDestroy? : onDestroyPropType,\n    onResize? : onResizePropType,\n    onFocus? : onFocusPropType,\n    onError? : onErrorPropType,\n    onProps? : onPropsPropType<P>\n} & P;\n\n// eslint-disable-next-line flowtype/require-exact-type\nexport type PropsType<P> = {\n    timeout? : timeoutPropType,\n    window? : ?windowPropType,\n    close? : ?closePropType,\n    focus? : ?focusPropType,\n    resize? : ?resizePropType,\n    uid : uidPropType,\n    cspNonce? : ?cspNoncePropType,\n\n    onDisplay : onDisplayPropType,\n    onRendered : onRenderedPropType,\n    onRender : onRenderPropType,\n    onClose : onClosePropType,\n    onDestroy : onDestroyPropType,\n    onResize : onResizePropType,\n    onFocus : onFocusPropType,\n    onError : onErrorPropType,\n    onProps : onPropsPropType<P>\n} & P;\n\ntype PropDefinitionType<T, P, S : string, X> = {|\n    type : S,\n    alias? : string,\n    value? : ({|\n        props : P,\n        state : Object,\n        close : () => ZalgoPromise<void>,\n        focus : () => ZalgoPromise<void>,\n        onError : (mixed) => ZalgoPromise<void>,\n        event : EventEmitterType\n    |}) => ?T,\n    default? : ({|\n        props : P,\n        state : Object,\n        close : () => ZalgoPromise<void>,\n        focus : () => ZalgoPromise<void>,\n        onError : (mixed) => ZalgoPromise<void>,\n        event : EventEmitterType\n    |}) => ?T,\n    decorate? : ({|\n        value : T,\n        props : PropsType<P>,\n        state : Object,\n        close : () => ZalgoPromise<void>,\n        focus : () => ZalgoPromise<void>,\n        onError : (mixed) => ZalgoPromise<void>,\n        event : EventEmitterType\n    |}) => T,\n    childDecorate? : ({|\n        value : ?T,\n        uid : string,\n        close : () => ZalgoPromise<void>,\n        focus : () => ZalgoPromise<void>,\n        onError : (mixed) => ZalgoPromise<void>,\n        onProps : ((PropsType<P>) => void) => void,\n        resize : ({| width : ?number, height : ?number |}) => ZalgoPromise<void>,\n        getParentDomain : () => string,\n        getParent : () => CrossDomainWindowType,\n        show : () => ZalgoPromise<void>,\n        hide : () => ZalgoPromise<void>,\n        export : (X) => ZalgoPromise<void>\n    |}) => ?T,\n    required? : boolean,\n    queryParam? : boolean | string | ({| value : T |}) => (string | ZalgoPromise<string>),\n    // eslint-disable-next-line no-undef\n    queryValue? : <V>({| value : T |}) => (ZalgoPromise<V> | V),\n    sendToChild? : boolean,\n    allowDelegate? : boolean,\n    validate? : ({| value : T, props : PropsInputType<P> |}) => void,\n    sameDomain? : boolean,\n    serialization? : $Values<typeof PROP_SERIALIZATION>\n|};\n\nexport type BooleanPropDefinitionType<T : boolean, P, X> = PropDefinitionType<T, P, 'boolean', X>;\nexport type StringPropDefinitionType<T : string, P, X> = PropDefinitionType<T, P, 'string', X>;\nexport type NumberPropDefinitionType<T : number, P, X> = PropDefinitionType<T, P, 'number', X>;\nexport type FunctionPropDefinitionType<T : Function, P, X> = PropDefinitionType<T, P, 'function', X>;\nexport type ArrayPropDefinitionType<T : Array<*> | $ReadOnlyArray<*>, P, X> = PropDefinitionType<T, P, 'array', X>; // eslint-disable-line flowtype/no-mutable-array\nexport type ObjectPropDefinitionType<T : Object, P, X> = PropDefinitionType<T, P, 'object', X>;\n\nexport type MixedPropDefinitionType<P, X> = BooleanPropDefinitionType<*, P, X> | StringPropDefinitionType<*, P, X> | NumberPropDefinitionType<*, P, X> | FunctionPropDefinitionType<*, P, X> | ObjectPropDefinitionType<*, P, X> | ArrayPropDefinitionType<*, P, X>;\n\nexport type UserPropsDefinitionType<P, X> = {\n    [string] : MixedPropDefinitionType<P, X>\n};\n\nexport type BuiltInPropsDefinitionType<P, X> = {|\n    timeout : NumberPropDefinitionType<timeoutPropType, P, X>,\n    window : ObjectPropDefinitionType<windowPropType, P, X>,\n    close : FunctionPropDefinitionType<closePropType, P, X>,\n    focus : FunctionPropDefinitionType<focusPropType, P, X>,\n    resize : FunctionPropDefinitionType<resizePropType, P, X>,\n    uid : StringPropDefinitionType<uidPropType, P, X>,\n    cspNonce : StringPropDefinitionType<cspNoncePropType, P, X>,\n    getParent : FunctionPropDefinitionType<getParentPropType, P, X>,\n    getParentDomain : FunctionPropDefinitionType<getParentDomainPropType, P, X>,\n    hide : FunctionPropDefinitionType<hidePropType, P, X>,\n    show : FunctionPropDefinitionType<showPropType, P, X>,\n    export : FunctionPropDefinitionType<exportPropType<X>, P, X>,\n\n    onDisplay : FunctionPropDefinitionType<onDisplayPropType, P, X>,\n    onRendered : FunctionPropDefinitionType<onRenderedPropType, P, X>,\n    onRender : FunctionPropDefinitionType<onRenderPropType, P, X>,\n    onClose : FunctionPropDefinitionType<onClosePropType, P, X>,\n    onDestroy : FunctionPropDefinitionType<onDestroyPropType, P, X>,\n    onResize : FunctionPropDefinitionType<onClosePropType, P, X>,\n    onFocus : FunctionPropDefinitionType<onFocusPropType, P, X>,\n    onError : FunctionPropDefinitionType<onErrorPropType, P, X>,\n    onProps : FunctionPropDefinitionType<onPropsPropType<P>, P, X>\n|};\n\nexport type PropsDefinitionType<P, X> = {|\n    ...BuiltInPropsDefinitionType<P, X>,\n    [ string ] : MixedPropDefinitionType<P, X>\n|};\n\nconst defaultNoop = () => noop;\nconst decorateOnce = ({ value }) => once(value);\n\nexport function getBuiltInProps<P, X>() : BuiltInPropsDefinitionType<P, X> {\n    return {\n        window: {\n            type:          'object',\n            sendToChild:   false,\n            required:      false,\n            allowDelegate: true,\n            validate:      ({ value }) => {\n                if (!isWindow(value) && !ProxyWindow.isProxyWindow(value)) {\n                    throw new Error(`Expected Window or ProxyWindow`);\n                }\n\n                if (isWindow(value)) {\n                    // $FlowFixMe\n                    if (isWindowClosed(value)) {\n                        throw new Error(`Window is closed`);\n                    }\n\n                    // $FlowFixMe\n                    if (!isSameDomain(value)) {\n                        throw new Error(`Window is not same domain`);\n                    }\n                }\n            },\n            decorate: ({ value }) => {\n                return toProxyWindow(value);\n            }\n        },\n\n        timeout: {\n            type:        'number',\n            required:    false,\n            sendToChild: false\n        },\n\n        close: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            childDecorate: ({ close }) => close\n        },\n\n        focus: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            childDecorate: ({ focus }) => focus\n        },\n\n        resize: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            childDecorate: ({ resize }) => resize\n        },\n\n        uid: {\n            type:          'string',\n            required:      false,\n            sendToChild:   false,\n            childDecorate: ({ uid }) => uid\n        },\n\n        cspNonce: {\n            type:     'string',\n            required: false\n        },\n\n        getParent: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            childDecorate: ({ getParent }) => getParent\n        },\n\n        getParentDomain: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            childDecorate: ({ getParentDomain }) => getParentDomain\n        },\n\n        show: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            childDecorate: ({ show }) => show\n        },\n\n        hide: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            childDecorate: ({ hide }) => hide\n        },\n\n        export: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            childDecorate: ({ 'export': xport }) => xport\n        },\n\n        onDisplay: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            allowDelegate: true,\n            default:       defaultNoop,\n            decorate:      decorateOnce\n        },\n\n        onRendered: {\n            type:        'function',\n            required:    false,\n            sendToChild: false,\n            default:     defaultNoop,\n            decorate:    decorateOnce\n        },\n\n        onRender: {\n            type:        'function',\n            required:    false,\n            sendToChild: false,\n            default:     defaultNoop,\n            decorate:    decorateOnce\n        },\n\n        onClose: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            allowDelegate: true,\n            default:       defaultNoop,\n            decorate:      decorateOnce\n        },\n\n        onDestroy: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            allowDelegate: true,\n            default:       defaultNoop,\n            decorate:      decorateOnce\n        },\n\n        onResize: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            allowDelegate: true,\n            default:       defaultNoop\n        },\n\n        onFocus: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            allowDelegate: true,\n            default:       defaultNoop\n        },\n\n        onError: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            childDecorate: ({ onError }) => onError\n        },\n\n        onProps: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            default:       defaultNoop,\n            childDecorate: ({ onProps }) => onProps\n        }\n    };\n}\n","/* @flow */\n/* eslint max-lines: 0 */\n\nimport { setup as setupPostRobot, on, send, bridge, toProxyWindow, destroy as destroyPostRobot } from 'post-robot/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { isWindow, getDomain, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { noop, isElement, cleanup, memoize, identity } from 'belter/src';\n\nimport { getChildPayload, childComponent, type ChildComponent } from '../child';\nimport { type RenderOptionsType, type ParentHelpers, parentComponent } from '../parent/parent';\nimport { CONTEXT, POST_MESSAGE, WILDCARD, DEFAULT_DIMENSIONS } from '../constants';\nimport { react, angular, vue, angular2 } from '../drivers';\nimport { getGlobal, destroyGlobal } from '../lib';\nimport type { CssDimensionsType, StringMatcherType } from '../types';\n\nimport { validateOptions } from './validate';\nimport { defaultContainerTemplate, defaultPrerenderTemplate } from './templates';\nimport { getBuiltInProps, type UserPropsDefinitionType, type PropsDefinitionType, type PropsInputType, type PropsType } from './props';\n\ntype LoggerPayload = { [string] : ?string | ?boolean };\n\n// eslint-disable-next-line flowtype/require-exact-type\ntype Logger = {\n    info : (event : string, payload? : LoggerPayload) => any // eslint-disable-line flowtype/no-weak-types\n};\n\n/*  Component\n    ---------\n\n    This is the spec for the component. The idea is, when I call zoid.create(), it will create a new instance\n    of Component with the blueprint needed to set up ParentComponents and ChildComponents.\n\n    This is the one portion of code which is required by -- and shared to -- both the parent and child windows, and\n    contains all of the configuration needed for them to set themselves up.\n*/\n\ntype Attributes = {|\n    iframe? : { [string] : string },\n    popup? : { [string] : string }\n|};\n\nexport type ComponentOptionsType<P, X> = {|\n\n    tag : string,\n\n    url : string | ({| props : PropsType<P> |}) => string,\n    domain? : string | RegExp,\n    bridgeUrl? : string,\n\n    props? : UserPropsDefinitionType<P, X>,\n\n    dimensions? : CssDimensionsType,\n    autoResize? : {| width? : boolean, height? : boolean, element? : string |},\n\n    allowedParentDomains? : StringMatcherType,\n\n    attributes? : Attributes | ({| props : PropsType<P> |}) => Attributes,\n\n    eligible? : ({| props : PropsInputType<P> |}) => {| eligible : boolean, reason? : string |},\n\n    defaultContext? : $Values<typeof CONTEXT>,\n\n    containerTemplate? : (RenderOptionsType<P>) => ?HTMLElement,\n    prerenderTemplate? : (RenderOptionsType<P>) => ?HTMLElement,\n\n    validate? : ({| props : PropsInputType<P> |}) => void,\n\n    logger? : Logger,\n\n    exports? : ({| getExports : () => ZalgoPromise<X> |}) => X\n|};\n\nexport type AttributesType = {|\n    iframe? : { [string] : string },\n    popup? : { [string] : string }\n|};\n\ntype AutoResizeType = {|\n    width? : boolean,\n    height? : boolean,\n    element? : string\n|};\n\nexport type NormalizedComponentOptionsType<P, X> = {|\n    tag : string,\n    name : string,\n\n    url : string | ({| props : PropsType<P> |}) => string,\n    domain : ?(string | RegExp),\n    bridgeUrl : ?string,\n\n    propsDef : PropsDefinitionType<P, X>,\n    dimensions : CssDimensionsType,\n    autoResize : AutoResizeType,\n\n    allowedParentDomains : StringMatcherType,\n\n    attributes : AttributesType | ({| props : PropsType<P> |}) => AttributesType,\n\n    eligible : ({| props : PropsInputType<P> |}) => {| eligible : boolean, reason? : string |},\n\n    defaultContext : $Values<typeof CONTEXT>,\n\n    containerTemplate : (RenderOptionsType<P>) => ?HTMLElement,\n    prerenderTemplate : ?(RenderOptionsType<P>) => ?HTMLElement,\n\n    validate : ?({| props : PropsInputType<P> |}) => void,\n    logger : Logger,\n\n    exports : ({| getExports : () => ZalgoPromise<X> |}) => X\n|};\n\nexport type ZoidComponentInstance<P, X = void> = {|\n    ...ParentHelpers<P>,\n    ...X,\n    isEligible : () => boolean,\n    clone : () => ZoidComponentInstance<P, X>,\n    render : (container? : string | HTMLElement, context? : $Values<typeof CONTEXT>) => ZalgoPromise<void>,\n    renderTo : (target : CrossDomainWindowType, container? : string, context? : $Values<typeof CONTEXT>) => ZalgoPromise<void>\n|};\n\n// eslint-disable-next-line flowtype/require-exact-type\nexport type ZoidComponent<P, X = void> = {\n    (props? : PropsInputType<P> | void) : ZoidComponentInstance<P, X>,\n    // eslint-disable-next-line no-undef\n    driver : <T>(string, mixed) => T,\n    isChild : () => boolean,\n    xprops? : PropsType<P>,\n    canRenderTo : (CrossDomainWindowType) => ZalgoPromise<boolean>,\n    instances : $ReadOnlyArray<ZoidComponentInstance<P, X>>\n};\n\nconst getDefaultAttributes = () : AttributesType => {\n    // $FlowFixMe\n    return {};\n};\n\nconst getDefaultAutoResize = () : AutoResizeType => {\n    // $FlowFixMe\n    return {};\n};\n\nconst getDefaultExports = <X>() : () => X => {\n    // $FlowFixMe\n    return noop;\n};\n\nfunction normalizeOptions<P, X>(options : ComponentOptionsType<P, X>) : NormalizedComponentOptionsType<P, X> {\n    let {\n        tag,\n        url,\n        domain,\n        bridgeUrl,\n        props: propsDef = {},\n        dimensions = {},\n        autoResize = getDefaultAutoResize(),\n        allowedParentDomains = WILDCARD,\n        attributes = getDefaultAttributes(),\n        defaultContext = CONTEXT.IFRAME,\n        containerTemplate = (__ZOID__.__DEFAULT_CONTAINER__ ? defaultContainerTemplate : null),\n        prerenderTemplate = (__ZOID__.__DEFAULT_PRERENDER__ ? defaultPrerenderTemplate : null),\n        validate,\n        eligible = () => ({ eligible: true }),\n        logger = { info: noop },\n        exports: xports = getDefaultExports()\n    } = options;\n\n    const name = tag.replace(/-/g, '_');\n    const { width = DEFAULT_DIMENSIONS.WIDTH, height = DEFAULT_DIMENSIONS.HEIGHT } = dimensions;\n\n    // $FlowFixMe\n    propsDef = { ...getBuiltInProps(), ...propsDef };\n\n    if (!containerTemplate) {\n        throw new Error(`Container template required`);\n    }\n\n    return {\n        name,\n        tag,\n        url,\n        domain,\n        bridgeUrl,\n        propsDef,\n        dimensions: { width, height },\n        autoResize,\n        allowedParentDomains,\n        attributes,\n        defaultContext,\n        containerTemplate,\n        prerenderTemplate,\n        validate,\n        logger,\n        eligible,\n        exports:     xports\n    };\n}\n\nlet cleanInstances = cleanup();\nconst cleanZoid = cleanup();\n\nexport type Component<P, X> = {|\n    init : (props? : PropsInputType<P> | void) => ZoidComponentInstance<P, X>,\n    instances : $ReadOnlyArray<ZoidComponentInstance<P, X>>,\n    driver : (string, mixed) => mixed,\n    isChild : () => boolean,\n    canRenderTo : (CrossDomainWindowType) => ZalgoPromise<boolean>,\n    registerChild : () => ?ChildComponent<P>\n|};\n\nexport function component<P, X>(opts : ComponentOptionsType<P, X>) : Component<P, X> {\n    if (__DEBUG__) {\n        validateOptions(opts);\n    }\n\n    const options = normalizeOptions(opts);\n\n    const {\n        name,\n        tag,\n        defaultContext,\n        propsDef,\n        eligible\n    } = options;\n\n    const global = getGlobal();\n    const driverCache = {};\n    const instances = [];\n\n    const isChild = () : boolean => {\n        const payload = getChildPayload();\n        return Boolean(payload && payload.tag === tag && payload.childDomain === getDomain());\n    };\n\n    const registerChild = memoize(() : ?ChildComponent<P> => {\n        if (isChild()) {\n            if (window.xprops) {\n                delete global.components[tag];\n                throw new Error(`Can not register ${ name } as child - child already registered`);\n            }\n\n            const child = childComponent(options);\n            child.init();\n            return child;\n        }\n    });\n\n    const listenForDelegate = () => {\n        const allowDelegateListener = on(`${ POST_MESSAGE.ALLOW_DELEGATE }_${ name }`, () => {\n            return true;\n        });\n\n        const delegateListener = on(`${ POST_MESSAGE.DELEGATE }_${ name }`, ({ source, data: { overrides } }) => {\n            return {\n                parent: parentComponent(options, overrides, source)\n            };\n        });\n\n        cleanZoid.register(allowDelegateListener.cancel);\n        cleanZoid.register(delegateListener.cancel);\n    };\n\n    const canRenderTo = (win : CrossDomainWindowType) : ZalgoPromise<boolean> => {\n        return send(win, `${ POST_MESSAGE.ALLOW_DELEGATE }_${ name }`).then(({ data }) => {\n            return data;\n        }).catch(() => {\n            return false;\n        });\n    };\n\n    const getDefaultContainer = (context : $Values<typeof CONTEXT>, container? : string | HTMLElement) : string | HTMLElement => {\n        if (container) {\n            if (typeof container !== 'string' && !isElement(container)) {\n                throw new TypeError(`Expected string or element selector to be passed`);\n            }\n\n            return container;\n        }\n\n        if (context === CONTEXT.POPUP) {\n            return 'body';\n        }\n\n        throw new Error(`Expected element to be passed to render iframe`);\n    };\n\n    const getDefaultContext = (props : PropsInputType<P>, context : ?$Values<typeof CONTEXT>) : ZalgoPromise<$Values<typeof CONTEXT>> => {\n        return ZalgoPromise.try(() => {\n            if (props.window) {\n                return toProxyWindow(props.window).getType();\n            }\n\n            if (context) {\n                if (context !== CONTEXT.IFRAME && context !== CONTEXT.POPUP) {\n                    throw new Error(`Unrecognized context: ${ context }`);\n                }\n\n                return context;\n            }\n\n            return defaultContext;\n        });\n    };\n\n    const getDefaultInputProps = () : PropsInputType<P> => {\n        // $FlowFixMe\n        return {};\n    };\n\n    const init = (inputProps? : PropsInputType<P> | void) : ZoidComponentInstance<P, X> => {\n        // eslint-disable-next-line prefer-const\n        let instance;\n        const props = inputProps || getDefaultInputProps();\n\n        const { eligible: eligibility, reason } = eligible({ props });\n        const isEligible = () => eligibility;\n\n        const onDestroy = props.onDestroy;\n        props.onDestroy = (...args) => {\n            if (instance && eligibility) {\n                instances.splice(instances.indexOf(instance), 1);\n            }\n\n            if (onDestroy) {\n                return onDestroy(...args);\n            }\n        };\n\n        const parent = parentComponent(options);\n        parent.init();\n\n        if (eligibility) {\n            parent.setProps(props);\n        } else {\n            if (props.onDestroy) {\n                props.onDestroy();\n            }\n        }\n\n        cleanInstances.register(err => {\n            parent.destroy(err || new Error(`zoid destroyed all components`));\n        });\n\n        const render = (target, container, context) => {\n            return ZalgoPromise.try(() => {\n                if (!eligibility) {\n                    const err = new Error(reason || `${ name } component is not eligible`);\n\n                    return parent.destroy(err).then(() => {\n                        throw err;\n                    });\n                }\n\n                if (!isWindow(target)) {\n                    throw new Error(`Must pass window to renderTo`);\n                }\n\n                return getDefaultContext(props, context);\n\n            }).then(finalContext => {\n                container = getDefaultContainer(finalContext, container);\n                return parent.render(target, container, finalContext);\n\n            }).catch(err => {\n                return parent.destroy(err).then(() => {\n                    throw err;\n                });\n            });\n        };\n\n        const clone = ({ decorate = identity } = {}) => {\n            return init(decorate(props));\n        };\n\n        instance = {\n            ...parent.getExports(),\n            ...parent.getHelpers(),\n            isEligible,\n            clone,\n            render:   (container, context) => render(window, container, context),\n            renderTo: (target, container, context) => render(target, container, context)\n        };\n\n        if (eligibility) {\n            instances.push(instance);\n        }\n\n        return instance;\n    };\n\n    const driver = (driverName : string, dep : mixed) : mixed => {\n        if (__ZOID__.__FRAMEWORK_SUPPORT__) {\n            const drivers = { react, angular, vue, angular2 };\n\n            if (!drivers[driverName]) {\n                throw new Error(`Could not find driver for framework: ${ driverName }`);\n            }\n\n            if (!driverCache[driverName]) {\n                driverCache[driverName] = drivers[driverName].register(tag, propsDef, init, dep);\n            }\n\n            return driverCache[driverName];\n        } else {\n            throw new Error(`Driver support not enabled`);\n        }\n    };\n\n    registerChild();\n    listenForDelegate();\n\n    global.components = global.components || {};\n    if (global.components[tag]) {\n        throw new Error(`Can not register multiple components with the same tag: ${ tag }`);\n    }\n    global.components[tag] = true;\n\n    return {\n        init,\n        instances,\n        driver,\n        isChild,\n        canRenderTo,\n        registerChild\n    };\n}\n\nexport type ComponentDriverType<P, L, D, X> = {|\n    register : (string, PropsDefinitionType<P, X>, (PropsInputType<P>) => ZoidComponentInstance<P, X>, L) => D\n|};\n\nexport function create<P, X>(options : ComponentOptionsType<P, X>) : ZoidComponent<P, X> {\n    setupPostRobot();\n\n    const comp = component(options);\n\n    const init = (props? : PropsInputType<P> | void) => comp.init(props);\n    init.driver = (name, dep) => comp.driver(name, dep);\n    init.isChild = () => comp.isChild();\n    init.canRenderTo = (win) => comp.canRenderTo(win);\n    init.instances = comp.instances;\n\n    const child = comp.registerChild();\n    if (child) {\n        window.xprops = init.xprops = child.getProps();\n    }\n\n    return init;\n}\n\nexport function destroyComponents(err? : mixed) : ZalgoPromise<void> {\n    if (bridge) {\n        bridge.destroyBridges();\n    }\n\n    const destroyPromise = cleanInstances.all(err);\n    cleanInstances = cleanup();\n    return destroyPromise;\n}\n\nexport const destroyAll = destroyComponents;\n\nexport function destroy(err? : mixed) : ZalgoPromise<void> {\n    destroyAll();\n    destroyGlobal();\n    destroyPostRobot();\n    return cleanZoid.all(err);\n}\n"],"sourceRoot":""}